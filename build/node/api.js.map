{"version":3,"file":"api.js","sources":["src/api-query/Embodied.js","src/api-query/FilterBody.js","src/api-query/Geo.js","src/api-query/Range.js","src/api-query/Filter.js","src/api-query/Aggregation.js","src/api-query/Query.js","src/globals/globals.js","src/api/assertions.js","src/api/auth/Auth.js","src/api/ApiHelper.js","src/api/auth/AuthProvider.js","src/api/auth/FacebookAuthProvider.js","src/api/auth/GithubAuthProvider.js","src/api/auth/GoogleAuthProvider.js","src/api/auth/AuthApiHelper.js","src/api/data/DataApiHelper.js","src/crypt/Base64.js","src/api/Transport.js","src/api/ClientMessage.js","src/api/ClientResponse.js","src/api/browser/AjaxTransport.js","src/api/TransportFactory.js","src/api/ClientRequest.js","src/api/WeDeploy.js","src/api/node/NodeTransport.js","src/env/node.js"],"sourcesContent":["'use strict';\n\n/**\n * Class responsible for storing an object that will be printed as JSON\n * when the `toString` method is called.\n */\nclass Embodied {\n\t/**\n\t * Constructs a Embodied instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.body_ = {};\n\t}\n\n\t/**\n\t * Gets the json object that represents this instance.\n\t * @return {!Object}\n\t */\n\tbody() {\n\t\treturn this.body_;\n\t}\n\n\t/**\n\t * If the given object is an instance of Embodied, this will\n\t * return its body content. Otherwise this will return the\n\t * original object.\n\t * @param {*} obj\n\t * @return {*}\n\t * @static\n\t */\n\tstatic toBody(obj) {\n\t\treturn (obj instanceof Embodied) ? obj.body() : obj;\n\t}\n\n\t/**\n\t * Gets the json string that represents this instance.\n\t * @return {string}\n\t */\n\ttoString() {\n\t\treturn JSON.stringify(this.body());\n\t}\n}\n\nexport default Embodied;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for storing and handling the body contents\n * of a Filter instance.\n */\nclass FilterBody {\n\t/**\n\t * Constructs a {@link FilterBody} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should\n\t *   be the filter's operator (like \">=\"). Otherwise, this will be\n\t *   used as the filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @constructor\n\t */\n\tconstructor(field, operatorOrValue, opt_value) {\n\t\tvar obj = {\n\t\t\toperator: core.isDef(opt_value) ? operatorOrValue : '='\n\t\t};\n\n\t\tvar value = core.isDef(opt_value) ? opt_value : operatorOrValue;\n\n\t\tif (core.isDefAndNotNull(value)) {\n\t\t\tif (value instanceof Embodied) {\n\t\t\t\tvalue = value.body();\n\t\t\t}\n\t\t\tobj.value = value;\n\t\t}\n\n\t\tif (core.isDefAndNotNull(field)) {\n\t\t\tthis.createBody_(field, obj);\n\t\t} else {\n\t\t\tthis.createBody_('and', []);\n\t\t}\n\n\t}\n\n\t/**\n\t * Composes the current filter with the given operator.\n\t * @param {string} operator\n\t * @param {Filter=} opt_filter Another filter to compose this filter with,\n\t *   if the operator is not unary.\n\t */\n\tadd(operator, opt_filter) {\n\t\tif (opt_filter) {\n\t\t\tthis.addArrayOperator_(operator, opt_filter);\n\t\t} else {\n\t\t\tthis.createBody_(operator, this.body_);\n\t\t}\n\t}\n\n\t/**\n\t * Composes the current filter with an operator that stores its values in an array.\n\t * @param {string} operator\n\t * @param {!Filter} filter\n\t * @protected\n\t */\n\taddArrayOperator_(operator, filter) {\n\t\tif (!(this.body_[operator] instanceof Array)) {\n\t\t\tthis.createBody_(operator, [this.body_]);\n\t\t}\n\t\tthis.body_[operator].push(filter.body());\n\t}\n\n\t/**\n\t * Adds filters to be composed with this filter body using the given operator.\n\t * @param {string} operator\n\t * @param {...*} filters A variable amount of filters to be composed.\n\t */\n\taddMany(operator, ...filters) {\n\t\tfor (var i = 0; i < filters.length; i++) {\n\t\t\tthis.add(operator, filters[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new body object, setting the requestd key to the given value.\n\t * @param {string} key The key to set in the new body object\n\t * @param {*} value The value the requested key should have in the new body object.\n\t * @protected\n\t */\n\tcreateBody_(key, value) {\n\t\tthis.body_ = {};\n\t\tthis.body_[key] = value;\n\t}\n\n\t/**\n\t * Gets the json object that represents this filter's body.\n\t * @return {!Object}\n\t */\n\tgetObject() {\n\t\treturn this.body_;\n\t}\n}\n\nexport default FilterBody;\n","'use strict';\n\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for building different types of geometric\n * shapes.\n */\nclass Geo {\n\t/**\n\t * Creates a new {@link BoundingBox} instance.\n\t * @param {*} upperLeft The upper left point.\n\t * @param {*} lowerRight The lower right point.\n\t * @return {!BoundingBox}\n\t * @static\n\t */\n\tstatic boundingBox(upperLeft, lowerRight) {\n\t\treturn new Geo.BoundingBox(upperLeft, lowerRight);\n\t}\n\n\t/**\n\t * Creates a new {@link Circle} instance.\n\t * @param {*} center The circle's center coordinate.\n\t * @param {string} radius The circle's radius.\n\t * @return {!Circle}\n\t * @static\n\t */\n\tstatic circle(center, radius) {\n\t\treturn new Geo.Circle(center, radius);\n\t}\n\n\t/**\n\t * Creates a new {@link Line} instance.\n\t * @param {...*} points This line's points.\n\t * @return {!Line}\n\t * @static\n\t */\n\tstatic line(...points) {\n\t\treturn new Geo.Line(...points);\n\t}\n\n\t/**\n\t * Creates a new {@link Point} instance.\n\t * @param {number} lat The latitude coordinate\n\t * @param {number} lon The longitude coordinate\n\t * @return {!Point}\n\t * @static\n\t */\n\tstatic point(lat, lon) {\n\t\treturn new Geo.Point(lat, lon);\n\t}\n\n\t/**\n\t * Creates a new {@link Polygon} instance.\n\t * @param {...*} points This polygon's points.\n\t * @return {!Polygon}\n\t * @static\n\t */\n\tstatic polygon(...points) {\n\t\treturn new Geo.Polygon(...points);\n\t}\n}\n\n/**\n * Class that represents a point coordinate.\n * @extends {Embodied}\n */\nclass Point extends Embodied {\n\t/**\n\t * Constructs a {@link Point} instance.\n\t * @param {number} lat The latitude coordinate\n\t * @param {number} lon The longitude coordinate\n\t * @constructor\n\t */\n\tconstructor(lat, lon) {\n\t\tsuper();\n\t\tthis.body_ = [lat, lon];\n\t}\n}\nGeo.Point = Point;\n\n/**\n * Class that represents a line.\n * @extends {Embodied}\n */\nclass Line extends Embodied {\n\t/**\n\t * Constructs a {@link Line} instance.\n\t * @param {...*} points This line's points.\n\t * @constructor\n\t */\n\tconstructor(...points) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'linestring',\n\t\t\tcoordinates: points.map(point => Embodied.toBody(point))\n\t\t};\n\t}\n}\nGeo.Line = Line;\n\n/**\n * Class that represents a bounding box.\n * @extends {Embodied}\n */\nclass BoundingBox extends Embodied {\n\t/**\n\t * Constructs a {@link BoundingBox} instance.\n\t * @param {*} upperLeft The upper left point.\n\t * @param {*} lowerRight The lower right point.\n\t * @constructor\n\t */\n\tconstructor(upperLeft, lowerRight) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'envelope',\n\t\t\tcoordinates: [Embodied.toBody(upperLeft), Embodied.toBody(lowerRight)]\n\t\t};\n\t}\n\n\t/**\n\t * Gets this bounding box's points.\n\t * @return {!Array}\n\t */\n\tgetPoints() {\n\t\treturn this.body_.coordinates;\n\t}\n}\nGeo.BoundingBox = BoundingBox;\n\n/**\n * Class that represents a circle.\n * @extends {Embodied}\n */\nclass Circle extends Embodied {\n\t/**\n\t * Constructs a {@link Circle} instance.\n\t * @param {*} center The circle's center coordinate.\n\t * @param {string} radius The circle's radius.\n\t * @constructor\n\t */\n\tconstructor(center, radius) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'circle',\n\t\t\tcoordinates: Embodied.toBody(center),\n\t\t\tradius: radius\n\t\t};\n\t}\n\n\t/**\n\t * Gets this circle's center coordinate.\n\t * @return {*}\n\t */\n\tgetCenter() {\n\t\treturn this.body_.coordinates;\n\t}\n\n\t/**\n\t * Gets this circle's radius.\n\t * @return {string}\n\t */\n\tgetRadius() {\n\t\treturn this.body_.radius;\n\t}\n}\nGeo.Circle = Circle;\n\n/**\n * Class that represents a polygon.\n * @extends {Embodied}\n */\nclass Polygon extends Embodied {\n\t/**\n\t * Constructs a {@link Polygon} instance.\n\t * @param {...*} points This polygon's points.\n\t * @constructor\n\t */\n\tconstructor(...points) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'polygon',\n\t\t\tcoordinates: []\n\t\t};\n\t\tthis.addCoordinates_(...points);\n\t}\n\n\t/**\n\t * Adds the given points as coordinates for this polygon.\n\t * @param {...*} points\n\t * @protected\n\t */\n\taddCoordinates_(...points) {\n\t\tthis.body_.coordinates.push(points.map(point => Embodied.toBody(point)));\n\t}\n\n\t/**\n\t * Adds the given points as a hole inside this polygon.\n\t * @param  {...*} points\n\t * @chainnable\n\t */\n\thole(...points) {\n\t\tthis.addCoordinates_(...points);\n\t\treturn this;\n\t}\n}\nGeo.Polygon = Polygon;\n\nexport default Geo;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for building range objects to be used by `Filter`.\n * @extends {Embodied}\n */\nclass Range extends Embodied {\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @param {*} opt_to\n\t * @constructor\n\t */\n\tconstructor(from, opt_to) {\n\t\tsuper();\n\t\tif (core.isDefAndNotNull(from)) {\n\t\t\tthis.body_.from = from;\n\t\t}\n\t\tif (core.isDefAndNotNull(opt_to)) {\n\t\t\tthis.body_.to = opt_to;\n\t\t}\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic from(from) {\n\t\treturn new Range(from);\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @param {*} to\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic range(from, to) {\n\t\treturn new Range(from, to);\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} to\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic to(to) {\n\t\treturn new Range(null, to);\n\t}\n}\n\nexport default Range;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\nimport FilterBody from './FilterBody';\nimport Geo from './Geo';\nimport Range from './Range';\n\n/**\n * Class responsible for building filters.\n * @extends {Embodied}\n */\nclass Filter extends Embodied {\n\t/**\n\t * Constructs a {@link Filter} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should\n\t *   be the filter's operator (like \">=\"). Otherwise, this will be\n\t *   used as the filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @constructor\n\t */\n\tconstructor(field, operatorOrValue, opt_value) {\n\t\tsuper();\n\t\tthis.body_ = new FilterBody(field, operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the given operator.\n\t * @param {string} operator\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tadd(operator, fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tvar filter = fieldOrFilter ? Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value) : null;\n\t\tthis.body_.add(operator, filter);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds filters to be composed with this filter using the given operator.\n\t * @param {string} operator\n\t * @param {...*} filters A variable amount of filters to be composed.\n\t * @chainnable\n\t */\n\taddMany(operator, ...filters) {\n\t\tthis.body_.addMany(operator, ...filters);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"and\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tand(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn this.add('and', fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"any\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} values A variable amount of values to be used with\n\t *   the \"none\" operator. Can be passed either as a single array or as\n\t *   separate params.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic any(field) {\n\t\tvar values = Array.prototype.slice.call(arguments, 1);\n\t\tif (values.length === 1 && values[0] instanceof Array) {\n\t\t\tvalues = values[0];\n\t\t}\n\t\treturn new Filter(field, 'any', values);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gp\" operator.\n\t * This is a special use case of `Filter.polygon` for bounding\n\t * boxes.\n\t * @param {string} field The field's name.\n\t * @param {*} boxOrUpperLeft Either a `Geo.BoundingBox` instance, or\n\t *   a bounding box's upper left coordinate.\n\t * @param {*=} opt_lowerRight A bounding box's lower right coordinate.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic boundingBox(field, boxOrUpperLeft, opt_lowerRight) {\n\t\tif (boxOrUpperLeft instanceof Geo.BoundingBox) {\n\t\t\treturn Filter.polygon(field, ...boxOrUpperLeft.getPoints());\n\t\t} else {\n\t\t\treturn Filter.polygon(field, boxOrUpperLeft, opt_lowerRight);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the json object that represents this filter.\n\t * @return {!Object}\n\t */\n\tbody() {\n\t\treturn this.body_.getObject();\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gd\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} locationOrCircle Either a `Geo.Circle` instance or a coordinate.\n\t * @param {Range|string=} opt_rangeOrDistance Either a `Range` instance or\n\t *   the distance value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic distance(field, locationOrCircle, opt_rangeOrDistance) {\n\t\tvar location = locationOrCircle;\n\t\tvar range = opt_rangeOrDistance;\n\t\tif (locationOrCircle instanceof Geo.Circle) {\n\t\t\tlocation = locationOrCircle.getCenter();\n\t\t\trange = Range.to(locationOrCircle.getRadius());\n\t\t} else if (!(opt_rangeOrDistance instanceof Range)) {\n\t\t\trange = Range.to(opt_rangeOrDistance);\n\t\t}\n\t\treturn Filter.distanceInternal_(field, location, range);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gd\" operator. This\n\t * is just an internal helper used by `Filter.distance`.\n\t * @param {string} field The field's name.\n\t * @param {*} location A location coordinate.\n\t * @param {Range} range A `Range` instance.\n\t * @return {!Filter}\n\t * @protected\n\t * @static\n\t */\n\tstatic distanceInternal_(field, location, range) {\n\t\tvar value = {\n\t\t\tlocation: Embodied.toBody(location)\n\t\t};\n\t\trange = range.body();\n\t\tif (range.from) {\n\t\t\tvalue.min = range.from;\n\t\t}\n\t\tif (range.to) {\n\t\t\tvalue.max = range.to;\n\t\t}\n\t\treturn Filter.field(field, 'gd', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic equal(field, value) {\n\t\treturn new Filter(field, '=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"exists\" operator.\n\t * @param {string} field The field's name.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic exists(field) {\n\t\treturn Filter.field(field, 'exists', null);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"fuzzy\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string|number=} opt_queryOrFuzziness If this is a string, it should\n\t *   be the query, otherwise it should be the fuzziness value.\n\t * @param {number=} opt_fuzziness The fuzziness value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic fuzzy(fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness) {\n\t\treturn Filter.fuzzyInternal_('fuzzy', fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the given fuzzy operator. This\n\t * is an internal implementation used by the `Filter.fuzzy` method.\n\t * @param {string} operator The fuzzy operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string|number=} opt_queryOrFuzziness If this is a string, it should\n\t *   be the query, otherwise it should be the fuzziness value.\n\t * @param {number=} opt_fuzziness The fuzziness value.\n\t * @return {!Filter}\n\t * @protected\n\t * @static\n\t */\n\tstatic fuzzyInternal_(operator, fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness) {\n\t\tvar arg2IsString = core.isString(opt_queryOrFuzziness);\n\n\t\tvar value = {\n\t\t\tquery: arg2IsString ? opt_queryOrFuzziness : fieldOrQuery\n\t\t};\n\t\tvar fuzziness = arg2IsString ? opt_fuzziness : opt_queryOrFuzziness;\n\t\tif (fuzziness) {\n\t\t\tvalue.fuzziness = fuzziness;\n\t\t}\n\n\t\tvar field = arg2IsString ? fieldOrQuery : Filter.ALL;\n\t\treturn Filter.field(field, operator, value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \">\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic gt(field, value) {\n\t\treturn new Filter(field, '>', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \">=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic gte(field, value) {\n\t\treturn new Filter(field, '>=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"match\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic match(fieldOrQuery, opt_query) {\n\t\tvar field = core.isString(opt_query) ? fieldOrQuery : Filter.ALL;\n\t\tvar query = core.isString(opt_query) ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'match', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"missing\" operator.\n\t * @param {string} field The field's name.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic missing(field) {\n\t\treturn Filter.field(field, 'missing', null);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"phrase\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic phrase(fieldOrQuery, opt_query) {\n\t\tvar field = core.isString(opt_query) ? fieldOrQuery : Filter.ALL;\n\t\tvar query = core.isString(opt_query) ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'phrase', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gp\" operator.\n\t * @param {string} field The name of the field.\n\t * @param {...!Object} points Objects representing points in the polygon.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic polygon(field, ...points) {\n\t\tpoints = points.map(point => Embodied.toBody(point));\n\t\treturn Filter.field(field, 'gp', points);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"prefix\" operator.\n\t * @param {string} fieldOrQuery If no second argument is given, this should\n\t *   be the query string, in which case all fields will be matched. Otherwise,\n\t *   this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic prefix(fieldOrQuery, opt_query) {\n\t\tvar field = opt_query ? fieldOrQuery : Filter.ALL;\n\t\tvar query = opt_query ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'prefix', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"range\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} rangeOrMin Either a `Range` instance or a the range's min value.\n\t * @param {*=} opt_max The range's max value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic range(field, rangeOrMin, opt_max) {\n\t\tvar range = rangeOrMin;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrMin, opt_max);\n\t\t}\n\t\treturn Filter.field(field, 'range', range);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"~\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic regex(field, value) {\n\t\treturn new Filter(field, '~', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gs\" operator.\n\t * @param {string} field The field's name.\n\t * @param {...!Object} shapes Objects representing shapes.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic shape(field, ...shapes) {\n\t\tshapes = shapes.map(shape => Embodied.toBody(shape));\n\t\tvar value = {\n\t\t\ttype: 'geometrycollection',\n\t\t\tgeometries: shapes\n\t\t};\n\t\treturn Filter.field(field, 'gs', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"similar\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {?string} query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic similar(fieldOrQuery, query) {\n\t\tvar field = core.isString(query) ? fieldOrQuery : Filter.ALL;\n\t\tvar value = {\n\t\t\tquery: core.isString(query) ? query : fieldOrQuery\n\t\t};\n\t\treturn Filter.field(field, 'similar', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic lt(field, value) {\n\t\treturn new Filter(field, '<', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic lte(field, value) {\n\t\treturn new Filter(field, '<=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"none\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} value A variable amount of values to be used with\n\t * the \"none\" operator. Can be passed either as a single array or as\n\t * separate params.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic none(field) {\n\t\tvar values = Array.prototype.slice.call(arguments, 1);\n\t\tif (values.length === 1 && values[0] instanceof Array) {\n\t\t\tvalues = values[0];\n\t\t}\n\t\treturn new Filter(field, 'none', values);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"!=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic notEqual(field, value) {\n\t\treturn new Filter(field, '!=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"not\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t * the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic not(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value).add('not');\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should be the\n\t * filter's operator (like \">=\"). Otherwise, this will be used as the\n\t * filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic field(field, operatorOrValue, opt_value) {\n\t\treturn new Filter(field, operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"or\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t * the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tor(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn this.add('or', fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Converts the given arguments into a {@link Filter} instance.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t * the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t */\n\tstatic toFilter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tvar filter = fieldOrFilter;\n\t\tif (!(filter instanceof Filter)) {\n\t\t\tfilter = Filter.field(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\t}\n\t\treturn filter;\n\t}\n}\n\n/**\n * String constant that represents all fields.\n * @type {string}\n * @static\n */\nFilter.ALL = '*';\n\nexport default Filter;\n","'use strict';\n\nimport Embodied from './Embodied';\nimport Range from './Range';\n\n/**\n * Class that represents a search aggregation.\n */\nclass Aggregation {\n\t/**\n\t * Constructs an {@link Aggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {string} operator The aggregation operator.\n\t * @param {*=} opt_value The aggregation value.\n\t * @constructor\n\t */\n\tconstructor(field, operator, opt_value) {\n\t\tthis.field_ = field;\n\t\tthis.operator_ = operator;\n\t\tthis.value_ = opt_value;\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"avg\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic avg(field) {\n\t\treturn Aggregation.field(field, 'avg');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"count\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic count(field) {\n\t\treturn Aggregation.field(field, 'count');\n\t}\n\n\t/**\n\t * Creates an {@link DistanceAggregation} instance with the \"geoDistance\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {*} location The aggregation location.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @return {!DistanceAggregation}\n\t * @static\n\t */\n\tstatic distance(field, location, ...ranges) {\n\t\treturn new Aggregation.DistanceAggregation(field, location, ...ranges);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"extendedStats\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic extendedStats(field) {\n\t\treturn Aggregation.field(field, 'extendedStats');\n\t}\n\n\t/**\n\t * Gets this aggregation's field.\n\t * @return {string}\n\t */\n\tgetField() {\n\t\treturn this.field_;\n\t}\n\n\t/**\n\t * Gets this aggregation's operator.\n\t * @return {string}\n\t */\n\tgetOperator() {\n\t\treturn this.operator_;\n\t}\n\n\t/**\n\t * Gets this aggregation's value.\n\t * @return {*}\n\t */\n\tgetValue() {\n\t\treturn this.value_;\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"histogram\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {number} interval The histogram's interval.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic histogram(field, interval) {\n\t\treturn new Aggregation(field, 'histogram', interval);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"max\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic max(field) {\n\t\treturn Aggregation.field(field, 'max');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"min\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic min(field) {\n\t\treturn Aggregation.field(field, 'min');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"missing\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic missing(field) {\n\t\treturn Aggregation.field(field, 'missing');\n\t}\n\n\t/**\n\t * Creates a new {@link Aggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {string} operator The aggregation operator.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic field(field, operator) {\n\t\treturn new Aggregation(field, operator);\n\t}\n\n\t/**\n\t * Creates an {@link RangeAggregation} instance with the \"range\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @return {!RangeAggregation}\n\t * @static\n\t */\n\tstatic range(field, ...ranges) {\n\t\treturn new Aggregation.RangeAggregation(field, ...ranges);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"stats\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic stats(field) {\n\t\treturn Aggregation.field(field, 'stats');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"sum\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic sum(field) {\n\t\treturn Aggregation.field(field, 'sum');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"terms\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic terms(field) {\n\t\treturn Aggregation.field(field, 'terms');\n\t}\n}\n\n/**\n * Class that represents a distance aggregation.\n * @extends {Aggregation}\n */\nclass DistanceAggregation extends Aggregation {\n\t/**\n\t * Constructs an {@link DistanceAggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {*} location The aggregation location.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @constructor\n\t */\n\tconstructor(field, location, ...ranges) {\n\t\tsuper(field, 'geoDistance', {});\n\t\tthis.value_.location = Embodied.toBody(location);\n\t\tthis.value_.ranges = ranges.map(range => range.body());\n\t}\n\n\t/**\n\t * Adds a range to this aggregation.\n\t * @param {*} rangeOrFrom\n\t * @param {*=} opt_to\n\t * @chainnable\n\t */\n\trange(rangeOrFrom, opt_to) {\n\t\tvar range = rangeOrFrom;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrFrom, opt_to);\n\t\t}\n\t\tthis.value_.ranges.push(range.body());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this aggregation's unit.\n\t * @param {string} unit\n\t * @chainnable\n\t */\n\tunit(unit) {\n\t\tthis.value_.unit = unit;\n\t\treturn this;\n\t}\n}\nAggregation.DistanceAggregation = DistanceAggregation;\n\n/**\n * Class that represents a range aggregation.\n * @extends {Aggregation}\n */\nclass RangeAggregation extends Aggregation {\n\t/**\n\t * Constructs an {@link RangeAggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @constructor\n\t */\n\tconstructor(field, ...ranges) {\n\t\tsuper(field, 'range');\n\t\tthis.value_ = ranges.map(range => range.body());\n\t}\n\n\t/**\n\t * Adds a range to this aggregation.\n\t * @param {*} rangeOrFrom\n\t * @param {*=} opt_to\n\t * @chainnable\n\t */\n\trange(rangeOrFrom, opt_to) {\n\t\tvar range = rangeOrFrom;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrFrom, opt_to);\n\t\t}\n\t\tthis.value_.push(range.body());\n\t\treturn this;\n\t}\n}\nAggregation.RangeAggregation = RangeAggregation;\n\nexport default Aggregation;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\nimport Filter from './Filter';\nimport Aggregation from './Aggregation';\n\n/**\n * Class responsible for building queries.\n * @extends {Embodied}\n */\nclass Query extends Embodied {\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an\n\t *   {@link Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic aggregate(name, aggregationOrField, opt_operator) {\n\t\treturn new Query().aggregate(name, aggregationOrField, opt_operator);\n\t}\n\n\t/**\n\t * Sets this query's type to \"count\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic count() {\n\t\treturn new Query().type('count');\n\t}\n\n\t/**\n\t * Sets this query's type to \"fetch\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic fetch() {\n\t\treturn new Query().type('fetch');\n\t}\n\n\t/**\n\t * Adds a filter to this Query.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic filter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn new Query().filter(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Sets the query offset.\n\t * @param {number} offset The index of the first entry that should be returned\n\t *   by this query.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic offset(offset) {\n\t\treturn new Query().offset(offset);\n\t}\n\n\t/**\n\t * Adds a highlight entry to this {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic highlight(field) {\n\t\treturn new Query().highlight(field);\n\t}\n\n\t/**\n\t * Sets the query limit.\n\t * @param {number} limit The max amount of entries that this query should return.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic limit(limit) {\n\t\treturn new Query().limit(limit);\n\t}\n\n\t/**\n\t * Adds a search to this {@link Query} instance.\n\t * @param {!Filter|string} filterOrTextOrField If no other arguments\n\t *   are passed to this function, this should be either a {@link Filter}\n\t *   instance or a text to be used in a match filter. In both cases\n\t *   the filter will be applied to all fields. Another option is to\n\t *   pass this as a field name instead, together with other arguments\n\t *   so the filter can be created.\n\t * @param {string=} opt_textOrOperator Either a text to be used in a\n\t *   match filter, or the operator that should be used.\n\t * @param {*=} opt_value The value to be used by the filter. Should\n\t *   only be passed if an operator was passed as the second argument.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic search(filterOrTextOrField, opt_textOrOperator, opt_value) {\n\t\treturn new Query().search(filterOrTextOrField, opt_textOrOperator, opt_value);\n\t}\n\n\t/**\n\t * Adds a sort entry to this query, specifying the field this query should be\n\t * sorted by and, optionally, the sort direction.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should use.\n\t *   If none is given, \"asc\" is used by default.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic sort(field, opt_direction) {\n\t\treturn new Query().sort(field, opt_direction);\n\t}\n\n\t/**\n\t * Sets the query type.\n\t * @param {string} type The query's type. For example: \"count\", \"fetch\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic type(type) {\n\t\treturn new Query().type(type);\n\t}\n\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an\n\t *   {@link Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @chainnable\n\t */\n\taggregate(name, aggregationOrField, opt_operator) {\n\t\tvar aggregation = aggregationOrField;\n\t\tif (!(aggregation instanceof Aggregation)) {\n\t\t\taggregation = Aggregation.field(aggregationOrField, opt_operator);\n\t\t}\n\n\t\tvar field = aggregation.getField();\n\t\tvar value = {};\n\t\tvalue[field] = {\n\t\t\tname: name,\n\t\t\toperator: aggregation.getOperator()\n\t\t};\n\t\tif (core.isDefAndNotNull(aggregation.getValue())) {\n\t\t\tvalue[field].value = aggregation.getValue();\n\t\t}\n\n\t\tif (!this.body_.aggregation) {\n\t\t\tthis.body_.aggregation = [];\n\t\t}\n\t\tthis.body_.aggregation.push(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this query's type to \"count\".\n\t * @chainnable\n\t */\n\tcount() {\n\t\treturn this.type('count');\n\t}\n\n\t/**\n\t * Sets this query's type to \"fetch\".\n\t * @chainnable\n\t */\n\tfetch() {\n\t\treturn this.type('fetch');\n\t}\n\n\t/**\n\t * Adds a filter to this Query.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tfilter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tlet filter = Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\tif (!this.body_.filter) {\n\t\t\tthis.body_.filter = [];\n\t\t}\n\t\tthis.body_.filter.push(filter.body());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query offset.\n\t * @param {number} offset The index of the first entry that should be returned\n\t *   by this query.\n\t * @chainnable\n\t */\n\toffset(offset) {\n\t\tthis.body_.offset = offset;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a highlight entry to this {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @chainnable\n\t */\n\thighlight(field) {\n\t\tif (!this.body_.highlight) {\n\t\t\tthis.body_.highlight = [];\n\t\t}\n\n\t\tthis.body_.highlight.push(field);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query limit.\n\t * @param {number} limit The max amount of entries that this query should return.\n\t * @chainnable\n\t */\n\tlimit(limit) {\n\t\tthis.body_.limit = limit;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a search to this {@link Query} instance.\n\t * @param {!Filter|string} filterOrTextOrField If no other arguments\n\t *   are passed to this function, this should be either a {@link Filter}\n\t *   instance or a text to be used in a match filter. In both cases\n\t *   the filter will be applied to all fields. Another option is to\n\t *   pass this as a field name instead, together with other arguments\n\t *   so the filter can be created.\n\t * @param {string=} opt_textOrOperator Either a text to be used in a\n\t *   match filter, or the operator that should be used.\n\t * @param {*=} opt_value The value to be used by the filter. Should\n\t *   only be passed if an operator was passed as the second argument.\n\t * @chainnable\n\t */\n\tsearch(filterOrTextOrField, opt_textOrOperator, opt_value) {\n\t\tvar filter = filterOrTextOrField;\n\n\t\tif (opt_value) {\n\t\t\tfilter = Filter.field(filterOrTextOrField, opt_textOrOperator, opt_value);\n\t\t} else if (opt_textOrOperator) {\n\t\t\tfilter = Filter.match(filterOrTextOrField, opt_textOrOperator);\n\t\t} else if (!(filter instanceof Filter)) {\n\t\t\tfilter = Filter.match(filterOrTextOrField);\n\t\t}\n\n\t\tif (!this.body_.search) {\n\t\t\tthis.body_.search = [];\n\t\t}\n\n\t\tif (core.isDefAndNotNull(filterOrTextOrField)) {\n\t\t\tthis.body_.search.push(filter.body());\n\t\t} else {\n\t\t\tthis.body_.search.push({});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a sort entry to this query, specifying the field this query should be\n\t * sorted by and, optionally, the sort direction.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should use.\n\t *   If none is given, \"asc\" is used by default.\n\t * @chainnable\n\t */\n\tsort(field, opt_direction) {\n\t\tif (!this.body_.sort) {\n\t\t\tthis.body_.sort = [];\n\t\t}\n\t\tvar sortEntry = {};\n\t\tsortEntry[field] = opt_direction || 'asc';\n\t\tthis.body_.sort.push(sortEntry);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query type.\n\t * @param {string} type The query's type. For example: \"count\", \"fetch\".\n\t * @chainnable\n\t */\n\ttype(type) {\n\t\tthis.body_.type = type;\n\t\treturn this;\n\t}\n}\n\nexport default Query;\n","var globals = {};\n\nif (typeof window !== 'undefined') {\n\tglobals.window = window;\n}\n\nif (typeof document !== 'undefined') {\n\tglobals.document = document;\n}\n\nexport default globals;\n","'use strict';\n\nimport { core } from 'metal';\nimport globals from '../globals/globals';\nimport Uri from 'metal-uri';\n\nfunction assertBrowserEnvironment() {\n\tif (!globals.window) {\n\t\tthrow new Error('Sign-in type not supported in this environment');\n\t}\n}\n\nfunction assertDefAndNotNull(value, errorMessage) {\n\tif (!core.isDefAndNotNull(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertNotNull(value, errorMessage) {\n\tif (core.isNull(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertFunction(value, errorMessage) {\n\tif (!core.isFunction(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertObject(value, errorMessage) {\n\tif (!core.isObject(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertResponseSucceeded(response) {\n\tif (!response.succeeded()) {\n\t\tthrow response.body();\n\t}\n\treturn response;\n}\n\nfunction assertUserSignedIn(user) {\n\tif (!core.isDefAndNotNull(user)) {\n\t\tthrow new Error('You must be signed-in to perform this operation');\n\t}\n}\n\nfunction assertUriWithNoPath(url, message) {\n\tvar uri = new Uri(url);\n\tif (uri.getPathname().length > 1) {\n\t\tthrow new Error(message);\n\t}\n}\n\nexport { assertBrowserEnvironment, assertDefAndNotNull, assertNotNull, assertFunction, assertObject, assertResponseSucceeded, assertUserSignedIn, assertUriWithNoPath };\n","'use strict';\n\nimport { core } from 'metal';\n\nimport { assertDefAndNotNull, assertObject, assertResponseSucceeded } from '../assertions';\n\n/**\n * Class responsible for storing authorization information.\n */\nclass Auth {\n\t/**\n\t * Constructs an {@link Auth} instance.\n\t * @param {string} tokenOrEmail Either the authorization token, or\n\t *   the username.\n\t * @param {string=} opt_password If a username is given as the first param,\n\t *   this should be the password.\n\t * @constructor\n\t */\n\tconstructor(tokenOrEmail, opt_password = null) {\n\t\tthis.token = core.isString(opt_password) ? null : tokenOrEmail;\n\t\tthis.email = core.isString(opt_password) ? tokenOrEmail : null;\n\t\tthis.password = opt_password;\n\n\t\tthis.createdAt = null;\n\t\tthis.id = null;\n\t\tthis.name = null;\n\t\tthis.photoUrl = null;\n\t\tthis.wedeployClient = null;\n\t}\n\n\t/**\n\t * Constructs an {@link Auth} instance.\n\t * @param {string} tokenOrUsername Either the authorization token, or\n\t *   the username.\n\t * @param {string=} opt_password If a username is given as the first param,\n\t *   this should be the password.\n\t * @return {!Auth}\n\t */\n\tstatic create(tokenOrUsername, opt_password) {\n\t\treturn new Auth(tokenOrUsername, opt_password);\n\t}\n\n\t/**\n\t * Gets the created at date.\n\t * @return {string}\n\t */\n\tgetCreatedAt() {\n\t\treturn this.createdAt;\n\t}\n\n\t/**\n\t * Gets the email.\n\t * @return {string}\n\t */\n\tgetEmail() {\n\t\treturn this.email;\n\t}\n\n\t/**\n\t * Gets the id.\n\t * @return {string}\n\t */\n\tgetId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Gets the name.\n\t * @return {string}\n\t */\n\tgetName() {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * Gets the password.\n\t * @return {string}\n\t */\n\tgetPassword() {\n\t\treturn this.password;\n\t}\n\n\t/**\n\t * Gets the photo url.\n\t * @return {string}\n\t */\n\tgetPhotoUrl() {\n\t\treturn this.photoUrl;\n\t}\n\n\t/**\n\t * Gets the token.\n\t * @return {string}\n\t */\n\tgetToken() {\n\t\treturn this.token;\n\t}\n\n\t/**\n\t * Checks if created at is set.\n\t * @return {boolean}\n\t */\n\thasCreatedAt() {\n\t\treturn core.isDefAndNotNull(this.createdAt);\n\t}\n\n\t/**\n\t * Checks if the email is set.\n\t * @return {boolean}\n\t */\n\thasEmail() {\n\t\treturn core.isDefAndNotNull(this.email);\n\t}\n\n\t/**\n\t * Checks if the id is set.\n\t * @return {boolean}\n\t */\n\thasId() {\n\t\treturn core.isDefAndNotNull(this.id);\n\t}\n\n\t/**\n\t * Checks if the name is set.\n\t * @return {boolean}\n\t */\n\thasName() {\n\t\treturn core.isDefAndNotNull(this.name);\n\t}\n\n\t/**\n\t * Checks if the password is set.\n\t * @return {boolean}\n\t */\n\thasPassword() {\n\t\treturn core.isDefAndNotNull(this.password);\n\t}\n\n\t/**\n\t * Checks if the photo url is set.\n\t * @return {boolean}\n\t */\n\thasPhotoUrl() {\n\t\treturn core.isDefAndNotNull(this.photoUrl);\n\t}\n\n\t/**\n\t * Checks if the token is set.\n\t * @return {boolean}\n\t */\n\thasToken() {\n\t\treturn core.isDefAndNotNull(this.token);\n\t}\n\n\t/**\n\t * Sets created at.\n\t * @param {string} createdAt\n\t */\n\tsetCreatedAt(createdAt) {\n\t\tthis.createdAt = createdAt;\n\t}\n\n\t/**\n\t * Sets the email.\n\t * @param {string} email\n\t */\n\tsetEmail(email) {\n\t\tthis.email = email;\n\t}\n\n\t/**\n\t * Sets the id.\n\t * @param {string} id\n\t */\n\tsetId(id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the name.\n\t * @param {string} name\n\t */\n\tsetName(name) {\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * Sets the password.\n\t * @param {string} password\n\t */\n\tsetPassword(password) {\n\t\tthis.password = password;\n\t}\n\n\t/**\n\t * Sets the photo url.\n\t * @param {string} photoUrl\n\t */\n\tsetPhotoUrl(photoUrl) {\n\t\tthis.photoUrl = photoUrl;\n\t}\n\n\t/**\n\t * Sets the token.\n\t * @param {string} token\n\t */\n\tsetToken(token) {\n\t\tthis.token = token;\n\t}\n\n\tsetWedeployClient(wedeployClient) {\n\t\tthis.wedeployClient = wedeployClient;\n\t}\n\n\t/**\n\t * Updates the user.\n\t * @param {!object} data\n\t * @return {CompletableFuture}\n\t */\n\tupdateUser(data) {\n\t\tassertObject(data, 'User data must be specified as object');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users')\n\t\t\t.auth(this)\n\t\t\t.patch(data)\n\t\t\t.then(response => assertResponseSucceeded(response));\n\t}\n\n\t/**\n\t * Deletes the current user.\n\t * @return {CompletableFuture}\n\t */\n\tdeleteUser() {\n\t\tassertDefAndNotNull(this.id, 'Cannot delete user without id');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users', this.id)\n\t\t\t.auth(this)\n\t\t\t.delete()\n\t\t\t.then(response => assertResponseSucceeded(response));\n\t}\n}\n\nexport default Auth;\n","'use strict';\n\nimport Auth from './auth/Auth';\nimport { assertDefAndNotNull } from './assertions';\n\nclass ApiHelper {\n\n\t/**\n\t * Constructs an {@link ApiHelper} instance.\n\t * @constructor\n\t */\n\tconstructor(wedeployClient) {\n\t\tassertDefAndNotNull(wedeployClient, 'WeDeploy client reference must be specified');\n\t\tthis.wedeployClient = wedeployClient;\n\t}\n\n\t/**\n\t * Adds authorization information to this request.\n\t * @param {!Auth|string} authOrTokenOrEmail Either an {@link Auth} instance,\n\t * an authorization token, or the email.\n\t * @param {string=} opt_password If a email is given as the first param,\n\t * this should be the password.\n\t * @chainable\n\t */\n\tauth(authOrTokenOrEmail, opt_password) {\n\t\tthis.helperAuthScope = authOrTokenOrEmail;\n\t\tif (!(this.helperAuthScope instanceof Auth)) {\n\t\t\tthis.helperAuthScope = Auth.create(authOrTokenOrEmail, opt_password);\n\t\t}\n\t\treturn this;\n\t}\n\n}\n\nexport default ApiHelper;\n","'use strict';\n\nimport { core } from 'metal';\nimport Uri from 'metal-uri';\n\n/**\n * Class responsible for encapsulate provider information.\n */\nclass AuthProvider {\n\t/**\n\t * Constructs an {@link AuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.provider = null;\n\t\tthis.providerScope = null;\n\t\tthis.redirectUri = null;\n\t\tthis.scope = null;\n\t}\n\n\t/**\n\t * Checks if provider is defined and not null.\n\t * @return {boolean}\n\t */\n\thasProvider() {\n\t\treturn core.isDefAndNotNull(this.provider);\n\t}\n\n\t/**\n\t * Checks if scope is defined and not null.\n\t * @return {boolean}\n\t */\n\thasProviderScope() {\n\t\treturn core.isDefAndNotNull(this.providerScope);\n\t}\n\n\t/**\n\t * Checks if redirect uri is defined and not null.\n\t * @return {boolean}\n\t */\n\thasRedirectUri() {\n\t\treturn core.isDefAndNotNull(this.redirectUri);\n\t}\n\n\t/**\n\t * Checks if scope is defined and not null.\n\t * @return {boolean}\n\t */\n\thasScope() {\n\t\treturn core.isDefAndNotNull(this.scope);\n\t}\n\n\t/**\n\t * Makes authorization url.\n\t * @return {string=} Authorization url.\n\t */\n\tmakeAuthorizationUrl(opt_authUrl) {\n\t\tvar uri = new Uri(opt_authUrl);\n\n\t\turi.setPathname('/oauth/authorize');\n\n\t\tif (this.hasProvider()) {\n\t\t\turi.setParameterValue('provider', this.getProvider());\n\t\t}\n\t\tif (this.hasProviderScope()) {\n\t\t\turi.setParameterValue('provider_scope', this.getProviderScope());\n\t\t}\n\t\tif (this.hasRedirectUri()) {\n\t\t\turi.setParameterValue('redirect_uri', this.getRedirectUri());\n\t\t}\n\t\tif (this.hasScope()) {\n\t\t\turi.setParameterValue('scope', this.getScope());\n\t\t}\n\n\t\treturn uri.toString();\n\t}\n\n\t/**\n\t * Gets provider name.\n\t * @return {string=} Provider name.\n\t */\n\tgetProvider() {\n\t\treturn this.provider;\n\t}\n\n\t/**\n\t * Gets provider scope.\n\t * @return {string=} String with scopes.\n\t */\n\tgetProviderScope() {\n\t\treturn this.providerScope;\n\t}\n\n\t/**\n\t * Gets redirect uri.\n\t * @return {string=}.\n\t */\n\tgetRedirectUri() {\n\t\treturn this.redirectUri;\n\t}\n\n\t/**\n\t * Gets scope.\n\t * @return {string=} String with scopes.\n\t */\n\tgetScope() {\n\t\treturn this.scope;\n\t}\n\n\t/**\n\t * Sets provider scope.\n\t * @param {string=} scope Scope string. Separate by space for multiple\n\t *   scopes, e.g. \"scope1 scope2\".\n\t */\n\tsetProviderScope(providerScope) {\n\t\tassertStringIfDefAndNotNull(providerScope, 'Provider scope must be a string');\n\t\tthis.providerScope = providerScope;\n\t}\n\n\t/**\n\t * Sets redirect uri.\n\t * @param {string=} redirectUri.\n\t */\n\tsetRedirectUri(redirectUri) {\n\t\tassertStringIfDefAndNotNull(redirectUri, 'Redirect uri must be a string');\n\t\tthis.redirectUri = redirectUri;\n\t}\n\n\t/**\n\t * Sets scope.\n\t * @param {string=} scope Scope string. Separate by space for multiple\n\t *   scopes, e.g. \"scope1 scope2\".\n\t */\n\tsetScope(scope) {\n\t\tassertStringIfDefAndNotNull(scope, 'Scope must be a string');\n\t\tthis.scope = scope;\n\t}\n}\n\nfunction assertStringIfDefAndNotNull(value, errorMessage) {\n\tif (core.isDefAndNotNull(value) && !core.isString(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nexport default AuthProvider;\n","'use strict';\n\nimport AuthProvider from './AuthProvider';\n\n/**\n * Facebook auth provider implementation.\n */\nclass FacebookAuthProvider extends AuthProvider {\n\t/**\n\t * Constructs an {@link FacebookAuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.provider = FacebookAuthProvider.PROVIDER;\n\t}\n}\n\nFacebookAuthProvider.PROVIDER = 'facebook';\n\nexport default FacebookAuthProvider;\n","'use strict';\n\nimport AuthProvider from './AuthProvider';\n\n/**\n * Github auth provider implementation.\n */\nclass GithubAuthProvider extends AuthProvider {\n\t/**\n\t * Constructs an {@link GithubAuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.provider = GithubAuthProvider.PROVIDER;\n\t}\n}\n\nGithubAuthProvider.PROVIDER = 'github';\n\nexport default GithubAuthProvider;\n","'use strict';\n\nimport AuthProvider from './AuthProvider';\n\n/**\n * Google auth provider implementation.\n */\nclass GoogleAuthProvider extends AuthProvider {\n\t/**\n\t * Constructs an {@link GoogleAuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.provider = GoogleAuthProvider.PROVIDER;\n\t}\n}\n\nGoogleAuthProvider.PROVIDER = 'google';\n\nexport default GoogleAuthProvider;\n","'use strict';\n\nimport Auth from './Auth';\nimport ApiHelper from '../ApiHelper';\nimport FacebookAuthProvider from './FacebookAuthProvider';\nimport GithubAuthProvider from './GithubAuthProvider';\nimport globals from '../../globals/globals';\nimport GoogleAuthProvider from './GoogleAuthProvider';\nimport { Storage, LocalStorageMechanism } from 'metal-storage';\n\nimport { assertDefAndNotNull, assertFunction, assertObject, assertUserSignedIn, assertBrowserEnvironment, assertResponseSucceeded } from '../assertions';\n\n/**\n * Class responsible for encapsulate auth api calls.\n */\nclass AuthApiHelper extends ApiHelper {\n\t/**\n\t * Constructs an {@link AuthApiHelper} instance.\n\t * @constructor\n\t */\n\tconstructor(wedeployClient) {\n\t\tsuper(wedeployClient);\n\n\t\tthis.currentUser = null;\n\t\tthis.onSignInCallback = null;\n\t\tthis.onSignOutCallback = null;\n\t\tif (LocalStorageMechanism.isSupported()) {\n\t\t\tthis.storage = new Storage(new LocalStorageMechanism());\n\t\t}\n\n\t\tthis.processSignIn_();\n\n\t\tthis.provider = {\n\t\t\tFacebook: FacebookAuthProvider,\n\t\t\tGoogle: GoogleAuthProvider,\n\t\t\tGithub: GithubAuthProvider\n\t\t};\n\t}\n\n\t/**\n\t * Creates user.\n\t * @param {!object} data The data to be used to create the user.\n\t * @return {CancellablePromise}\n\t */\n\tcreateUser(data) {\n\t\tassertObject(data, 'User data must be specified as object');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users')\n\t\t\t.post(data)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => this.makeUserAuthFromData(response.body()));\n\t}\n\n\t/**\n\t * Gets the current browser url without the fragment part.\n\t * @return {!string}\n\t * @protected\n\t */\n\tgetHrefWithoutFragment_() {\n\t\tvar location = globals.window.location;\n\t\treturn location.protocol + '//' + location.host + location.pathname + (location.search ? location.search : '');\n\t}\n\n\t/**\n\t * Gets the access token from the url fragment and removes it.\n\t * @return {?string}\n\t * @protected\n\t */\n\tgetRedirectAccessToken_() {\n\t\tif (globals.window) {\n\t\t\tvar fragment = globals.window.location.hash;\n\t\t\tif (fragment.indexOf('#access_token=') === 0) {\n\t\t\t\treturn fragment.substring(14);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets user by id.\n\t * @param {!string} userId\n\t * @return {CancellablePromise}\n\t */\n\tgetUser(userId) {\n\t\tassertDefAndNotNull(userId, 'User userId must be specified');\n\t\tassertUserSignedIn(this.currentUser);\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users', userId)\n\t\t\t.auth(this.resolveAuthScope().token)\n\t\t\t.get()\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => this.makeUserAuthFromData(response.body()));\n\t}\n\n\t/**\n\t * Loads current user. Requires a user token as argument.\n\t * @param {!string} token\n\t * @return {CancellablePromise}\n\t */\n\tloadCurrentUser(token) {\n\t\tassertDefAndNotNull(token, 'User token must be specified');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/user')\n\t\t\t.auth(token)\n\t\t\t.get()\n\t\t\t.then(response => {\n\t\t\t\tvar data = response.body();\n\t\t\t\tdata.token = token;\n\t\t\t\tthis.currentUser = this.makeUserAuthFromData(data);\n\t\t\t\tif (this.storage) {\n\t\t\t\t\tthis.storage.set('currentUser', data);\n\t\t\t\t}\n\t\t\t\treturn this.currentUser;\n\t\t\t});\n\t}\n\n\t/**\n\t * Makes user Auth from data object.\n\t * @param {object} data\n\t * @return {Auth}\n\t * @protected\n\t */\n\tmakeUserAuthFromData(data) {\n\t\tvar auth = new Auth();\n\t\tauth.setWedeployClient(this.wedeployClient);\n\t\tauth.setCreatedAt(data.createdAt);\n\t\tauth.setEmail(data.email);\n\t\tauth.setId(data.id);\n\t\tauth.setName(data.name);\n\t\tauth.setPhotoUrl(data.photoUrl);\n\t\tauth.setToken(data.token);\n\t\treturn auth;\n\t}\n\n\t/**\n\t * Calls the on sign in callback if set.\n\t * @protected\n\t */\n\tmaybeCallOnSignInCallback_() {\n\t\tif (this.onSignInCallback) {\n\t\t\tthis.onSignInCallback.call(this, this.currentUser);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the on sign out callback if set.\n\t * @protected\n\t */\n\tmaybeCallOnSignOutCallback_() {\n\t\tif (this.onSignOutCallback) {\n\t\t\tthis.onSignOutCallback.call(this, this.currentUser);\n\t\t}\n\t}\n\n\t/**\n\t * Fires passed callback when a user sign-in. Note that it keeps only the\n\t * last callback passed.\n\t * @param {!Function} callback\n\t */\n\tonSignIn(callback) {\n\t\tassertFunction(callback, 'Sign-in callback must be a function');\n\t\tthis.onSignInCallback = callback;\n\t}\n\n\t/**\n\t * Fires passed callback when a user sign-out. Note that it keeps only the\n\t * last callback passed.\n\t * @param {!Function} callback\n\t */\n\tonSignOut(callback) {\n\t\tassertFunction(callback, 'Sign-out callback must be a function');\n\t\tthis.onSignOutCallback = callback;\n\t}\n\n\t/**\n\t * Processes sign-in by detecting a presence of a fragment\n\t * <code>#access_token=</code> in the url or, alternatively, by local\n\t * storage current user.\n\t */\n\tprocessSignIn_() {\n\t\tvar redirectAccessToken = this.getRedirectAccessToken_();\n\t\tif (redirectAccessToken) {\n\t\t\tthis.removeUrlFragmentCompletely_();\n\t\t\tthis.loadCurrentUser(redirectAccessToken)\n\t\t\t\t.then(() => this.maybeCallOnSignInCallback_());\n\t\t\treturn;\n\t\t}\n\t\tvar currentUser = this.storage && this.storage.get('currentUser');\n\t\tif (currentUser) {\n\t\t\tthis.currentUser = this.makeUserAuthFromData(currentUser);\n\t\t}\n\t}\n\n\t/**\n\t * Removes fragment from url by performing a push state to the current path.\n\t * @protected\n\t */\n\tremoveUrlFragmentCompletely_() {\n\t\tglobals.window.history.pushState({}, document.title, window.location.pathname + window.location.search);\n\t}\n\n\t/**\n\t * Resolves auth scope from last login or api helper.\n\t * @return {Auth}\n\t */\n\tresolveAuthScope() {\n\t\tif (this.helperAuthScope) {\n\t\t\treturn this.helperAuthScope;\n\t\t}\n\t\treturn this.currentUser;\n\t}\n\n\t/**\n\t * Sends password reset email to the specified email if found in database.\n\t * For security reasons call do not fail if email not found.\n\t * @param {!string} email\n\t * @return {CancellablePromise}\n\t */\n\tsendPasswordResetEmail(email) {\n\t\tassertDefAndNotNull(email, 'Send password reset email must be specified');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/user/recover')\n\t\t\t.param('email', email)\n\t\t\t.post()\n\t\t\t.then(response => assertResponseSucceeded(response));\n\t}\n\n\t/**\n\t * Signs in using email and password.\n\t * @param {!string} email\n\t * @param {!string} password\n\t * @return {CancellablePromise}\n\t */\n\tsignInWithEmailAndPassword(email, password) {\n\t\tassertDefAndNotNull(email, 'Sign-in email must be specified');\n\t\tassertDefAndNotNull(password, 'Sign-in password must be specified');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/oauth/token')\n\t\t\t.param('grant_type', 'password')\n\t\t\t.param('username', email)\n\t\t\t.param('password', password)\n\t\t\t.get()\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => this.loadCurrentUser(response.body().access_token))\n\t\t\t.then((user) => {\n\t\t\t\tthis.maybeCallOnSignInCallback_();\n\t\t\t\treturn user;\n\t\t\t});\n\t}\n\n\t/**\n\t * Signs in with redirect. Some providers and environment may not support\n\t * this flow.\n\t * @param {AuthProvider} provider\n\t */\n\tsignInWithRedirect(provider) {\n\t\tassertBrowserEnvironment();\n\t\tassertDefAndNotNull(provider, 'Sign-in provider must be defined');\n\t\tassertSupportedProvider(provider);\n\n\t\tif (!provider.hasRedirectUri()) {\n\t\t\tprovider.setRedirectUri(this.getHrefWithoutFragment_());\n\t\t}\n\t\tglobals.window.location.href = provider.makeAuthorizationUrl(this.wedeployClient.authUrl_);\n\t}\n\n\t/**\n\t * Signs out <code>currentUser</code> and removes from <code>localStorage</code>.\n\t * @return {[type]} [description]\n\t */\n\tsignOut() {\n\t\tassertUserSignedIn(this.currentUser);\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/oauth/revoke')\n\t\t\t.param('token', this.currentUser.token)\n\t\t\t.get()\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => {\n\t\t\t\tthis.maybeCallOnSignOutCallback_();\n\t\t\t\tthis.unloadCurrentUser_();\n\t\t\t\treturn response;\n\t\t\t});\n\t}\n\n\t/**\n\t * Unloads all information for <code>currentUser</code> and removes from\n\t * <code>localStorage</code> if present.\n\t * @return {[type]} [description]\n\t */\n\tunloadCurrentUser_() {\n\t\tthis.currentUser = null;\n\t\tif (this.storage) {\n\t\t\tthis.storage.remove('currentUser');\n\t\t}\n\t}\n}\n\nfunction assertSupportedProvider(provider) {\n\tswitch (provider.constructor.PROVIDER) {\n\t\tcase FacebookAuthProvider.PROVIDER:\n\t\tcase GithubAuthProvider.PROVIDER:\n\t\tcase GoogleAuthProvider.PROVIDER:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Sign-in provider not supported');\n\t}\n}\n\nexport default AuthApiHelper;\n","'use strict';\n\nimport ApiHelper from '../ApiHelper';\nimport Query from '../../api-query/Query';\nimport Filter from '../../api-query/Filter';\nimport { assertDefAndNotNull, assertObject, assertResponseSucceeded } from '../assertions';\nimport { core } from 'metal';\n\n/**\n * Class responsible for encapsulate data api calls.\n */\nclass DataApiHelper extends ApiHelper {\n\t/**\n\t * Constructs an {@link DataApiHelper} instance.\n\t * @param {@link WeDeploy} instance.\n\t * @constructor\n\t */\n\tconstructor(wedeployClient) {\n\t\tsuper(wedeployClient);\n\t}\n\n\t/**\n\t * Adds a filter to this request's {@link Query}.\n\t * @param {!Filter|string} fieldOrFilter Either a Filter instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainable\n\t */\n\twhere(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tthis.getOrCreateFilter_().and(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"or\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t *   the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tor(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tif (this.getOrCreateFilter_().body().and.length === 0) {\n\t\t\tthrow Error('It\\'s required to have a condition before using an \\'or()\\' for the first time.');\n\t\t}\n\t\tthis.getOrCreateFilter_().or(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"none\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} args A variable amount of values to be used with\n\t * the \"none\" operator. Can be passed either as a single array or as\n\t * separate params.\n\t * @chainnable\n\t */\n\tnone(field, ...args) {\n\t\treturn this.where(Filter.none(field, args));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"match\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t * should be the query string, in which case all fields will be matched.\n\t * Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @chainnable\n\t */\n\tmatch(field, value) {\n\t\treturn this.where(Filter.match(field, value));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"similar\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t * should be the query string, in which case all fields will be matched.\n\t * Otherwise, this should be the name of the field to match.\n\t * @param {?string} query The query string.\n\t * @chainnable\n\t */\n\tsimilar(fieldOrQuery, query) {\n\t\treturn this.where(Filter.similar(fieldOrQuery, query));\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tlt(field, value) {\n\t\treturn this.where(Filter.lt(field, value));\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tlte(field, value) {\n\t\treturn this.where(Filter.lte(field, value));\n\t}\n\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"any\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} args A variable amount of values to be used with\n\t * the \"none\" operator. Can be passed either as a single array or as\n\t * separate params.\n\t * @chainnable\n\t */\n\tany(field, ...args) {\n\t\treturn this.where(Filter.any(field, args));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"gp\" operator. This is a\n\t * special use case of `Filter.polygon` for bounding boxes.\n\t * @param {string} field The field's name.\n\t * @param {*} boxOrUpperLeft Either a `Geo.BoundingBox` instance, or a\n\t * bounding box's upper left coordinate.\n\t * @param {*=} opt_lowerRight A bounding box's lower right coordinate.\n\t * @chainnable\n\t */\n\tboundingBox(field, boxOrUpperLeft, opt_lowerRight) {\n\t\treturn this.where(Filter.boundingBox(field, boxOrUpperLeft, opt_lowerRight));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"gd\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} locationOrCircle Either a `Geo.Circle` instance or a\n\t * coordinate.\n\t * @param {Range|string=} opt_rangeOrDistance Either a `Range` instance or\n\t * the distance value.\n\t * @return {!Filter}\n\t * @chainnable\n\t */\n\tdistance(field, locationOrCircle, opt_rangeOrDistance) {\n\t\treturn this.where(Filter.distance(field, locationOrCircle, opt_rangeOrDistance));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"range\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} rangeOrMin Either a `Range` instance or a the range's min\n\t * value.\n\t * @param {*=} opt_max The range's max value.\n\t * @return {!Filter}\n\t * @chainnable\n\t */\n\trange(field, rangeOrMin, opt_max) {\n\t\treturn this.where(Filter.range(field, rangeOrMin, opt_max));\n\t}\n\n\t/**\n\t * Sets the limit for this request's {@link Query}.\n\t * @param {number} limit The max amount of entries that this request should return.\n\t * @chainable\n\t */\n\tlimit(limit) {\n\t\tthis.getOrCreateQuery_().limit(limit);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the offset for this request's {@link Query}.\n\t * @param {number} offset The index of the first entry that should be\n\t * returned by this query.\n\t * @chainable\n\t */\n\toffset(offset) {\n\t\tthis.getOrCreateQuery_().offset(offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a highlight entry to this request's {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @chainable\n\t */\n\thighlight(field) {\n\t\tthis.getOrCreateQuery_().highlight(field);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an {@link\n\t * Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @chainable\n\t */\n\taggregate(name, aggregationOrField, opt_operator) {\n\t\tthis.getOrCreateQuery_().aggregate(name, aggregationOrField, opt_operator);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this request's query type to 'count'.\n\t * @chainnable\n\t */\n\tcount() {\n\t\tthis.getOrCreateQuery_().type('count');\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a sort query to this request's body.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should\n\t * use. If none is given, 'asc' is used by default.\n\t * @chainnable\n\t */\n\torderBy(field, opt_direction) {\n\t\tthis.getOrCreateQuery_().sort(field, opt_direction);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates an object (or multiple objects) and saves it to WeDeploy data. If\n\t * there's a validation registered in the collection and the request is\n\t * successful, the resulting object (or array of objects) is returned. The\n\t * data parameter can be either an Object or an Array of Objects.\n\t * These Objects describe the attributes on the objects that are to be created.\n\t * ```javascript\n\t * var data = WeDeploy.data('http://demodata.wedeploy.io');\n\t *\n\t * data.create('movies', {'title'=> 'Star Wars: Episode I – The Phantom Menace'})\n\t * \t\t .then(function(movie){\n\t * \t\t\t console.log(movie)\n\t *     });\n\t *\n\t * data.create('movies', [{'title'=> 'Star Wars: Episode II – Attack of the Clones'},\n\t * \t\t\t\t\t\t\t\t\t\t\t\t{'title'=> 'Star Wars: Episode III – Revenge of the Sith'})\n\t * \t\t .then(function(movies){\n\t * \t\t\t console.log(movies)\n\t *     });\n\t * ```\n\t * @param {string} collection Collection (key) used to create the new data.\n\t * @param {Object} data Attributes on the object that is to be created.\n\t * @return {!CancellablePromise}\n\t */\n\tcreate(collection, data) {\n\t\tassertDefAndNotNull(collection, 'Collection key must be specified.');\n\t\tassertObject(data, 'Data can\\'t be empty.');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.auth(this.helperAuthScope)\n\t\t\t.path(collection)\n\t\t\t.post(data)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Update the attributes of a document form the passed-in object and saves\n\t * the record. If the object is invalid, the saving will fail and an error\n\t * object will be returned.\n\t *\n\t * ```javascript\n\t * var data = WeDeploy.data('http://demodata.wedeploy.io');\n\t *\n\t * data.update('movies/1019112353', {'title'=> 'Star Wars: Episode I'})\n\t * \t\t .then(function(movie){\n\t * \t\t\t console.log(movie)\n\t *     });\n\t * ```\n\t * @param {string} document Key used to update the document.\n\t * @param {Object} data Attributes on the object that is to be updated.\n\t * @return {!CancellablePromise}\n\t */\n\tupdate(document, data) {\n\t\tassertDefAndNotNull(document, 'Document key must be specified.');\n\t\tassertObject(data, 'Data must be specified.');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.auth(this.helperAuthScope)\n\t\t\t.path(document)\n\t\t\t.put(data)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Deletes a [document/field/collection].\n\t * @param {string} key Key used to delete the\n\t * document/field/collection.\n\t * @return {!CancellablePromise}\n\t */\n\tdelete(key) {\n\t\tassertDefAndNotNull(key, 'Document/Field/Collection key must be specified');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.auth(this.helperAuthScope)\n\t\t\t.path(key)\n\t\t\t.delete()\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(() => undefined);\n\t}\n\n\t/**\n\t * Retrieve data from a [document/field/collection].\n\t * @param {string} key Key used to delete the document/field/collection.\n\t * @return {!CancellablePromise}\n\t */\n\tget(key) {\n\t\tassertDefAndNotNull(key, 'Document/Field/Collection key must be specified');\n\n\t\tthis.addFiltersToQuery_();\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.auth(this.helperAuthScope)\n\t\t\t.path(key)\n\t\t\t.get(this.query_)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Retrieve data from a [document/field/collection] and put it in a search\n\t * format.\n\t * @param {string} key Key used to delete the document/field/collection.\n\t * @return {!CancellablePromise}\n\t */\n\tsearch(key) {\n\t\tassertDefAndNotNull(key, 'Document/Field/Collection key must be specified');\n\n\t\tthis.onSearch_();\n\n\t\tthis.addFiltersToQuery_();\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.auth(this.helperAuthScope)\n\t\t\t.path(key)\n\t\t\t.get(this.query_)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Creates new socket.io instance. Monitor the arrival of new broadcasted\n\t * data.\n\t * @param  {string} collection key/collection used to find organized data.\n\t * @param  {Object=} opt_options Object with Socket IO options.\n\t * @return {!io} Socket IO reference. Server events can be listened on it.\n\t */\n\twatch(collection, opt_options) {\n\t\tassertDefAndNotNull(collection, 'Collection key must be specified');\n\n\t\tthis.addFiltersToQuery_();\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.auth(this.helperAuthScope)\n\t\t\t.path(collection)\n\t\t\t.watch(this.query_, opt_options);\n\t}\n\n\t/**\n\t * Gets the currentl used main {@link Filter} object. If none exists yet, a\n\t * new one is created.\n\t * @return {!Query}\n\t * @protected\n\t */\n\tgetOrCreateFilter_() {\n\t\tif (!this.filter_) {\n\t\t\tthis.filter_ = new Filter();\n\t\t}\n\t\treturn this.filter_;\n\t}\n\n\t/**\n\t * Gets the currently used {@link Query} object. If none exists yet,\n\t * a new one is created.\n\t * @return {!Query}\n\t * @protected\n\t */\n\tgetOrCreateQuery_() {\n\t\tif (!this.query_) {\n\t\t\tthis.query_ = new Query();\n\t\t}\n\t\treturn this.query_;\n\t}\n\n\t/**\n\t * Load the currently used main {@link Filter} object into the currently\n\t * used {@link Query}.\n\t * @chainable\n\t * @protected\n\t */\n\taddFiltersToQuery_() {\n\t\tif (core.isDef(this.filter_) && this.toSearch_ !== true) {\n\t\t\tthis.getOrCreateQuery_().filter(this.filter_);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a search to this request's {@link Query} instance.\n\t * @chainable\n\t * @protected\n\t */\n\tonSearch_() {\n\t\tif (core.isDef(this.filter_)) {\n\t\t\tthis.getOrCreateQuery_().search(this.getOrCreateFilter_());\n\t\t} else {\n\t\t\tthrow Error('It\\'s required to have a condition before using an \\'search()\\' for the first time.');\n\t\t}\n\t\tthis.toSearch_ = true;\n\t\treturn this;\n\t}\n\n}\n\nexport default DataApiHelper;\n","'use strict';\n\n/**\n * Abstraction layer for string to base64 conversion\n * reference: https://github.com/nodejs/node/issues/3462\n */\nclass Base64 {\n\t/**\n\t * Creates a base-64 encoded ASCII string from a \"string\" of binary data.\n\t * @param {string} string to be encoded.\n\t * @return {string}\n\t * @static\n\t */\n\tstatic encodeString(string) {\n\t\tif (typeof btoa === 'function') {\n\t\t\treturn btoa(string);\n\t\t}\n\n\t\treturn new Buffer(string.toString(), 'binary');\n\t}\n}\n\nexport default Base64;\n","'use strict';\n\n/**\n * Provides a convenient interface for data transport.\n * @interface\n */\nclass Transport {\n\n\t/**\n\t * Sends a message for the specified client.\n\t * @param {!ClientRequest} clientRequest\n\t * @return {!Promise} Deferred request.\n\t */\n\tsend() {}\n\n}\n\nexport default Transport;\n","'use strict';\n\nimport { core } from 'metal';\nimport { MultiMap } from 'metal-structs';\n\n/**\n * Represents a client message (e.g. a request or a response).\n */\nclass ClientMessage {\n\tconstructor() {\n\t\tthis.headers_ = new MultiMap();\n\t}\n\n\t/**\n\t * Fluent getter and setter for request body.\n\t * @param {*=} opt_body Request body to be set. If none is given,\n\t *   the current value of the body will be returned.\n\t * @return {*} Returns request body if no body value was given. Otherwise\n\t *   returns the {@link ClientMessage} object itself, so calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tbody(opt_body) {\n\t\tif (core.isDef(opt_body)) {\n\t\t\tthis.body_ = opt_body;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.body_;\n\t}\n\n\t/**\n\t * Adds a header. If a header with the same name already exists, it will not be\n\t * overwritten, but the new value will be stored as well. The order is preserved.\n\t * @param {string} name\n\t * @param {string} value\n\t * @chainable\n\t */\n\theader(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.headers_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request headers.\n\t * @param {MultiMap|Object=} opt_headers Request headers list to\n\t *   be set. If none is given the current value of the headers will\n\t *   be returned.\n\t * @return {!MultiMap|ClientMessage} Returns map of request headers\n\t *   if no new value was given. Otherwise returns the {@link ClientMessage}\n\t *   object itself, so calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\theaders(opt_headers) {\n\t\tif (core.isDef(opt_headers)) {\n\t\t\tif (opt_headers instanceof MultiMap) {\n\t\t\t\tthis.headers_ = opt_headers;\n\t\t\t} else {\n\t\t\t\tthis.headers_.values = opt_headers;\n\t\t\t}\n\t\t\treturn opt_headers;\n\t\t}\n\t\treturn this.headers_;\n\t}\n\n\t/**\n\t * Removes the body.\n\t */\n\tremoveBody() {\n\t\tthis.body_ = undefined;\n\t}\n}\n\nexport default ClientMessage;\n","'use strict';\n\nimport { core } from 'metal';\nimport ClientMessage from './ClientMessage';\n\n/**\n * Represents a client response object.\n * @extends {ClientMessage}\n */\nclass ClientResponse extends ClientMessage {\n\tconstructor(clientRequest) {\n\t\tsuper();\n\t\tif (!clientRequest) {\n\t\t\tthrow new Error('Can\\'t create response without request');\n\t\t}\n\t\tthis.clientRequest_ = clientRequest;\n\t}\n\n\t/**\n\t * Returns request that created this response.\n\t * @return {!ClientRequest}\n\t */\n\trequest() {\n\t\treturn this.clientRequest_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for response status code.\n\t * @param {number=} opt_statusCode Request status code to be set. If none is given,\n\t *   the current status code value will be returned.\n\t * @return {!ClientMessage|number} Returns response status code if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so calls can\n\t *   be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tstatusCode(opt_statusCode) {\n\t\tif (core.isDef(opt_statusCode)) {\n\t\t\tthis.statusCode_ = opt_statusCode;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.statusCode_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for response status text.\n\t * @param {string=} opt_statusText Request status text to be set. If none is given,\n\t *   the current status text value will be returned.\n\t * @return {!ClientMessage|number} Returns response status text if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so calls can\n\t *   be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tstatusText(opt_statusText) {\n\t\tif (core.isDef(opt_statusText)) {\n\t\t\tthis.statusText_ = opt_statusText;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.statusText_;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered valid.\n\t * @return {boolean}\n\t */\n\tsucceeded() {\n\t\treturn this.statusCode() >= 200 && this.statusCode() <= 399;\n\t}\n\n}\n\nexport default ClientResponse;\n","'use strict';\n\nimport Ajax from 'metal-ajax';\nimport Transport from '../Transport';\nimport ClientResponse from '../ClientResponse';\n\n/**\n * The implementation of an ajax transport to be used with {@link WeDeploy}.\n * @extends {Transport}\n */\nclass AjaxTransport extends Transport {\n\t/**\n\t * @inheritDoc\n\t */\n\tsend(clientRequest) {\n\t\tvar deferred = Ajax.request(\n\t\t\tclientRequest.url(), clientRequest.method(), clientRequest.body(),\n\t\t\tclientRequest.headers(), clientRequest.params(), null, false, clientRequest.withCredentials());\n\n\t\treturn deferred.then(function(response) {\n\t\t\tvar clientResponse = new ClientResponse(clientRequest);\n\t\t\tclientResponse.body(response.responseText);\n\t\t\tclientResponse.statusCode(response.status);\n\t\t\tclientResponse.statusText(response.statusText);\n\t\t\tAjax.parseResponseHeaders(response.getAllResponseHeaders()).forEach(function(header) {\n\t\t\t\tclientResponse.header(header.name, header.value);\n\t\t\t});\n\t\t\treturn clientResponse;\n\t\t});\n\t}\n}\n\nexport default AjaxTransport;\n","'use strict';\n\nimport AjaxTransport from './browser/AjaxTransport';\n\n/**\n * Provides a factory for data transport.\n */\nclass TransportFactory {\n\tconstructor() {\n\t\tthis.transports = {};\n\t\tthis.transports[TransportFactory.DEFAULT_TRANSPORT_NAME] = TransportFactory[TransportFactory.DEFAULT_TRANSPORT_NAME];\n\t}\n\n\t/**\n\t * Returns {@link TransportFactory} instance.\n\t */\n\tstatic instance() {\n\t\tif (!TransportFactory.instance_) {\n\t\t\tTransportFactory.instance_ = new TransportFactory();\n\t\t}\n\t\treturn TransportFactory.instance_;\n\t}\n\n\t/**\n\t * Gets an instance of the transport implementation with the given name.\n\t * @param {string} implementationName\n\t * @return {!Transport}\n\t */\n\tget(implementationName) {\n\t\tvar TransportClass = this.transports[implementationName];\n\n\t\tif (!TransportClass) {\n\t\t\tthrow new Error('Invalid transport name: ' + implementationName);\n\t\t}\n\n\t\ttry {\n\t\t\treturn new (TransportClass)();\n\t\t} catch (err) {\n\t\t\tthrow new Error('Can\\'t create transport', err);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the default transport implementation.\n\t * @return {!Transport}\n\t */\n\tgetDefault() {\n\t\treturn this.get(TransportFactory.DEFAULT_TRANSPORT_NAME);\n\t}\n}\n\nTransportFactory.DEFAULT_TRANSPORT_NAME = 'default';\n\nTransportFactory[TransportFactory.DEFAULT_TRANSPORT_NAME] = AjaxTransport;\n\nexport default TransportFactory;\n","'use strict';\n\nimport { core } from 'metal';\nimport ClientMessage from './ClientMessage';\nimport { MultiMap } from 'metal-structs';\n\n/**\n * Represents a client request object.\n * @extends {ClientMessage}\n */\nclass ClientRequest extends ClientMessage {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.params_ = new MultiMap();\n\t\tthis.withCredentials_ = true;\n\t}\n\n\t/**\n\t * Fluent getter and setter for with credentials option.\n\t * @param {boolean=} opt_withCredentials\n\t * @chainable Chainable when used as setter.\n\t */\n\twithCredentials(opt_withCredentials) {\n\t\tif (core.isDef(opt_withCredentials)) {\n\t\t\tthis.withCredentials_ = !!opt_withCredentials;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.withCredentials_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request method.\n\t * @param {string=} opt_method Request method to be set. If none is given,\n\t *   the current method value will be returned.\n\t * @return {!ClientMessage|string} Returns request method if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so\n\t *   calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tmethod(opt_method) {\n\t\tif (core.isDef(opt_method)) {\n\t\t\tthis.method_ = opt_method;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.method_ || ClientRequest.DEFAULT_METHOD;\n\t}\n\n\t/**\n\t * Adds a query. If a query with the same name already exists, it will not\n\t * be overwritten, but new value will be stored as well. The order is preserved.\n\t * @param {string} name\n\t * @param {string} value\n\t * @chainable\n\t */\n\tparam(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.params_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request querystring.\n\t * @param {MultiMap|Object=} opt_params Request querystring map to be set.\n\t *   If none is given the current value of the params will be returned.\n\t * @return {!MultiMap|ClientMessage} Returns map of request querystring if\n\t *   no new value was given. Otherwise returns the {@link ClientMessage}\n\t *   object itself, so calls can be chained.\n\t */\n\tparams(opt_params) {\n\t\tif (core.isDef(opt_params)) {\n\t\t\tif (opt_params instanceof MultiMap) {\n\t\t\t\tthis.params_ = opt_params;\n\t\t\t} else {\n\t\t\t\tthis.params_.values = opt_params;\n\t\t\t}\n\t\t\treturn opt_params;\n\t\t}\n\t\treturn this.params_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request url.\n\t * @param {string=} opt_url Request url to be set. If none is given,\n\t *   the current value of the url will be returned.\n\t * @return {!ClientMessage|string} Returns request url if no new value was given.\n\t *   Otherwise returns the {@link ClientMessage} object itself, so calls can be\n\t *   chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\turl(opt_url) {\n\t\tif (core.isDef(opt_url)) {\n\t\t\tthis.url_ = opt_url;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.url_;\n\t}\n\n}\n\nClientRequest.DEFAULT_METHOD = 'GET';\n\nexport default ClientRequest;\n","'use strict';\n\nimport globals from '../globals/globals';\nimport { core } from 'metal';\nimport Auth from './auth/Auth';\nimport AuthApiHelper from './auth/AuthApiHelper';\nimport DataApiHelper from './data/DataApiHelper';\nimport Base64 from '../crypt/Base64';\nimport Embodied from '../api-query/Embodied';\nimport Query from '../api-query/Query';\nimport Filter from '../api-query/Filter';\nimport TransportFactory from './TransportFactory';\nimport ClientRequest from './ClientRequest';\nimport { MultiMap } from 'metal-structs';\nimport Uri from 'metal-uri';\nimport { assertUriWithNoPath } from './assertions';\n\n\nvar io;\n\n// Optimistic initialization of `io` reference from global `globals.window.io`.\nif (typeof globals.window !== 'undefined') {\n\tio = globals.window.io;\n}\n\n/**\n * The main class for making api requests. Sending requests returns a promise\n * that is resolved when the response arrives. Usage example:\n * ```javascript\n * WeDeploy\n *   .url('/data/tasks')\n *   .post({desc: 'Buy milkl'})\n *   .then(function(response) {\n *     // Handle response here.\n *     console.log(response.body())\n *   });\n * ```\n */\nclass WeDeploy {\n\t/**\n\t * WeDeploy constructor function.\n\t * @param {string} url The base url.\n\t * @param {...string} paths Any amount of paths to be appended to the base\n\t * url.\n\t * @constructor\n\t */\n\tconstructor(url, ...paths) {\n\t\tif (arguments.length === 0) {\n\t\t\tthrow new Error('Invalid arguments, try `new WeDeploy(baseUrl, url)`');\n\t\t}\n\n\t\tthis.auth_ = null;\n\t\tthis.body_ = null;\n\t\tthis.url_ = Uri.joinPaths(url || '', ...paths);\n\t\tthis.headers_ = new MultiMap();\n\t\tthis.params_ = new MultiMap();\n\t\tthis.withCredentials_ = true;\n\n\t\tthis.header('Content-Type', 'application/json');\n\t\tthis.header('X-Requested-With', 'XMLHttpRequest');\n\t}\n\n\t/**\n\t * Static factory for creating WeDeploy data for the given url.\n\t * @param {string=} opt_dataUrl The url that points to the data services.\n\t * @return @return {data} WeDeploy data instance.\n\t */\n\tstatic data(opt_dataUrl) {\n\t\tassertUriWithNoPath(opt_dataUrl, 'The data url should not have a path');\n\n\t\tif (core.isString(opt_dataUrl)) {\n\t\t\tWeDeploy.dataUrl_ = opt_dataUrl;\n\t\t}\n\n\t\tlet data = new DataApiHelper(WeDeploy);\n\n\t\tdata.auth(WeDeploy.auth().currentUser);\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * Adds authorization information to this request.\n\t * @param {!Auth|string} authOrTokenOrEmail Either an {@link Auth} instance,\n\t * an authorization token, or the email.\n\t * @param {string=} opt_password If a email is given as the first param,\n\t * this should be the password.\n\t * @chainable\n\t */\n\tauth(authOrTokenOrEmail, opt_password) {\n\t\tthis.auth_ = authOrTokenOrEmail;\n\t\tif (!(this.auth_ instanceof Auth)) {\n\t\t\tthis.auth_ = Auth.create(authOrTokenOrEmail, opt_password);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Static factory for creating WeDeploy auth for the given url.\n\t * @param {string=} opt_authUrl The url that points to the auth service.\n\t */\n\tstatic auth(opt_authUrl) {\n\t\tif (core.isString(opt_authUrl)) {\n\t\t\tWeDeploy.authUrl_ = opt_authUrl;\n\t\t}\n\t\tif (!WeDeploy.auth_) {\n\t\t\tWeDeploy.auth_ = new AuthApiHelper(WeDeploy);\n\t\t}\n\t\treturn WeDeploy.auth_;\n\t}\n\n\t/**\n\t * Sets the body that will be sent with this request.\n\t * @param {*} body\n\t * @chainable\n\t */\n\tbody(body) {\n\t\tthis.body_ = body;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Converts the given body object to query params.\n\t * @param {!ClientRequest} clientRequest Client request.\n\t * @param {*} body\n\t * @protected\n\t */\n\tconvertBodyToParams_(clientRequest, body) {\n\t\tif (core.isString(body)) {\n\t\t\tbody = {\n\t\t\t\tbody: body\n\t\t\t};\n\t\t} else if (body instanceof Embodied) {\n\t\t\tbody = body.body();\n\t\t}\n\t\tObject.keys(body || {}).forEach(name => clientRequest.param(name, body[name]));\n\t}\n\n\t/**\n\t * Creates client request and encode.\n\t * @param {string} method\n\t * @param {*} body\n\t * @return {!ClientRequest} Client request.\n\t * @protected\n\t */\n\tcreateClientRequest_(method, body) {\n\t\tconst clientRequest = new ClientRequest();\n\n\t\tclientRequest.body(body || this.body_);\n\n\t\tif (!core.isDefAndNotNull(clientRequest.body())) {\n\t\t\tif (this.formData_) {\n\t\t\t\tclientRequest.body(this.formData_);\n\t\t\t}\n\t\t}\n\n\t\tclientRequest.method(method);\n\t\tclientRequest.headers(this.headers());\n\t\tclientRequest.params(this.params());\n\t\tclientRequest.url(this.url());\n\t\tclientRequest.withCredentials(this.withCredentials_);\n\n\t\tthis.encode(clientRequest);\n\n\t\treturn clientRequest;\n\t}\n\n\t/**\n\t * Decodes clientResponse body, parsing the body for example.\n\t * @param {!ClientResponse} clientResponse The response object to be\n\t * decoded.\n\t * @return {!ClientResponse} The decoded response.\n\t */\n\tdecode(clientResponse) {\n\t\tif (WeDeploy.isContentTypeJson(clientResponse)) {\n\t\t\ttry {\n\t\t\t\tclientResponse.body(JSON.parse(clientResponse.body()));\n\t\t\t} catch (err) {}\n\t\t}\n\t\treturn clientResponse;\n\t}\n\n\t/**\n\t * Sends message with the DELETE http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tdelete(opt_body) {\n\t\treturn this.sendAsync('DELETE', opt_body);\n\t}\n\n\t/**\n\t * Encodes the given {@link ClientRequest}, converting its body to an\n\t * appropriate format for example.\n\t * @param {!ClientRequest} clientRequest The request object to encode.\n\t * @return {!ClientRequest} The encoded request.\n\t */\n\tencode(clientRequest) {\n\t\tlet body = clientRequest.body();\n\n\t\tif (core.isElement(body)) {\n\t\t\tbody = new FormData(body);\n\t\t\tclientRequest.body(body);\n\t\t}\n\n\t\tbody = this.maybeWrapWithQuery_(body);\n\t\tif (clientRequest.method() === 'GET') {\n\t\t\tthis.convertBodyToParams_(clientRequest, body);\n\t\t\tclientRequest.removeBody();\n\t\t\tbody = null;\n\t\t}\n\n\t\tif (typeof FormData !== 'undefined' && body instanceof FormData) {\n\t\t\tclientRequest.headers().remove('content-type');\n\t\t} else if (body instanceof Embodied) {\n\t\t\tclientRequest.body(body.toString());\n\t\t} else if (WeDeploy.isContentTypeJson(clientRequest)) {\n\t\t\tclientRequest.body(JSON.stringify(clientRequest.body()));\n\t\t}\n\n\t\tthis.encodeParams_(clientRequest);\n\t\tthis.resolveAuthentication_(clientRequest);\n\n\t\treturn clientRequest;\n\t}\n\n\t/**\n\t * Encodes the params for the given request, according to their types.\n\t * @param {!ClientRequest} clientRequest\n\t * @protected\n\t */\n\tencodeParams_(clientRequest) {\n\t\tlet params = clientRequest.params();\n\t\tparams.names().forEach(function(name) {\n\t\t\tlet values = params.getAll(name);\n\t\t\tvalues.forEach(function(value, index) {\n\t\t\t\tif (value instanceof Embodied) {\n\t\t\t\t\tvalue = value.toString();\n\t\t\t\t} else if (core.isObject(value) || (value instanceof Array)) {\n\t\t\t\t\tvalue = JSON.stringify(value);\n\t\t\t\t}\n\t\t\t\tvalues[index] = value;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Adds a key/value pair to be sent via the body in a `multipart/form-data` format.\n\t * If the body is set by other means (for example, through the `body` method), this\n\t * will be ignored.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tform(name, value) {\n\t\tif (typeof FormData === 'undefined') {\n\t\t\tthrow new Error('form() is only available when FormData API is available.');\n\t\t}\n\n\t\tif (!this.formData_) {\n\t\t\tthis.formData_ = new FormData();\n\t\t}\n\t\tthis.formData_.append(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sends message with the GET http verb.\n\t * @param {*=} opt_params Params to be added to the request url.\n\t * @return {!CancellablePromise}\n\t */\n\tget(opt_params) {\n\t\treturn this.sendAsync('GET', opt_params);\n\t}\n\n\t/**\n\t * Adds a header. If the header with the same name already exists, it will\n\t * not be overwritten, but new value will be stored. The order is preserved.\n\t * @param {string} name Header key.\n\t * @param {*} value Header value.\n\t * @chainable\n\t */\n\theader(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.headers_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the headers.\n\t * @return {!MultiMap}\n\t */\n\theaders() {\n\t\treturn this.headers_;\n\t}\n\n\t/**\n\t * Wraps the given `Embodied` instance with a {@link Query} instance if needed.\n\t * @param {Embodied} embodied\n\t * @return {Embodied}\n\t * @protected\n\t */\n\tmaybeWrapWithQuery_(embodied) {\n\t\tif (embodied instanceof Filter) {\n\t\t\tembodied = Query.filter(embodied);\n\t\t}\n\t\treturn embodied;\n\t}\n\n\t/**\n\t * Adds a query. If the query with the same name already exists, it will not\n\t * be overwritten, but new value will be stored. The order is preserved.\n\t * @param {string} name Param key.\n\t * @param {*} value Param value.\n\t * @chainable\n\t */\n\tparam(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.params_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the query strings map.\n\t * @return {!MultiMap}\n\t */\n\tparams() {\n\t\treturn this.params_;\n\t}\n\n\t/**\n\t * Sends message with the PATCH http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tpatch(opt_body) {\n\t\treturn this.sendAsync('PATCH', opt_body);\n\t}\n\n\t/**\n\t * Creates a new {@link WeDeploy} instance for handling the url resulting in the\n\t * union of the current url with the given paths.\n\t * @param {...string} paths Any number of paths.\n\t * @return {!WeDeploy} A new {@link WeDeploy} instance for handling the given paths.\n\t */\n\tpath(...paths) {\n\t\tlet wedeployClient = new WeDeploy(this.url(), ...paths);\n\n\t\tif (core.isDefAndNotNull(this.auth_)) {\n\t\t\twedeployClient.auth(this.auth_);\n\t\t}\n\n\t\treturn wedeployClient.use(this.customTransport_);\n\t}\n\n\t/**\n\t * Sends message with the POST http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tpost(opt_body) {\n\t\treturn this.sendAsync('POST', opt_body);\n\t}\n\n\t/**\n\t * Sends message with the PUT http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tput(opt_body) {\n\t\treturn this.sendAsync('PUT', opt_body);\n\t}\n\n\t/**\n\t * Adds the authentication information to the request.\n\t * @param {!ClientRequest} clientRequest\n\t * @protected\n\t */\n\tresolveAuthentication_(clientRequest) {\n\t\tif (!this.auth_) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.auth_.hasToken()) {\n\t\t\tclientRequest.header('Authorization', 'Bearer ' + this.auth_.token);\n\t\t} else {\n\t\t\tconst credentials = this.auth_.email + ':' + this.auth_.password;\n\t\t\tclientRequest.header('Authorization', 'Basic ' + Base64.encodeString(credentials));\n\t\t}\n\t}\n\n\t/**\n\t * Uses transport to send request with given method name and body\n\t * asynchronously.\n\t * @param {string} method The HTTP method to be used when sending data.\n\t * @param {string} body Content to be sent as the request's body.\n\t * @return {!CancellablePromise} Deferred request.\n\t */\n\tsendAsync(method, body) {\n\t\tconst transport = this.customTransport_ || TransportFactory.instance().getDefault();\n\n\t\tconst clientRequest = this.createClientRequest_(method, body);\n\n\t\treturn transport.send(clientRequest).then(this.decode);\n\t}\n\n\t/**\n\t * Sets the socket transport\n\t * @param {Object} socket implementation object.\n\t */\n\tstatic socket(socket) {\n\t\tio = socket;\n\t}\n\n\t/**\n\t * Static factory for creating WeDeploy client for the given url.\n\t * @param {string} url The url that the client should use for sending requests.\n\t */\n\tstatic url(url) {\n\t\treturn new WeDeploy(url).use(this.customTransport_);\n\t}\n\n\t/**\n\t * Returns the URL used by this client.\n\t */\n\turl() {\n\t\treturn this.url_;\n\t}\n\n\t/**\n\t * Specifies {@link Transport} implementation.\n\t * @param {!Transport} transport The transport implementation that should be\n\t * used.\n\t */\n\tuse(transport) {\n\t\tthis.customTransport_ = transport;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates new socket.io instance. The parameters passed to socket.io\n\t * constructor will be provided:\n\t *\n\t * ```javascript\n\t * WeDeploy.url('http://domain:8080/path/a').watch({id: 'myId'}, {foo: true});\n\t * // Equals:\n\t * io('domain:8080/?url=path%2Fa%3Fid%3DmyId', {foo: true});\n\t * ```\n\t *\n\t * @param {Object=} opt_params Params to be sent with the Socket IO request.\n\t * @param {Object=} opt_options Object with Socket IO options.\n\t * @return {!io} Socket IO reference. Server events can be listened on it.\n\t */\n\twatch(opt_params, opt_options) {\n\t\tif (typeof io === 'undefined') {\n\t\t\tthrow new Error('Socket.io client not loaded');\n\t\t}\n\n\t\tconst clientRequest = this.createClientRequest_('GET', opt_params);\n\t\tconst uri = new Uri(clientRequest.url());\n\t\turi.addParametersFromMultiMap(clientRequest.params());\n\n\t\topt_options = opt_options || {\n\t\t\tforceNew: true\n\t\t};\n\t\topt_options.query = 'url=' + encodeURIComponent(uri.getPathname() + uri.getSearch());\n\t\topt_options.path = opt_options.path || uri.getPathname();\n\n\t\treturn io(uri.getHost(), opt_options);\n\t}\n\n\t/**\n\t * @param {boolean} opt_withCredentials\n\t */\n\twithCredentials(withCredentials) {\n\t\tthis.withCredentials_ = !!withCredentials;\n\t\treturn this;\n\t}\n}\n\nWeDeploy.isContentTypeJson = function(clientMessage) {\n\tconst contentType = clientMessage.headers().get('content-type') || '';\n\treturn contentType.indexOf('application/json') === 0;\n};\n\nWeDeploy.auth_ = null;\nWeDeploy.authUrl_ = '';\nWeDeploy.data_ = null;\nWeDeploy.dataUrl_ = '';\n\nexport default WeDeploy;\n","'use strict';\n\nimport http from 'http';\nimport request from 'request';\nimport CancellablePromise from 'metal-promise';\nimport ClientResponse from '../ClientResponse';\nimport Transport from '../Transport';\nimport Uri from 'metal-uri';\n\n/**\n * Provides a convenient interface for data transport.\n * @interface\n */\nclass NodeTransport extends Transport {\n\t/**\n\t * @inheritDoc\n\t */\n\tsend(clientRequest) {\n\t\tvar deferred = this.request(\n\t\t\tclientRequest.url(), clientRequest.method(), clientRequest.body(),\n\t\t\tclientRequest.headers(), clientRequest.params(), null, false);\n\n\t\treturn deferred.then(function(response) {\n\t\t\tvar clientResponse = new ClientResponse(clientRequest);\n\t\t\tclientResponse.body(response.body);\n\t\t\tclientResponse.statusCode(response.statusCode);\n\t\t\tclientResponse.statusText(http.STATUS_CODES[response.statusCode]);\n\n\t\t\tObject.keys(response.headers).forEach(function(name) {\n\t\t\t\tclientResponse.header(name, response.headers[name]);\n\t\t\t});\n\n\t\t\treturn clientResponse;\n\t\t});\n\t}\n\n\t/**\n\t * Requests the url using XMLHttpRequest.\n\t * @param {!string} url\n\t * @param {!string} method\n\t * @param {?string} body\n\t * @param {MultiMap} opt_headers\n\t * @param {MultiMap} opt_params\n\t * @param {number=} opt_timeout\n\t * @return {CancellablePromise} Deferred ajax request.\n\t * @protected\n\t */\n\trequest(url, method, body, opt_headers, opt_params, opt_timeout) {\n\t\tif (opt_params) {\n\t\t\turl = new Uri(url).addParametersFromMultiMap(opt_params).toString();\n\t\t}\n\n\t\tvar options = {\n\t\t\tmethod: method,\n\t\t\turi: url\n\t\t};\n\n\t\tif (opt_headers) {\n\t\t\tlet headers = {};\n\t\t\topt_headers.names().forEach(function(name) {\n\t\t\t\theaders[name] = opt_headers.getAll(name).join(', ');\n\t\t\t});\n\n\t\t\toptions.headers = headers;\n\t\t}\n\n\t\tif (body) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\tif (opt_timeout) {\n\t\t\toptions.timeout = opt_timeout;\n\t\t}\n\n\t\tvar connection;\n\n\t\treturn new CancellablePromise((resolve, reject) => {\n\t\t\tconnection = request(options, (error, response) => {\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(response);\n\t\t\t});\n\t\t}).thenCatch((reason) => {\n\t\t\tconnection.abort();\n\t\t\tthrow reason;\n\t\t});\n\t}\n\n}\n\nexport default NodeTransport;\n","'use strict';\n\nimport io from 'socket.io-client';\nimport Filter from '../api-query/Filter';\nimport Geo from '../api-query/Geo';\nimport Query from '../api-query/Query';\nimport WeDeploy from '../api/WeDeploy';\nimport NodeTransport from '../api/node/NodeTransport';\nimport Range from '../api-query/Range';\nimport TransportFactory from '../api/TransportFactory';\n\nTransportFactory[TransportFactory.DEFAULT_TRANSPORT_NAME] = NodeTransport;\nWeDeploy.socket(io);\n\nWeDeploy.Filter = Filter;\nWeDeploy.Geo = Geo;\nWeDeploy.Query = Query;\nWeDeploy.Range = Range;\n\n// This is for backwards compatibility for previous versions that were using\n// named exports.\nWeDeploy.WeDeploy = WeDeploy;\n\nexport default WeDeploy;\n"],"names":["Embodied","body_","JSON","stringify","body","obj","FilterBody","field","operatorOrValue","opt_value","core","isDef","value","isDefAndNotNull","createBody_","operator","opt_filter","addArrayOperator_","filter","Array","push","filters","i","length","add","key","Geo","upperLeft","lowerRight","BoundingBox","center","radius","Circle","points","Line","lat","lon","Point","Polygon","map","toBody","point","coordinates","addCoordinates_","Range","from","opt_to","to","Filter","fieldOrFilter","opt_operatorOrValue","toFilter","addMany","getObject","values","prototype","slice","call","arguments","boxOrUpperLeft","opt_lowerRight","polygon","getPoints","locationOrCircle","opt_rangeOrDistance","location","range","getCenter","getRadius","distanceInternal_","min","max","fieldOrQuery","opt_queryOrFuzziness","opt_fuzziness","fuzzyInternal_","arg2IsString","isString","fuzziness","ALL","opt_query","query","rangeOrMin","opt_max","shapes","shape","Aggregation","field_","operator_","value_","ranges","DistanceAggregation","interval","RangeAggregation","rangeOrFrom","unit","Query","name","aggregationOrField","opt_operator","aggregation","getField","getOperator","getValue","type","offset","highlight","limit","filterOrTextOrField","opt_textOrOperator","match","search","opt_direction","sort","sortEntry","aggregate","globals","window","document","assertBrowserEnvironment","Error","assertDefAndNotNull","errorMessage","assertFunction","isFunction","assertObject","isObject","assertResponseSucceeded","response","succeeded","assertUserSignedIn","user","assertUriWithNoPath","url","message","uri","Uri","getPathname","Auth","tokenOrEmail","opt_password","token","email","password","createdAt","id","photoUrl","wedeployClient","data","authUrl_","path","auth","patch","then","delete","tokenOrUsername","ApiHelper","authOrTokenOrEmail","helperAuthScope","create","AuthProvider","provider","providerScope","redirectUri","scope","opt_authUrl","setPathname","hasProvider","setParameterValue","getProvider","hasProviderScope","getProviderScope","hasRedirectUri","getRedirectUri","hasScope","getScope","toString","assertStringIfDefAndNotNull","FacebookAuthProvider","PROVIDER","GithubAuthProvider","GoogleAuthProvider","AuthApiHelper","currentUser","onSignInCallback","onSignOutCallback","LocalStorageMechanism","isSupported","storage","Storage","processSignIn_","post","makeUserAuthFromData","protocol","host","pathname","fragment","hash","indexOf","substring","userId","resolveAuthScope","get","set","setWedeployClient","setCreatedAt","setEmail","setId","setName","setPhotoUrl","setToken","callback","redirectAccessToken","getRedirectAccessToken_","removeUrlFragmentCompletely_","loadCurrentUser","maybeCallOnSignInCallback_","history","pushState","title","param","access_token","setRedirectUri","getHrefWithoutFragment_","href","makeAuthorizationUrl","maybeCallOnSignOutCallback_","unloadCurrentUser_","remove","assertSupportedProvider","constructor","DataApiHelper","getOrCreateFilter_","and","or","args","where","none","similar","lt","lte","any","boundingBox","distance","getOrCreateQuery_","collection","dataUrl_","put","undefined","addFiltersToQuery_","query_","onSearch_","opt_options","watch","filter_","toSearch_","Base64","string","btoa","Buffer","Transport","ClientMessage","headers_","MultiMap","opt_body","opt_headers","ClientResponse","clientRequest","clientRequest_","opt_statusCode","statusCode_","opt_statusText","statusText_","statusCode","AjaxTransport","deferred","Ajax","request","method","headers","params","withCredentials","clientResponse","responseText","status","statusText","parseResponseHeaders","getAllResponseHeaders","forEach","header","TransportFactory","transports","DEFAULT_TRANSPORT_NAME","implementationName","TransportClass","err","instance_","ClientRequest","params_","withCredentials_","opt_withCredentials","opt_method","method_","DEFAULT_METHOD","opt_params","opt_url","url_","io","WeDeploy","paths","auth_","joinPaths","keys","formData_","encode","isContentTypeJson","parse","sendAsync","isElement","FormData","maybeWrapWithQuery_","convertBodyToParams_","removeBody","encodeParams_","resolveAuthentication_","names","getAll","index","append","embodied","use","customTransport_","hasToken","credentials","encodeString","transport","instance","getDefault","createClientRequest_","send","decode","addParametersFromMultiMap","encodeURIComponent","getSearch","getHost","opt_dataUrl","socket","clientMessage","contentType","data_","NodeTransport","http","STATUS_CODES","opt_timeout","options","join","timeout","connection","CancellablePromise","resolve","reject","error","thenCatch","reason","abort"],"mappings":"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"}