{"version":3,"sources":["init.js","initNamed.js","helpers.js","/Users/eduardo/Projects/liferay-apps/api.js/bower_components/metal/src/core.js","/Users/eduardo/Projects/liferay-apps/api.js/src/Transport.js","/Users/eduardo/Projects/liferay-apps/api.js/src/Util.js","/Users/eduardo/Projects/liferay-apps/api.js/src/ClientMessage.js","/Users/eduardo/Projects/liferay-apps/api.js/src/ClientResponse.js","/Users/eduardo/Projects/liferay-apps/api.js/bower_components/metal-promise/src/promise/Promise.js","/Users/eduardo/Projects/liferay-apps/api.js/src/AjaxTransport.js","/Users/eduardo/Projects/liferay-apps/api.js/src/ClientRequest.js","/Users/eduardo/Projects/liferay-apps/api.js/src/TransportFactory.js","/Users/eduardo/Projects/liferay-apps/api.js/src/LaunchpadClient.js"],"names":[],"mappings":"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","file":"api.js","sourcesContent":[null,null,null,"'use strict';\n\n/**\n * A collection of core utility functions.\n * @const\n */\nclass core {\n\t/**\n\t * When defining a class Foo with an abstract method bar(), you can do:\n\t * Foo.prototype.bar = core.abstractMethod\n\t *\n\t * Now if a subclass of Foo fails to override bar(), an error will be thrown\n\t * when bar() is invoked.\n\t *\n\t * @type {!Function}\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic abstractMethod() {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Loops constructor super classes collecting its properties values. If\n\t * property is not available on the super class `undefined` will be\n\t * collected as value for the class hierarchy position.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @return {Array.<*>} Array of collected values.\n\t * TODO(*): Rethink superclass loop.\n\t */\n\tstatic collectSuperClassesProperty(constructor, propertyName) {\n\t\tvar propertyValues = [constructor[propertyName]];\n\t\twhile (constructor.__proto__ && !constructor.__proto__.isPrototypeOf(Function)) {\n\t\t\tconstructor = constructor.__proto__;\n\t\t\tpropertyValues.push(constructor[propertyName]);\n\t\t}\n\t\treturn propertyValues;\n\t}\n\n\t/**\n\t * Gets an unique id. If `opt_object` argument is passed, the object is\n\t * mutated with an unique id. Consecutive calls with the same object\n\t * reference won't mutate the object again, instead the current object uid\n\t * returns. See {@link core.UID_PROPERTY}.\n\t * @type {opt_object} Optional object to be mutated with the uid. If not\n\t *     specified this method only returns the uid.\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic getUid(opt_object) {\n\t\tif (opt_object) {\n\t\t\treturn opt_object[core.UID_PROPERTY] ||\n\t\t\t\t(opt_object[core.UID_PROPERTY] = core.uniqueIdCounter_++);\n\t\t}\n\t\treturn core.uniqueIdCounter_++;\n\t}\n\n\t/**\n\t * The identity function. Returns its first argument.\n\t * @param {*=} opt_returnValue The single value that will be returned.\n\t * @return {?} The first argument.\n\t */\n\tstatic identityFunction(opt_returnValue) {\n\t\treturn opt_returnValue;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a boolean.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is boolean.\n\t */\n\tstatic isBoolean(val) {\n\t\treturn typeof val === 'boolean';\n\t}\n\n\t/**\n\t * Returns true if the specified value is not undefined.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is defined.\n\t */\n\tstatic isDef(val) {\n\t\treturn val !== undefined;\n\t}\n\n\t/**\n\t * Returns true if value is not undefined or null.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isDefAndNotNull(val) {\n\t\treturn core.isDef(val) && !core.isNull(val);\n\t}\n\n\t/**\n\t * Returns true if value is a document.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isDocument(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 9;\n\t}\n\n\t/**\n\t * Returns true if value is a dom element.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isElement(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 1;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a function.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a function.\n\t */\n\tstatic isFunction(val) {\n\t\treturn typeof val === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is null.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isNull(val) {\n\t\treturn val === null;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a number.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a number.\n\t */\n\tstatic isNumber(val) {\n\t\treturn typeof val === 'number';\n\t}\n\n\t/**\n\t * Returns true if value is a window.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isWindow(val) {\n\t\treturn val !== null && val === val.window;\n\t}\n\n\t/**\n\t * Returns true if the specified value is an object. This includes arrays\n\t * and functions.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is an object.\n\t */\n\tstatic isObject(val) {\n\t\tvar type = typeof val;\n\t\treturn type === 'object' && val !== null || type === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is a string.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isString(val) {\n\t\treturn typeof val === 'string';\n\t}\n\n\t/**\n\t * Merges the values of a static property a class with the values of that\n\t * property for all its super classes, and stores it as a new static\n\t * property of that class. If the static property already existed, it won't\n\t * be recalculated.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @param {function(*, *):*=} opt_mergeFn Function that receives an array filled\n\t *   with the values of the property for the current class and all its super classes.\n\t *   Should return the merged value to be stored on the current class.\n\t * @return {boolean} Returns true if merge happens, false otherwise.\n\t */\n\tstatic mergeSuperClassesProperty(constructor, propertyName, opt_mergeFn) {\n\t\tvar mergedName = propertyName + '_MERGED';\n\t\tif (constructor.hasOwnProperty(mergedName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar merged = core.collectSuperClassesProperty(constructor, propertyName);\n\t\tif (opt_mergeFn) {\n\t\t\tmerged = opt_mergeFn(merged);\n\t\t}\n\t\tconstructor[mergedName] = merged;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Null function used for default values of callbacks, etc.\n\t * @return {void} Nothing.\n\t */\n\tstatic nullFunction() {}\n}\n\n/**\n * Unique id property prefix.\n * @type {String}\n * @protected\n */\ncore.UID_PROPERTY = 'core_' + ((Math.random() * 1e9) >>> 0);\n\n/**\n * Counter for unique id.\n * @type {Number}\n * @private\n */\ncore.uniqueIdCounter_ = 1;\n\nexport default core;\n","/**\n * Provides a convenient interface for data transport.\n * @interface\n */\nclass Transport {\n\n  /**\n   * Sends a message for the specified client.\n   * @param {ClientRequest} clientRequest\n   * @return {Promise} Deferred request.\n   */\n  send(clientRequest) {}\n\n}\n\nexport default Transport;\n","/**\n * Provides a convenient interface for data transport.\n * @interface\n */\nclass Util {\n\n  /**\n   * Parses the url separating the domain and port from the path.\n   * @param {string} url\n   * @return {array} Array containing the url domain and path.\n   * @protected\n   */\n  static parseUrl(url) {\n    var base;\n    var path;\n    var domainAt = url.indexOf('//');\n    if (domainAt > -1) {\n      url = url.substring(domainAt + 2);\n    }\n    base = url.substring(0, url.indexOf('/'));\n    path = url.substring(url.indexOf('/'));\n    return [base, path];\n  }\n\n  /**\n   * Joins two paths.\n   * @param {string} basePath\n   * @param {string} path\n   */\n  static joinPaths(basePath, path) {\n    if (basePath.charAt(basePath.length-1) === '/') {\n      basePath = basePath.substring(0, basePath.length-1);\n    }\n    if (path.charAt(0) === '/') {\n      path = path.substring(1);\n    }\n    return [basePath, path].join('/');\n  }\n\n  /**\n   * XmlHttpRequest's getAllResponseHeaders() method returns a string of\n   * response headers according to the format described on the spec:\n   * http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method\n   * This method parses that string into a user-friendly name/value pair\n   * object.\n   * @param {string} allHeaders All headers as string.\n   * @return {array.<object<string, string>>=}\n   */\n  static parseResponseHeaders(allHeaders) {\n    var headers = [];\n    if (!allHeaders) {\n      return headers;\n    }\n    var pairs = allHeaders.split('\\u000d\\u000a');\n    for (var i = 0; i < pairs.length; i++) {\n      var index = pairs[i].indexOf('\\u003a\\u0020');\n      if (index > 0) {\n        var name = pairs[i].substring(0, index);\n        var value = pairs[i].substring(index + 2);\n        headers.push({ name: name, value: value });\n      }\n    }\n    return headers;\n  }\n\n}\n\nexport default Util;\n","import core from 'bower:metal/src/core';\n\n/**\n */\nclass ClientMessage {\n\n  constructor() {\n    this.headers_ = [];\n  }\n\n  /**\n   * Fluent getter and setter for request body.\n   * @param {string} opt_body Request body to be set.\n   * @return {string} Returns request body.\n   * @chainable Chainable when used for setter.\n   */\n  body(opt_body) {\n    if (core.isDef(opt_body)) {\n      this.body_ = opt_body;\n      return this;\n    }\n    return this.body_;\n  }\n\n  /**\n   * Adds a header. If the header with the same name already exists, it will\n   * not be overwritten, but new value will be stored. The order is preserved.\n   * @param {string} name\n   * @param {string} value\n   * @chainable\n   */\n  header(name, value) {\n    if (arguments.length !== 2) {\n      throw new Error('Invalid arguments');\n    }\n\n    this.headers_.push({\n      name: name,\n      value: value\n    });\n    return this;\n  }\n\n  /**\n   * Fluent getter and setter for request headers.\n   * @param {array.<object.<string, string>>} opt_queries Request headers\n   *     list to be set.\n   * @return {array.<object.<string, string>>} Returns request headers\n   *     list.\n   * @chainable Chainable when used for setter.\n   */\n  headers(opt_headers) {\n    if (core.isDef(opt_headers)) {\n      this.headers_ = opt_headers;\n      return this;\n    }\n    return this.headers_;\n  }\n\n}\n\nexport default ClientMessage;\n","import core from 'bower:metal/src/core';\nimport ClientMessage from './ClientMessage';\n\n/**\n */\nclass ClientResponse extends ClientMessage {\n\n  constructor(clientRequest) {\n    super();\n    if (!clientRequest) {\n      throw new Error('Can\\'t create response without request');\n    }\n    this.clientRequest_ = clientRequest;\n  }\n\n  /**\n   * Returns request that created this response.\n   * @return {ClientRequest}\n   */\n  request() {\n    return this.clientRequest_;\n  }\n\n  /**\n   * Fluent getter and setter for response status code.\n   * @param {number} opt_statusCode Request status code to be set.\n   * @return {number} Returns response status code.\n   */\n  statusCode(opt_statusCode) {\n    if (core.isDef(opt_statusCode)) {\n      this.statusCode_ = opt_statusCode;\n      return this;\n    }\n    return this.statusCode_;\n  }\n\n}\n\nexport default ClientResponse;\n","/*!\n * Promises polyfill from Google's Closure Library.\n *\n *      Copyright 2013 The Closure Library Authors. All Rights Reserved.\n *\n * NOTE(eduardo): Promise support is not ready on all supported browsers,\n * therefore core.js is temporarily using Google's promises as polyfill. It\n * supports cancellable promises and has clean and fast implementation.\n */\n\n'use strict';\n\nimport core from 'bower:metal/src/core';\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see CancellablePromise}.\n *\n * @interface\n * @extends {IThenable.<TYPE>}\n * @template TYPE\n */\nvar Thenable = function() {};\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the {@code onFulfilled} callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE):\n *             (RESULT|IThenable.<RESULT>|Thenable))=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fullfilled.\n * @param {?(function(*): *)=} opt_onRejected A function that will be invoked\n *     with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @return {!CancellablePromise.<RESULT>} A new Promise that will receive the\n *     result of the fulfillment or rejection callback.\n * @template RESULT,THIS\n */\nThenable.prototype.then = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * {@code Thenable}.\n *\n * {@see addImplementation}.\n *\n * @const\n */\nThenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:Thenable,...[?])} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\nThenable.addImplementation = function(ctor) {\n  ctor.prototype.then = ctor.prototype.then;\n  ctor.prototype.$goog_Thenable = true;\n};\n\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements {@code Thenable}.\n *     The class/superclass of the instance must call {@code addImplementation}.\n */\nThenable.isImplementedBy = function(object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\nvar partial = function(fn) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n\nvar async = {};\n\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nasync.throwException = function(exception) {\n  // Each throw needs to be in its own context.\n  async.nextTick(function() {\n    throw exception;\n  });\n};\n\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\nasync.run = function(callback, opt_context) {\n  if (!async.run.workQueueScheduled_) {\n    // Nothing is currently scheduled, schedule it now.\n    async.nextTick(async.run.processWorkQueue);\n    async.run.workQueueScheduled_ = true;\n  }\n\n  async.run.workQueue_.push(\n    new async.run.WorkItem_(callback, opt_context));\n};\n\n\n/** @private {boolean} */\nasync.run.workQueueScheduled_ = false;\n\n\n/** @private {!Array.<!async.run.WorkItem_>} */\nasync.run.workQueue_ = [];\n\n/**\n * Run any pending async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * async.nextTick.\n */\nasync.run.processWorkQueue = function() {\n  // NOTE: additional work queue items may be pushed while processing.\n  while (async.run.workQueue_.length) {\n    // Don't let the work queue grow indefinitely.\n    var workItems = async.run.workQueue_;\n    async.run.workQueue_ = [];\n    for (var i = 0; i < workItems.length; i++) {\n      var workItem = workItems[i];\n      try {\n        workItem.fn.call(workItem.scope);\n      } catch (e) {\n        async.throwException(e);\n      }\n    }\n  }\n\n  // There are no more work items, reset the work queue.\n  async.run.workQueueScheduled_ = false;\n};\n\n\n/**\n * @constructor\n * @final\n * @struct\n * @private\n *\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\nasync.run.WorkItem_ = function(fn, scope) {\n  /** @const */\n  this.fn = fn;\n  /** @const */\n  this.scope = scope;\n};\n\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n * reasons.\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @template SCOPE\n */\nasync.nextTick = function(callback, opt_context) {\n  var cb = callback;\n  if (opt_context) {\n    cb = callback.bind(opt_context);\n  }\n  cb = async.nextTick.wrapCallback_(cb);\n  // Introduced and currently only supported by IE10.\n  if (core.isFunction(window.setImmediate)) {\n    window.setImmediate(cb);\n    return;\n  }\n  // Look for and cache the custom fallback version of setImmediate.\n  if (!async.nextTick.setImmediate_) {\n    async.nextTick.setImmediate_ = async.nextTick.getSetImmediateEmulator_();\n  }\n  async.nextTick.setImmediate_(cb);\n};\n\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\nasync.nextTick.setImmediate_ = null;\n\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\nasync.nextTick.getSetImmediateEmulator_ = function() {\n  // Create a private message channel and use it to postMessage empty messages\n  // to ourselves.\n  var Channel = window.MessageChannel;\n  // If MessageChannel is not available and we are in a browser, implement\n  // an iframe based polyfill in browsers that have postMessage and\n  // document.addEventListener. The latter excludes IE8 because it has a\n  // synchronous postMessage implementation.\n  if (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n    window.postMessage && window.addEventListener) {\n    /** @constructor */\n    Channel = function() {\n      // Make an empty, invisible iframe.\n      var iframe = document.createElement('iframe');\n      iframe.style.display = 'none';\n      iframe.src = '';\n      document.documentElement.appendChild(iframe);\n      var win = iframe.contentWindow;\n      var doc = win.document;\n      doc.open();\n      doc.write('');\n      doc.close();\n      var message = 'callImmediate' + Math.random();\n      var origin = win.location.protocol + '//' + win.location.host;\n      var onmessage = function(e) {\n        // Validate origin and message to make sure that this message was\n        // intended for us.\n        if (e.origin !== origin && e.data !== message) {\n          return;\n        }\n        this.port1.onmessage();\n      }.bind(this);\n      win.addEventListener('message', onmessage, false);\n      this.port1 = {};\n      this.port2 = {\n        postMessage: function() {\n          win.postMessage(message, origin);\n        }\n      };\n    };\n  }\n  if (typeof Channel !== 'undefined') {\n    var channel = new Channel();\n    // Use a fifo linked list to call callbacks in the right order.\n    var head = {};\n    var tail = head;\n    channel.port1.onmessage = function() {\n      head = head.next;\n      var cb = head.cb;\n      head.cb = null;\n      cb();\n    };\n    return function(cb) {\n      tail.next = {\n        cb: cb\n      };\n      tail = tail.next;\n      channel.port2.postMessage(0);\n    };\n  }\n  // Implementation for IE6-8: Script elements fire an asynchronous\n  // onreadystatechange event when inserted into the DOM.\n  if (typeof document !== 'undefined' && 'onreadystatechange' in\n      document.createElement('script')) {\n    return function(cb) {\n      var script = document.createElement('script');\n      script.onreadystatechange = function() {\n        // Clean up and call the callback.\n        script.onreadystatechange = null;\n        script.parentNode.removeChild(script);\n        script = null;\n        cb();\n        cb = null;\n      };\n      document.documentElement.appendChild(script);\n    };\n  }\n  // Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n  // or more.\n  return function(cb) {\n    setTimeout(cb, 0);\n  };\n};\n\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\nasync.nextTick.wrapCallback_ = function(opt_returnValue) {\n  return opt_returnValue;\n};\n\n\n/**\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled or rejected with a value, which will be known\n * as the fulfillment value or the rejection reason. Whether fulfilled or\n * rejected, the Promise result is immutable once it is set.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling {@code then} and registering\n * {@code onFulfilled} and {@code onRejected} callbacks. Once the Promise\n * resolves, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional {@code then} calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering {@code then} invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is resolved, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable.<TYPE>|Thenable)),\n *             function(*)): void} resolver\n *     Initialization function that is invoked immediately with {@code resolve}\n *     and {@code reject} functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {Thenable.<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\nvar CancellablePromise = function(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {CancellablePromise.State_}\n   */\n  this.state_ = CancellablePromise.State_.PENDING;\n\n  /**\n   * The resolved result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling {@code then()}, the originating parent.\n   * @private {CancellablePromise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The list of {@code onFulfilled} and {@code onRejected} callbacks added to\n   * this Promise by calls to {@code then()}.\n   * @private {Array.<CancellablePromise.CallbackEntry_>}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the {@code UNHANDLED_REJECTION_DELAY} is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an {@code onRejected} callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    /**\n     * When the {@code UNHANDLED_REJECTION_DELAY} is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * {@code onRejected} callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  try {\n    var self = this;\n    resolver.call(\n      opt_context, function(value) {\n        self.resolve_(CancellablePromise.State_.FULFILLED, value);\n      }, function(reason) {\n        self.resolve_(CancellablePromise.State_.REJECTED, reason);\n      });\n  } catch (e) {\n    this.resolve_(CancellablePromise.State_.REJECTED, e);\n  }\n};\n\n/**\n * @define {number} The delay in milliseconds before a rejected Promise's reason\n * is passed to the rejection handler. By default, the rejection handler\n * rethrows the rejection reason so that it appears in the developer console or\n * {@code window.onerror} handler.\n *\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n */\nCancellablePromise.UNHANDLED_REJECTION_DELAY = 0;\n\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\nCancellablePromise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n\n/**\n * Typedef for entries in the callback chain. Each call to {@code then},\n * {@code thenCatch}, or {@code thenAlways} creates an entry containing the\n * functions that may be invoked once the Promise is resolved.\n *\n * @typedef {{\n *   child: CancellablePromise,\n *   onFulfilled: function(*),\n *   onRejected: function(*)\n * }}\n * @private\n */\nCancellablePromise.CallbackEntry_ = null;\n\n\n/**\n * @param {(TYPE|Thenable.<TYPE>|Thenable)=} opt_value\n * @return {!CancellablePromise.<TYPE>} A new Promise that is immediately resolved\n *     with the given value.\n * @template TYPE\n */\nCancellablePromise.resolve = function(opt_value) {\n  return new CancellablePromise(function(resolve) {\n      resolve(opt_value);\n    });\n};\n\n\n/**\n * @param {*=} opt_reason\n * @return {!CancellablePromise} A new Promise that is immediately rejected with the\n *     given reason.\n */\nCancellablePromise.reject = function(opt_reason) {\n  return new CancellablePromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to complete.\n * @template TYPE\n */\nCancellablePromise.race = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      if (!promises.length) {\n        resolve(undefined);\n      }\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(resolve, reject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<!Array.<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected by the first rejection result.\n * @template TYPE\n */\nCancellablePromise.all = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toFulfill = promises.length;\n      var values = [];\n\n      if (!toFulfill) {\n        resolve(values);\n        return;\n      }\n\n      var onFulfill = function(index, value) {\n        toFulfill--;\n        values[index] = value;\n        if (toFulfill === 0) {\n          resolve(values);\n        }\n      };\n\n      var onReject = function(reason) {\n        reject(reason);\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(partial(onFulfill, i), onReject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the value of\n *     the first input to be fulfilled, or is rejected with a list of every\n *     rejection reason if all inputs are rejected.\n * @template TYPE\n */\nCancellablePromise.firstFulfilled = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toReject = promises.length;\n      var reasons = [];\n\n      if (!toReject) {\n        resolve(undefined);\n        return;\n      }\n\n      var onFulfill = function(value) {\n        resolve(value);\n      };\n\n      var onReject = function(index, reason) {\n        toReject--;\n        reasons[index] = reason;\n        if (toReject === 0) {\n          reject(reasons);\n        }\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(onFulfill, partial(onReject, i));\n      }\n    });\n};\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the {@code onFulfilled} callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value (or thrown value) of the callback.\n *\n * @override\n */\nCancellablePromise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n  return this.addChildPromise_(\n    core.isFunction(opt_onFulfilled) ? opt_onFulfilled : null,\n    core.isFunction(opt_onRejected) ? opt_onRejected : null,\n    opt_context);\n};\nThenable.addImplementation(CancellablePromise);\n\n\n/**\n * Adds a callback that will be invoked whether the Promise is fulfilled or\n * rejected. The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with {@code thenAlways} will be\n * executed in the same order with other calls to {@code then},\n * {@code thenAlways}, or {@code thenCatch}.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with {@code thenAlways}. A Promise that has\n * a cleanup handler added with {@code thenAlways} will be canceled if all of\n * its children created by {@code then} (or {@code thenCatch}) are canceled.\n *\n * @param {function(this:THIS): void} onResolved A function that will be invoked\n *     when the Promise is resolved.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise.<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\nCancellablePromise.prototype.thenAlways = function(onResolved, opt_context) {\n  var callback = function() {\n    try {\n      // Ensure that no arguments are passed to onResolved.\n      onResolved.call(opt_context);\n    } catch (err) {\n      CancellablePromise.handleRejection_.call(null, err);\n    }\n  };\n\n  this.addCallbackEntry_({\n    child: null,\n    onRejected: callback,\n    onFulfilled: callback\n  });\n  return this;\n};\n\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {!function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\nCancellablePromise.prototype.thenCatch = function(onRejected, opt_context) {\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n/**\n * Alias of {@link CancellablePromise.prototype.thenCatch}\n */\nCancellablePromise.prototype.catch = CancellablePromise.prototype.thenCatch;\n\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\nCancellablePromise.prototype.cancel = function(opt_message) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    async.run(function() {\n      var err = new CancellablePromise.CancellationError(opt_message);\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\nCancellablePromise.prototype.cancelInternal_ = function(err) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n    } else {\n      this.resolve_(CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!CancellablePromise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\nCancellablePromise.prototype.cancelChild_ = function(childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childIndex = -1;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var i = 0, entry; (entry = this.callbackEntries_[i]); i++) {\n    var child = entry.child;\n    if (child) {\n      childCount++;\n      if (child === childPromise) {\n        childIndex = i;\n      }\n      if (childIndex >= 0 && childCount > 1) {\n        break;\n      }\n    }\n  }\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childIndex >= 0) {\n    if (this.state_ === CancellablePromise.State_.PENDING && childCount === 1) {\n      this.cancelInternal_(err);\n    } else {\n      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];\n      this.executeCallback_(\n        callbackEntry, CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been resolved.\n *\n * @param {CancellablePromise.CallbackEntry_} callbackEntry Record containing\n *     {@code onFulfilled} and {@code onRejected} callbacks to execute after\n *     the Promise is resolved.\n * @private\n */\nCancellablePromise.prototype.addCallbackEntry_ = function(callbackEntry) {\n  if ((!this.callbackEntries_ || !this.callbackEntries_.length) &&\n    (this.state_ === CancellablePromise.State_.FULFILLED ||\n    this.state_ === CancellablePromise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  if (!this.callbackEntries_) {\n    this.callbackEntries_ = [];\n  }\n  this.callbackEntries_.push(callbackEntry);\n};\n\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the {@code onFulfilled} or {@code onRejected} callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|CancellablePromise.<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fullfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!CancellablePromise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\nCancellablePromise.prototype.addChildPromise_ = function(\nonFulfilled, onRejected, opt_context) {\n\n  var callbackEntry = {\n    child: null,\n    onFulfilled: null,\n    onRejected: null\n  };\n\n  callbackEntry.child = new CancellablePromise(function(resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function(value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function(reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!core.isDef(result) &&\n          reason instanceof CancellablePromise.CancellationError) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(\n    /** @type {CancellablePromise.CallbackEntry_} */ (callbackEntry));\n  return callbackEntry.child;\n};\n\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\nCancellablePromise.prototype.unblockAndFulfill_ = function(value) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.FULFILLED, value);\n};\n\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\nCancellablePromise.prototype.unblockAndReject_ = function(reason) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.REJECTED, reason);\n};\n\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be resolved with the same state and result as the Thenable once it is itself\n * resolved.\n *\n * If the given result is not a Thenable, the Promise will be fulfilled or\n * rejected with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {CancellablePromise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\nCancellablePromise.prototype.resolve_ = function(state, x) {\n  if (this.state_ !== CancellablePromise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = CancellablePromise.State_.REJECTED;\n    x = new TypeError('CancellablePromise cannot resolve to itself');\n\n  } else if (Thenable.isImplementedBy(x)) {\n    x = /** @type {!Thenable} */ (x);\n    this.state_ = CancellablePromise.State_.BLOCKED;\n    x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);\n    return;\n\n  } else if (core.isObject(x)) {\n    try {\n      var then = x.then;\n      if (core.isFunction(then)) {\n        this.tryThen_(x, then);\n        return;\n      }\n    } catch (e) {\n      state = CancellablePromise.State_.REJECTED;\n      x = e;\n    }\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  this.scheduleCallbacks_();\n\n  if (state === CancellablePromise.State_.REJECTED &&\n    !(x instanceof CancellablePromise.CancellationError)) {\n    CancellablePromise.addUnhandledRejection_(this, x);\n  }\n};\n\n\n/**\n * Attempts to call the {@code then} method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the {@code then} method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a {@code then} method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The {@code then} method of the Thenable object.\n * @private\n */\nCancellablePromise.prototype.tryThen_ = function(thenable, then) {\n  this.state_ = CancellablePromise.State_.BLOCKED;\n  var promise = this;\n  var called = false;\n\n  var resolve = function(value) {\n    if (!called) {\n      called = true;\n      promise.unblockAndFulfill_(value);\n    }\n  };\n\n  var reject = function(reason) {\n    if (!called) {\n      called = true;\n      promise.unblockAndReject_(reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n\n/**\n * Executes the pending callbacks of a resolved Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If {@code startExecution_} is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\nCancellablePromise.prototype.scheduleCallbacks_ = function() {\n  if (!this.executing_) {\n    this.executing_ = true;\n    async.run(this.executeCallbacks_, this);\n  }\n};\n\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\nCancellablePromise.prototype.executeCallbacks_ = function() {\n  while (this.callbackEntries_ && this.callbackEntries_.length) {\n    var entries = this.callbackEntries_;\n    this.callbackEntries_ = [];\n\n    for (var i = 0; i < entries.length; i++) {\n      this.executeCallback_(entries[i], this.state_, this.result_);\n    }\n  }\n  this.executing_ = false;\n};\n\n\n/**\n * Executes a pending callback for this Promise. Invokes an {@code onFulfilled}\n * or {@code onRejected} callback based on the resolved state of the Promise.\n *\n * @param {!CancellablePromise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {CancellablePromise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The resolved result of the Promise.\n * @private\n */\nCancellablePromise.prototype.executeCallback_ = function(\ncallbackEntry, state, result) {\n  if (state === CancellablePromise.State_.FULFILLED) {\n    callbackEntry.onFulfilled(result);\n  } else {\n    this.removeUnhandledRejection_();\n    callbackEntry.onRejected(result);\n  }\n};\n\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\nCancellablePromise.prototype.removeUnhandledRejection_ = function() {\n  var p;\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n\n/**\n * Marks this rejected Promise as unhandled. If no {@code onRejected} callback\n * is called for this Promise before the {@code UNHANDLED_REJECTION_DELAY}\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!CancellablePromise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\nCancellablePromise.addUnhandledRejection_ = function(promise, reason) {\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = setTimeout(function() {\n      CancellablePromise.handleRejection_.call(null, reason);\n    }, CancellablePromise.UNHANDLED_REJECTION_DELAY);\n\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    promise.hadUnhandledRejection_ = true;\n    async.run(function() {\n      if (promise.hadUnhandledRejection_) {\n        CancellablePromise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no {@code onRejected} callbacks registered yet.\n * @type {function(*)}\n * @private\n */\nCancellablePromise.handleRejection_ = async.throwException;\n\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * {@code onRejected} callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a {@code window.onerror} handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to {@code async.throwException}.\n */\nCancellablePromise.setUnhandledRejectionHandler = function(handler) {\n  CancellablePromise.handleRejection_ = handler;\n};\n\n\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {Error}\n * @final\n */\nCancellablePromise.CancellationError = class extends Error {\n  constructor(opt_message) {\n     super(opt_message);\n\n     if (opt_message) {\n       this.message = opt_message;\n     }\n   }\n};\n\n/** @override */\nCancellablePromise.CancellationError.prototype.name = 'cancel';\n\nif (typeof window.Promise === 'undefined') {\n  window.Promise = CancellablePromise;\n}\n\nexport {CancellablePromise, async};\n","import core from 'bower:metal/src/core';\nimport Transport from './Transport';\nimport Util from './Util';\nimport ClientResponse from './ClientResponse';\nimport {CancellablePromise as Promise} from 'bower:metal-promise/src/promise/Promise';\n\n/**\n * Provides a convenient interface for data transport.\n * @interface\n */\nclass AjaxTransport extends Transport {\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  send(clientRequest) {\n    var self = this;\n\n    var deferred = this.request(\n      clientRequest.url(), clientRequest.method(), clientRequest.body(),\n      clientRequest.headers(), clientRequest.queries(), null, false);\n\n    return deferred.then(function(response) {\n      var clientResponse = new ClientResponse(clientRequest);\n      clientResponse.body(response.responseText);\n      clientResponse.statusCode(response.status);\n      clientResponse.headers(Util.parseResponseHeaders(response.getAllResponseHeaders()));\n      return clientResponse;\n    });\n  }\n\n  /**\n   * Requests the url using XMLHttpRequest.\n   * @param {!string} url\n   * @param {!string} method\n   * @param {?string} body\n   * @param {array.<object<string, string>>=} opt_headers\n   * @param {array.<object<string, string>>=} opt_queries\n   * @param {number=} opt_timeout\n   * @param {boolean=} opt_sync\n   * @return {Promise} Deferred ajax request.\n   * @protected\n   */\n  request(url, method, body, opt_headers, opt_queries, opt_timeout, opt_sync) {\n    var request = new XMLHttpRequest();\n\n    var promise = new Promise(function(resolve, reject) {\n      request.onload = function() {\n        if (request.status === 200 || request.status === 304) {\n          resolve(request);\n          return;\n        }\n        request.onerror();\n      };\n      request.onerror = function() {\n        var error = new Error('Request error');\n        error.request = request;\n        reject(error);\n      };\n    }).thenCatch(function(reason) {\n      throw reason;\n    }).thenAlways(function() {\n      clearTimeout(timeout);\n    });\n\n    if (opt_queries) {\n      var querystring = '';\n      opt_queries.forEach(function(query) {\n        querystring += query.name + '=' + encodeURIComponent(query.value) + '&';\n      });\n      querystring = querystring.slice(0, -1);\n      if (querystring) {\n        url += (url.indexOf('?') > -1) ? '&' : '?';\n        url += querystring;\n      }\n    }\n\n    request.open(method, url, !opt_sync);\n\n    if (opt_headers) {\n      var headers = {};\n      opt_headers.forEach(function(header) {\n        headers[header.name] = (headers[header.name] ? headers[header.name] + ',' : '') + header.value;\n        request.setRequestHeader(header.name, headers[header.name]);\n      });\n    }\n\n    request.send(core.isDef(body) ? body : null);\n\n    if (core.isDefAndNotNull(opt_timeout)) {\n      var timeout = setTimeout(function() {\n        promise.cancel('Request timeout');\n      }, opt_timeout);\n    }\n\n    return promise;\n  }\n\n}\n\nexport default AjaxTransport;\n","import core from 'bower:metal/src/core';\nimport ClientMessage from './ClientMessage';\n\n/**\n */\nclass ClientRequest extends ClientMessage {\n\n  constructor() {\n    super();\n    this.queries_ = [];\n  }\n\n  /**\n   * Fluent getter and setter for request method.\n   * @param {string} opt_method Request method to be set.\n   * @return {string} Returns request method.\n   * @chainable Chainable when used for setter.\n   */\n  method(opt_method) {\n    if (core.isDef(opt_method)) {\n      this.method_ = opt_method;\n      return this;\n    }\n    return this.method_ || ClientRequest.DEFAULT_METHOD;\n  }\n\n  /**\n   * Adds a query. If the query with the same name already exists, it will not\n   * be overwritten, but new value will be stored. The order is preserved.\n   * @param {string} name\n   * @param {string} value\n   * @chainable\n   */\n  query(name, value) {\n    if (arguments.length !== 2) {\n      throw new Error('Invalid arguments');\n    }\n\n    this.queries_.push({\n      name: name,\n      value: value\n    });\n    return this;\n  }\n\n  /**\n   * Fluent getter and setter for request query string.\n   * @param {array.<object.<string, string>>} opt_queries Request query string\n   *     list to be set.\n   * @return {array.<object.<string, string>>} Returns request query string\n   *     list.\n   * @chainable Chainable when used for setter.\n   */\n  queries(opt_queries) {\n    if (core.isDef(opt_queries)) {\n      this.queries_ = opt_queries;\n      return this;\n    }\n    return this.queries_;\n  }\n\n  /**\n   * Fluent getter and setter for request url.\n   * @param {string} opt_url Request url to be set.\n   * @return {string} Returns request url.\n   * @chainable Chainable when used for setter.\n   * TODO: Renames on api.java as well.\n   */\n  url(opt_url) {\n    if (core.isDef(opt_url)) {\n      this.url_ = opt_url;\n      return this;\n    }\n    return this.url_;\n  }\n\n}\n\nClientRequest.DEFAULT_METHOD = 'GET';\n\nexport default ClientRequest;\n","import AjaxTransport from './AjaxTransport';\n\n/**\n * Provides a factory for data transport.\n */\nclass TransportFactory {\n\n  constructor() {\n    this.transports = {};\n    this.transports[TransportFactory.DEFAULT_TRANSPORT_NAME] = AjaxTransport;\n  }\n\n  /**\n   * Returns {@code TransportFactory} instance.\n   */\n  static instance() {\n    if (!TransportFactory.instance_) {\n      TransportFactory.instance_ = new TransportFactory();\n    }\n    return TransportFactory.instance_;\n  }\n\n  get(implementationName) {\n    var transportClass = this.transports[implementationName];\n\n    if (transportClass == null) {\n      throw new Error('Invalid transport name: ' + implementationName);\n    }\n\n    try {\n      return new (transportClass)();\n    }\n    catch (err) {\n      throw new Error('Can\\'t create transport', err);\n    }\n  }\n\n  /**\n   * Returns default transport.\n   */\n  getDefault() {\n    return this.get(TransportFactory.DEFAULT_TRANSPORT_NAME);\n  }\n\n}\n\nTransportFactory.DEFAULT_TRANSPORT_NAME = 'default';\n\nexport default TransportFactory;\n","import TransportFactory from './TransportFactory';\nimport ClientRequest from './ClientRequest';\nimport Util from './Util';\n\n/**\n * Base client contains code that is same for all transports.\n * @interface\n */\nclass LaunchpadClient {\n\n  constructor() {\n    if (arguments.length === 0) {\n      throw new Error('Invalid arguments, try `new LaunchpadClient(baseUrl, url)`');\n    }\n\n    this.url_ = Util.joinPaths(arguments[0] || '', arguments[1] || '');\n    this.headers_ = [];\n    this.queries_ = [];\n\n    this.header('Content-Type', 'application/json');\n  }\n\n  /**\n   * Static factory for creating launchpad client.\n   */\n  static url(url) {\n    return new LaunchpadClient(url).use(this.customTransport_);\n  }\n\n  /**\n   * Specifies {@link Transport} implementation.\n   */\n  use(transport) {\n    this.customTransport_ = transport;\n    return this;\n  }\n\n  /**\n   * Creates new socket.io instance. The parameters passed to socket.io\n   * constructor will be provided:\n   *\n   *   LaunchpadClient.url('http://domain:8080/path').connect({ foo: true });\n   *     -> io('domain:8080', { path: '/path', foo: true });\n   *\n   * @param {object} opt_options\n   */\n  connect(opt_options) {\n    if (typeof io === 'undefined') {\n      throw new Error('Socket.io client not loaded');\n    }\n\n    var url = Util.parseUrl(this.url());\n    opt_options = opt_options || {};\n    opt_options.path = url[1];\n\n    return io(url[0], opt_options);\n  }\n\n  /**\n   * Creates new {@link LaunchpadBaseClient}.\n   */\n  path(path) {\n    return new LaunchpadClient(this.url(), path).use(this.customTransport_);\n  }\n\n  /**\n   * Sends message with DELETE http verb.\n   * @return {Promise}\n   */\n  delete() {\n    return this.sendAsync('DELETE');\n  }\n\n  /**\n   * Sends message with GET http verb.\n   * @return {Promise}\n   */\n  get() {\n    return this.sendAsync('GET');\n  }\n\n  /**\n   * Sends message with PATCH http verb.\n   * @param {string} opt_body\n   * @return {Promise}\n   */\n  patch(opt_body) {\n    return this.sendAsync('PATCH', opt_body);\n  }\n\n  /**\n   * Sends message with POST http verb.\n   * @param {string} opt_body\n   * @return {Promise}\n   */\n  post(opt_body) {\n    return this.sendAsync('POST', opt_body);\n  }\n\n  /**\n   * Sends message with PUT http verb.\n   * @param {string} opt_body\n   * @return {Promise}\n   */\n  put(opt_body) {\n    return this.sendAsync('PUT', opt_body);\n  }\n\n  /**\n   * Adds a header. If the header with the same name already exists, it will\n   * not be overwritten, but new value will be stored. The order is preserved.\n   */\n  header(name, value) {\n    if (arguments.length !== 2) {\n      throw new Error('Invalid arguments');\n    }\n\n    this.headers_.push({\n      name: name,\n      value: value\n    });\n    return this;\n  }\n\n  /**\n   * Gets the headers.\n   * @return {array.<object.<string, string>>}\n   */\n  headers() {\n    return this.headers_;\n  }\n\n  /**\n   * Adds a query. If the query with the same name already exists, it will not\n   * be overwritten, but new value will be stored. The order is preserved.\n   */\n  query(name, value) {\n    if (arguments.length !== 2) {\n      throw new Error('Invalid arguments');\n    }\n\n    this.queries_.push({\n      name: name,\n      value: value\n    });\n    return this;\n  }\n\n  /**\n   * Gets the query strings.\n   * @return {array.<object.<string, string>>}\n   */\n  queries() {\n    return this.queries_;\n  }\n\n  /**\n   * Returns the URL.\n   * TODO: Renames on api.java as well.\n   */\n  url() {\n    return this.url_;\n  }\n\n  /**\n   * Uses transport to send request with given method name and body\n   * asynchronously.\n   * @param {string} method The HTTP method to be used when sending data.\n   * @param {string} body\n   * @return {Promise} Deferred request.\n   */\n  sendAsync(method, body) {\n    var transport = this.customTransport_ || TransportFactory.instance().getDefault();\n\n    var clientRequest = new ClientRequest();\n    clientRequest.body(body);\n    clientRequest.method(method);\n    clientRequest.headers(this.headers());\n    clientRequest.queries(this.queries());\n    clientRequest.url(this.url());\n\n    this.encode(clientRequest);\n\n    return transport.send(clientRequest).then(this.decode);\n  }\n\n  /**\n   * Encodes clientRequest body.\n   * @param {ClientRequest} clientRequest\n   * @return {ClientRequest}\n   */\n  encode(clientRequest) {\n    if (LaunchpadClient.TEMP_isContentTypeJson(clientRequest)) {\n      clientRequest.body(JSON.stringify(clientRequest.body()));\n    }\n    return clientRequest;\n  }\n\n  /**\n   * Decodes clientResponse body.\n   * @param {ClientResponse} clientResponse\n   * @return {ClientResponse}\n   */\n  decode(clientResponse) {\n    if (LaunchpadClient.TEMP_isContentTypeJson(clientResponse)) {\n      try {\n        clientResponse.body(JSON.parse(clientResponse.body()));\n      } catch(err) {}\n    }\n    return clientResponse;\n  }\n\n}\n\nLaunchpadClient.TEMP_isContentTypeJson = function(clientMessage) {\n  var items = clientMessage.headers();\n  for (var i = items.length - 1; i >= 0 ; i--) {\n    if ('content-type' === items[i].name.toLowerCase()) {\n      return items[i].value.toLowerCase().indexOf('application/json') === 0;\n    }\n  }\n  return false;\n};\n\nif (typeof window !== undefined) {\n  window.LaunchpadClient = LaunchpadClient;\n}\n\nexport default LaunchpadClient;\n"],"sourceRoot":"/source/"}