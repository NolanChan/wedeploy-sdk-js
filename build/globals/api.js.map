{"version":3,"sources":["Embodied.js","core.js","array.js","async.js","Disposable.js","object.js","string.js","metal.js","Range.js","Aggregation.js","FilterBody.js","Geo.js","Filter.js","Query.js","Base64.js","MultiMap.js","TreeNode.js","structs.js","ClientMessage.js","ClientRequest.js","ClientResponse.js","Transport.js","parseFromAnchor.js","parse.js","Uri.js","Promise.js","Ajax.js","AjaxTransport.js","TransportFactory.js","globals.js","assertions.js","Auth.js","AuthProvider.js","FacebookAuthProvider.js","GithubAuthProvider.js","GoogleAuthProvider.js","StorageMechanism.js","Storage.js","LocalStorageMechanism.js","storage.js","AuthApiHelper.js","DataApiHelper.js","WeDeploy.js","browser.js"],"names":["Embodied","body_","JSON","stringify","body","obj","core","Error","constructor","propertyName","propertyValues","__proto__","isPrototypeOf","Function","push","fn","name","str","toString","substring","indexOf","opt_object","opt_noInheritance","id","UID_PROPERTY","hasOwnProperty","uniqueIdCounter_","opt_returnValue","val","undefined","isDef","isNull","nodeType","window","type","then","String","opt_mergeFn","mergedName","merged","collectSuperClassesProperty","Math","random","array","arr1","arr2","length","i","arr","opt_output","output","Array","isArray","flatten","rv","removeAt","prototype","splice","call","start","opt_end","sliced","end","async","throwException","exception","nextTick","run","callback","opt_context","workQueueScheduled_","processWorkQueue","workQueue_","WorkItem_","workItems","workItem","scope","e","cb","bind","wrapCallback_","setImmediate","setImmediate_","getSetImmediateEmulator_","Channel","MessageChannel","postMessage","addEventListener","iframe","document","createElement","style","display","src","documentElement","appendChild","win","contentWindow","doc","open","write","close","message","origin","location","protocol","host","onmessage","data","port1","port2","channel","head","tail","next","script","onreadystatechange","parentNode","removeChild","setTimeout","Disposable","disposed_","disposeInternal","object","target","key","source","arguments","opt_obj","parts","split","reduce","part","mappedObj","keys","Object","obj1","obj2","keys1","keys2","string","replace","x","floor","abs","Date","now","hash","len","charCodeAt","value","Range","from","opt_to","isDefAndNotNull","to","Aggregation","field","operator","opt_value","field_","operator_","value_","ranges","DistanceAggregation","interval","RangeAggregation","toBody","map","range","rangeOrFrom","unit","FilterBody","operatorOrValue","createBody_","opt_filter","addArrayOperator_","filter","filters","add","Geo","upperLeft","lowerRight","BoundingBox","center","radius","Circle","points","Line","lat","lon","Point","Polygon","coordinates","point","addCoordinates_","Filter","fieldOrFilter","opt_operatorOrValue","toFilter","addMany","getObject","values","slice","boxOrUpperLeft","opt_lowerRight","polygon","getPoints","locationOrCircle","opt_rangeOrDistance","getCenter","getRadius","distanceInternal_","min","max","fieldOrQuery","opt_queryOrFuzziness","opt_fuzziness","fuzzyInternal_","arg2IsString","isString","query","fuzziness","ALL","opt_query","rangeOrMin","opt_max","shapes","shape","geometries","Query","aggregationOrField","opt_operator","aggregation","getField","getOperator","getValue","offset","highlight","limit","filterOrTextOrField","opt_textOrOperator","match","search","opt_direction","sort","sortEntry","aggregate","Base64","btoa","Buffer","create","MultiMap","toLowerCase","size","names","set","TreeNode","parent_","children_","child","assertChildHasNoParent","setParent","node","current","getParent","ancestors","index","getChildren","EMPTY_ARRAY","depth","root","getChildCount","remove","parent","opt_preorderFn","opt_postorderFn","forEach","traverse","ClientMessage","headers_","opt_body","opt_headers","ClientRequest","params_","withCredentials_","opt_withCredentials","opt_method","method_","DEFAULT_METHOD","opt_params","opt_url","url_","ClientResponse","clientRequest","clientRequest_","opt_statusCode","statusCode_","opt_statusText","statusText_","statusCode","Transport","parseFromAnchor","opt_uri","link","href","hostname","password","pathname","port","username","parse","isFunction","URL","parseFn_","Uri","url","maybeAddProtocolAndHostname_","multimap","getAll","addParameterValue","ensureQueryInitialized_","param","urlDecode","getHostname","getPort","HOSTNAME_PLACEHOLDER","getHost","getProtocol","get","querystring","getParameterNames","getParameterValues","encodeURIComponent","contains","setParameterValue","RANDOM_PARAM","getRandomString","DEFAULT_PROTOCOL","charAt","removeParameter","getPathname","getSearch","getHash","parsed","substr","normalizeObject","parseFn","basePath","paths","path","concat","join","decodeURIComponent","Thenable","IMPLEMENTED_BY_PROP","addImplementation","ctor","$goog_Thenable","isImplementedBy","partial","args","newArgs","apply","CancellablePromise","resolver","state_","State_","PENDING","result_","callbackEntries_","executing_","UNHANDLED_REJECTION_DELAY","unhandledRejectionId_","hadUnhandledRejection_","self","resolve_","FULFILLED","reason","REJECTED","BLOCKED","CallbackEntry_","resolve","reject","opt_reason","race","promises","promise","all","toFulfill","onFulfill","onReject","firstFulfilled","toReject","reasons","opt_onFulfilled","opt_onRejected","addChildPromise_","thenAlways","onResolved","err","handleRejection_","addCallbackEntry_","onRejected","onFulfilled","thenCatch","catch","cancel","opt_message","CancellationError","IS_CANCELLATION_ERROR","cancelInternal_","cancelChild_","childPromise","childCount","childIndex","entry","callbackEntry","executeCallback_","scheduleCallbacks_","result","unblockAndFulfill_","unblockAndReject_","state","TypeError","isObject","tryThen_","addUnhandledRejection_","thenable","called","executeCallbacks_","entries","removeUnhandledRejection_","p","clearTimeout","setUnhandledRejectionHandler","handler","Promise","Ajax","allHeaders","headers","pairs","method","opt_timeout","opt_sync","request","XMLHttpRequest","onload","aborted","onerror","error","abort","timeout","addParametersFromMultiMap","withCredentials","setRequestHeader","send","AjaxTransport","deferred","params","response","clientResponse","responseText","status","statusText","parseResponseHeaders","getAllResponseHeaders","header","TransportFactory","transports","DEFAULT_TRANSPORT_NAME","implementationName","TransportClass","instance_","globals","assertBrowserEnvironment","assertDefAndNotNull","errorMessage","assertNotNull","assertFunction","assertObject","assertResponseSucceeded","succeeded","assertUserSignedIn","user","assertUriWithNoPath","uri","Auth","tokenOrEmail","opt_password","token","email","createdAt","photoUrl","wedeployClient","authUrl_","auth","patch","delete","tokenOrUsername","AuthProvider","provider","providerScope","redirectUri","opt_authUrl","setPathname","hasProvider","getProvider","hasProviderScope","getProviderScope","hasRedirectUri","getRedirectUri","hasScope","getScope","assertStringIfDefAndNotNull","FacebookAuthProvider","PROVIDER","GithubAuthProvider","GoogleAuthProvider","StorageMechanism","Storage","mechanism","assertMechanismDefAndNotNull","assertMechanismIntanceOf","clear","json","ErrorCode","INVALID_VALUE","LocalStorageMechanism","localStorage","storage","getItem","removeItem","setItem","AuthApiHelper","currentUser","onSignInCallback","onSignOutCallback","processSignIn_","Facebook","Google","Github","post","makeUserAuthFromData","fragment","userId","setWedeployClient","setCreatedAt","setEmail","setId","setName","setPhotoUrl","setToken","redirectAccessToken","getRedirectAccessToken_","removeUrlFragmentCompletely_","loadCurrentUser","maybeCallOnSignInCallback_","history","pushState","title","access_token","assertSupportedProvider","setRedirectUri","getHrefWithoutFragment_","makeAuthorizationUrl","maybeCallOnSignOutCallback_","unloadCurrentUser_","DataApiHelper","getOrCreateFilter_","and","or","where","none","similar","lt","lte","any","boundingBox","distance","getOrCreateQuery_","collection","dataUrl_","put","addFiltersToQuery_","query_","onSearch_","opt_options","watch","filter_","toSearch_","io","WeDeploy","auth_","joinPaths","authOrTokenOrEmail","formData_","encode","isContentTypeJson","sendAsync","isElement","FormData","maybeWrapWithQuery_","convertBodyToParams_","removeBody","encodeParams_","resolveAuthentication_","append","embodied","use","customTransport_","hasToken","credentials","encodeString","transport","instance","getDefault","createClientRequest_","decode","forceNew","opt_dataUrl","data_","socket","clientMessage","contentType"],"mappings":"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","file":"api.js","sourcesContent":["'use strict';\n\n/**\n * Class responsible for storing an object that will be printed as JSON\n * when the `toString` method is called.\n */\nclass Embodied {\n\t/**\n\t * Constructs a Embodied instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.body_ = {};\n\t}\n\n\t/**\n\t * Gets the json object that represents this instance.\n\t * @return {!Object}\n\t */\n\tbody() {\n\t\treturn this.body_;\n\t}\n\n\t/**\n\t * If the given object is an instance of Embodied, this will\n\t * return its body content. Otherwise this will return the\n\t * original object.\n\t * @param {*} obj\n\t * @return {*}\n\t * @static\n\t */\n\tstatic toBody(obj) {\n\t\treturn (obj instanceof Embodied) ? obj.body() : obj;\n\t}\n\n\t/**\n\t * Gets the json string that represents this instance.\n\t * @return {string}\n\t */\n\ttoString() {\n\t\treturn JSON.stringify(this.body());\n\t}\n}\n\nexport default Embodied;\n","'use strict';\n\n/**\n * A collection of core utility functions.\n * @const\n */\nclass core {\n\t/**\n\t * When defining a class Foo with an abstract method bar(), you can do:\n\t * Foo.prototype.bar = core.abstractMethod\n\t *\n\t * Now if a subclass of Foo fails to override bar(), an error will be thrown\n\t * when bar() is invoked.\n\t *\n\t * @type {!Function}\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic abstractMethod() {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Loops constructor super classes collecting its properties values. If\n\t * property is not available on the super class `undefined` will be\n\t * collected as value for the class hierarchy position.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @return {Array.<*>} Array of collected values.\n\t * TODO(*): Rethink superclass loop.\n\t */\n\tstatic collectSuperClassesProperty(constructor, propertyName) {\n\t\tvar propertyValues = [constructor[propertyName]];\n\t\twhile (constructor.__proto__ && !constructor.__proto__.isPrototypeOf(Function)) {\n\t\t\tconstructor = constructor.__proto__;\n\t\t\tpropertyValues.push(constructor[propertyName]);\n\t\t}\n\t\treturn propertyValues;\n\t}\n\n\t/**\n\t * Gets the name of the given function. If the current browser doesn't\n\t * support the `name` property, this will calculate it from the function's\n\t * content string.\n\t * @param {!function()} fn\n\t * @return {string}\n\t */\n\tstatic getFunctionName(fn) {\n\t\tif (!fn.name) {\n\t\t\tvar str = fn.toString();\n\t\t\tfn.name = str.substring(9, str.indexOf('('));\n\t\t}\n\t\treturn fn.name;\n\t}\n\n\t/**\n\t * Gets an unique id. If `opt_object` argument is passed, the object is\n\t * mutated with an unique id. Consecutive calls with the same object\n\t * reference won't mutate the object again, instead the current object uid\n\t * returns. See {@link core.UID_PROPERTY}.\n\t * @param {Object=} opt_object Optional object to be mutated with the uid. If\n\t *     not specified this method only returns the uid.\n\t * @param {boolean=} opt_noInheritance Optional flag indicating if this\n\t *     object's uid property can be inherited from parents or not.\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic getUid(opt_object, opt_noInheritance) {\n\t\tif (opt_object) {\n\t\t\tvar id = opt_object[core.UID_PROPERTY];\n\t\t\tif (opt_noInheritance && !opt_object.hasOwnProperty(core.UID_PROPERTY)) {\n\t\t\t\tid = null;\n\t\t\t}\n\t\t\treturn id || (opt_object[core.UID_PROPERTY] = core.uniqueIdCounter_++);\n\t\t}\n\t\treturn core.uniqueIdCounter_++;\n\t}\n\n\t/**\n\t * The identity function. Returns its first argument.\n\t * @param {*=} opt_returnValue The single value that will be returned.\n\t * @return {?} The first argument.\n\t */\n\tstatic identityFunction(opt_returnValue) {\n\t\treturn opt_returnValue;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a boolean.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is boolean.\n\t */\n\tstatic isBoolean(val) {\n\t\treturn typeof val === 'boolean';\n\t}\n\n\t/**\n\t * Returns true if the specified value is not undefined.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is defined.\n\t */\n\tstatic isDef(val) {\n\t\treturn val !== undefined;\n\t}\n\n\t/**\n\t * Returns true if value is not undefined or null.\n\t * @param {*} val\n\t * @return {boolean}\n\t */\n\tstatic isDefAndNotNull(val) {\n\t\treturn core.isDef(val) && !core.isNull(val);\n\t}\n\n\t/**\n\t * Returns true if value is a document.\n\t * @param {*} val\n\t * @return {boolean}\n\t */\n\tstatic isDocument(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 9;\n\t}\n\n\t/**\n\t * Returns true if value is a dom element.\n\t * @param {*} val\n\t * @return {boolean}\n\t */\n\tstatic isElement(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 1;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a function.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a function.\n\t */\n\tstatic isFunction(val) {\n\t\treturn typeof val === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is null.\n\t * @param {*} val\n\t * @return {boolean}\n\t */\n\tstatic isNull(val) {\n\t\treturn val === null;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a number.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a number.\n\t */\n\tstatic isNumber(val) {\n\t\treturn typeof val === 'number';\n\t}\n\n\t/**\n\t * Returns true if value is a window.\n\t * @param {*} val\n\t * @return {boolean}\n\t */\n\tstatic isWindow(val) {\n\t\treturn val !== null && val === val.window;\n\t}\n\n\t/**\n\t * Returns true if the specified value is an object. This includes arrays\n\t * and functions.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is an object.\n\t */\n\tstatic isObject(val) {\n\t\tvar type = typeof val;\n\t\treturn type === 'object' && val !== null || type === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is a Promise.\n\t * @param {*} val\n\t * @return {boolean}\n\t */\n\tstatic isPromise(val) {\n\t\treturn val && typeof val === 'object' && typeof val.then === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is a string.\n\t * @param {*} val\n\t * @return {boolean}\n\t */\n\tstatic isString(val) {\n\t\treturn typeof val === 'string' || val instanceof String;\n\t}\n\n\t/**\n\t * Merges the values of a static property a class with the values of that\n\t * property for all its super classes, and stores it as a new static\n\t * property of that class. If the static property already existed, it won't\n\t * be recalculated.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @param {function(*, *):*=} opt_mergeFn Function that receives an array filled\n\t *   with the values of the property for the current class and all its super classes.\n\t *   Should return the merged value to be stored on the current class.\n\t * @return {boolean} Returns true if merge happens, false otherwise.\n\t */\n\tstatic mergeSuperClassesProperty(constructor, propertyName, opt_mergeFn) {\n\t\tvar mergedName = propertyName + '_MERGED';\n\t\tif (constructor.hasOwnProperty(mergedName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar merged = core.collectSuperClassesProperty(constructor, propertyName);\n\t\tif (opt_mergeFn) {\n\t\t\tmerged = opt_mergeFn(merged);\n\t\t}\n\t\tconstructor[mergedName] = merged;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Null function used for default values of callbacks, etc.\n\t * @return {void} Nothing.\n\t */\n\tstatic nullFunction() {}\n}\n\n/**\n * Unique id property prefix.\n * @type {String}\n * @protected\n */\ncore.UID_PROPERTY = 'core_' + ((Math.random() * 1e9) >>> 0);\n\n/**\n * Counter for unique id.\n * @type {Number}\n * @private\n */\ncore.uniqueIdCounter_ = 1;\n\nexport default core;\n","'use strict';\n\nimport core from '../core';\n\nclass array {\n\t/**\n\t * Checks if the given arrays have the same content.\n\t * @param {!Array<*>} arr1\n\t * @param {!Array<*>} arr2\n\t * @return {boolean}\n\t */\n\tstatic equal(arr1, arr2) {\n\t\tif (arr1.length !== arr2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the first value in the given array that isn't undefined.\n\t * @param {!Array} arr\n\t * @return {*}\n\t */\n\tstatic firstDefinedValue(arr) {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (arr[i] !== undefined) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Transforms the input nested array to become flat.\n\t * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n\t * @param {Array.<*>} opt_output Optional output array.\n\t * @return {Array.<*>} Flat array.\n\t */\n\tstatic flatten(arr, opt_output) {\n\t\tvar output = opt_output || [];\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (Array.isArray(arr[i])) {\n\t\t\t\tarray.flatten(arr[i], output);\n\t\t\t} else {\n\t\t\t\toutput.push(arr[i]);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Removes the first occurrence of a particular value from an array.\n\t * @param {Array.<T>} arr Array from which to remove value.\n\t * @param {T} obj Object to remove.\n\t * @return {boolean} True if an element was removed.\n\t * @template T\n\t */\n\tstatic remove(arr, obj) {\n\t\tvar i = arr.indexOf(obj);\n\t\tvar rv;\n\t\tif ( (rv = i >= 0) ) {\n\t\t\tarray.removeAt(arr, i);\n\t\t}\n\t\treturn rv;\n\t}\n\n\t/**\n\t * Removes from an array the element at index i\n\t * @param {Array} arr Array or array like object from which to remove value.\n\t * @param {number} i The index to remove.\n\t * @return {boolean} True if an element was removed.\n\t */\n\tstatic removeAt(arr, i) {\n\t\treturn Array.prototype.splice.call(arr, i, 1).length === 1;\n\t}\n\n\t/**\n\t * Slices the given array, just like Array.prototype.slice, but this\n\t * is faster and working on all array-like objects (like arguments).\n\t * @param {!Object} arr Array-like object to slice.\n\t * @param {number} start The index that should start the slice.\n\t * @param {number=} opt_end The index where the slice should end, not\n\t *   included in the final array. If not given, all elements after the\n\t *   start index will be included.\n\t * @return {!Array}\n\t */\n\tstatic slice(arr, start, opt_end) {\n\t\tvar sliced = [];\n\t\tvar end = core.isDef(opt_end) ? opt_end : arr.length;\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tsliced.push(arr[i]);\n\t\t}\n\t\treturn sliced;\n\t}\n}\n\nexport default array;\n","/*!\n * Polyfill from Google's Closure Library.\n * Copyright 2013 The Closure Library Authors. All Rights Reserved.\n */\n\n'use strict';\n\nvar async = {};\n\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nasync.throwException = function(exception) {\n\t// Each throw needs to be in its own context.\n\tasync.nextTick(function() {\n\t\tthrow exception;\n\t});\n};\n\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\nasync.run = function(callback, opt_context) {\n\tif (!async.run.workQueueScheduled_) {\n\t\t// Nothing is currently scheduled, schedule it now.\n\t\tasync.nextTick(async.run.processWorkQueue);\n\t\tasync.run.workQueueScheduled_ = true;\n\t}\n\n\tasync.run.workQueue_.push(\n\t\tnew async.run.WorkItem_(callback, opt_context));\n};\n\n\n/** @private {boolean} */\nasync.run.workQueueScheduled_ = false;\n\n\n/** @private {!Array.<!async.run.WorkItem_>} */\nasync.run.workQueue_ = [];\n\n/**\n * Run any pending async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * async.nextTick.\n */\nasync.run.processWorkQueue = function() {\n\t// NOTE: additional work queue items may be pushed while processing.\n\twhile (async.run.workQueue_.length) {\n\t\t// Don't let the work queue grow indefinitely.\n\t\tvar workItems = async.run.workQueue_;\n\t\tasync.run.workQueue_ = [];\n\t\tfor (var i = 0; i < workItems.length; i++) {\n\t\t\tvar workItem = workItems[i];\n\t\t\ttry {\n\t\t\t\tworkItem.fn.call(workItem.scope);\n\t\t\t} catch (e) {\n\t\t\t\tasync.throwException(e);\n\t\t\t}\n\t\t}\n\t}\n\n\t// There are no more work items, reset the work queue.\n\tasync.run.workQueueScheduled_ = false;\n};\n\n\n/**\n * @constructor\n * @final\n * @struct\n * @private\n *\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\nasync.run.WorkItem_ = function(fn, scope) {\n\t/** @const */\n\tthis.fn = fn;\n\t/** @const */\n\tthis.scope = scope;\n};\n\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n * reasons.\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @template SCOPE\n */\nasync.nextTick = function(callback, opt_context) {\n\tvar cb = callback;\n\tif (opt_context) {\n\t\tcb = callback.bind(opt_context);\n\t}\n\tcb = async.nextTick.wrapCallback_(cb);\n\t// Introduced and currently only supported by IE10.\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof setImmediate === 'function') {\n\t\tsetImmediate(cb);\n\t\treturn;\n\t}\n\t// Look for and cache the custom fallback version of setImmediate.\n\tif (!async.nextTick.setImmediate_) {\n\t\tasync.nextTick.setImmediate_ = async.nextTick.getSetImmediateEmulator_();\n\t}\n\tasync.nextTick.setImmediate_(cb);\n};\n\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\nasync.nextTick.setImmediate_ = null;\n\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\nasync.nextTick.getSetImmediateEmulator_ = function() {\n\t// Create a private message channel and use it to postMessage empty messages\n\t// to ourselves.\n\tvar Channel;\n\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof MessageChannel === 'function') {\n\t\tChannel = MessageChannel;\n\t}\n\n\t// If MessageChannel is not available and we are in a browser, implement\n\t// an iframe based polyfill in browsers that have postMessage and\n\t// document.addEventListener. The latter excludes IE8 because it has a\n\t// synchronous postMessage implementation.\n\tif (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n\t\twindow.postMessage && window.addEventListener) {\n\t\t/** @constructor */\n\t\tChannel = function() {\n\t\t\t// Make an empty, invisible iframe.\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tiframe.style.display = 'none';\n\t\t\tiframe.src = '';\n\t\t\tdocument.documentElement.appendChild(iframe);\n\t\t\tvar win = iframe.contentWindow;\n\t\t\tvar doc = win.document;\n\t\t\tdoc.open();\n\t\t\tdoc.write('');\n\t\t\tdoc.close();\n\t\t\tvar message = 'callImmediate' + Math.random();\n\t\t\tvar origin = win.location.protocol + '//' + win.location.host;\n\t\t\tvar onmessage = function(e) {\n\t\t\t\t// Validate origin and message to make sure that this message was\n\t\t\t\t// intended for us.\n\t\t\t\tif (e.origin !== origin && e.data !== message) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.port1.onmessage();\n\t\t\t}.bind(this);\n\t\t\twin.addEventListener('message', onmessage, false);\n\t\t\tthis.port1 = {};\n\t\t\tthis.port2 = {\n\t\t\t\tpostMessage: function() {\n\t\t\t\t\twin.postMessage(message, origin);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\tif (typeof Channel !== 'undefined') {\n\t\tvar channel = new Channel();\n\t\t// Use a fifo linked list to call callbacks in the right order.\n\t\tvar head = {};\n\t\tvar tail = head;\n\t\tchannel.port1.onmessage = function() {\n\t\t\thead = head.next;\n\t\t\tvar cb = head.cb;\n\t\t\thead.cb = null;\n\t\t\tcb();\n\t\t};\n\t\treturn function(cb) {\n\t\t\ttail.next = {\n\t\t\t\tcb: cb\n\t\t\t};\n\t\t\ttail = tail.next;\n\t\t\tchannel.port2.postMessage(0);\n\t\t};\n\t}\n\t// Implementation for IE6-8: Script elements fire an asynchronous\n\t// onreadystatechange event when inserted into the DOM.\n\tif (typeof document !== 'undefined' && 'onreadystatechange' in\n\t\tdocument.createElement('script')) {\n\t\treturn function(cb) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.onreadystatechange = function() {\n\t\t\t\t// Clean up and call the callback.\n\t\t\t\tscript.onreadystatechange = null;\n\t\t\t\tscript.parentNode.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t\tcb();\n\t\t\t\tcb = null;\n\t\t\t};\n\t\t\tdocument.documentElement.appendChild(script);\n\t\t};\n\t}\n\t// Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n\t// or more.\n\treturn function(cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n};\n\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\nasync.nextTick.wrapCallback_ = function(opt_returnValue) {\n\treturn opt_returnValue;\n};\n\nexport default async;\n","'use strict';\n\n/**\n * Disposable utility. When inherited provides the `dispose` function to its\n * subclass, which is responsible for disposing of any object references\n * when an instance won't be used anymore. Subclasses should override\n * `disposeInternal` to implement any specific disposing logic.\n * @constructor\n */\nclass Disposable {\n\tconstructor() {\n\t\t/**\n\t\t * Flag indicating if this instance has already been disposed.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.disposed_ = false;\n\t}\n\n\t/**\n\t * Disposes of this instance's object references. Calls `disposeInternal`.\n\t */\n\tdispose() {\n\t\tif (!this.disposed_) {\n\t\t\tthis.disposeInternal();\n\t\t\tthis.disposed_ = true;\n\t\t}\n\t}\n\n\t/**\n\t * Subclasses should override this method to implement any specific\n\t * disposing logic (like clearing references and calling `dispose` on other\n\t * disposables).\n\t */\n\tdisposeInternal() {}\n\n\t/**\n\t * Checks if this instance has already been disposed.\n\t * @return {boolean}\n\t */\n\tisDisposed() {\n\t\treturn this.disposed_;\n\t}\n}\n\nexport default Disposable;\n","'use strict';\n\nclass object {\n\t/**\n\t * Copies all the members of a source object to a target object.\n\t * @param {Object} target Target object.\n\t * @param {...Object} var_args The objects from which values will be copied.\n\t * @return {Object} Returns the target object reference.\n\t */\n\tstatic mixin(target) {\n\t\tvar key, source;\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\tsource = arguments[i];\n\t\t\tfor (key in source) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Returns an object based on its fully qualified external name.\n\t * @param {string} name The fully qualified name.\n\t * @param {object=} opt_obj The object within which to look; default is\n\t *     <code>window</code>.\n\t * @return {?} The value (object or primitive) or, if not found, undefined.\n\t */\n\tstatic getObjectByName(name, opt_obj) {\n\t\tvar scope = opt_obj || window;\n\t\tvar parts = name.split('.');\n\t\treturn parts.reduce((part, key) => part[key], scope);\n\t}\n\n\t/**\n\t * Returns a new object with the same keys as the given one, but with\n\t * their values set to the return values of the specified function.\n\t * @param {!Object} obj\n\t * @param {!function(string, *)} fn\n\t * @return {!Object}\n\t */\n\tstatic map(obj, fn) {\n\t\tvar mappedObj = {};\n\t\tvar keys = Object.keys(obj);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tmappedObj[keys[i]] = fn(keys[i], obj[keys[i]]);\n\t\t}\n\t\treturn mappedObj;\n\t}\n\n\t/**\n\t * Checks if the two given objects are equal. This is done via a shallow\n\t * check, including only the keys directly contained by the 2 objects.\n\t * @return {boolean}\n\t */\n\tstatic shallowEqual(obj1, obj2) {\n\t\tif (obj1 === obj2) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar keys1 = Object.keys(obj1);\n\t\tvar keys2 = Object.keys(obj2);\n\t\tif (keys1.length !== keys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (var i = 0; i < keys1.length; i++) {\n\t\t\tif (obj1[keys1[i]] !== obj2[keys1[i]]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport default object;\n","'use strict';\n\nclass string {\n\t/**\n\t * Removes the breaking spaces from the left and right of the string and\n\t * collapses the sequences of breaking spaces in the middle into single spaces.\n\t * The original and the result strings render the same way in HTML.\n\t * @param {string} str A string in which to collapse spaces.\n\t * @return {string} Copy of the string with normalized breaking spaces.\n\t */\n\tstatic collapseBreakingSpaces(str) {\n\t\treturn str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n\t}\n\n\t/**\n\t* Escapes characters in the string that are not safe to use in a RegExp.\n\t* @param {*} str The string to escape. If not a string, it will be casted\n\t*     to one.\n\t* @return {string} A RegExp safe, escaped copy of {@code s}.\n\t*/\n\tstatic escapeRegex(str) {\n\t\treturn String(str)\n\t\t\t.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n\t\t\t.replace(/\\x08/g, '\\\\x08');\n\t}\n\n\t/**\n\t* Returns a string with at least 64-bits of randomness.\n\t* @return {string} A random string, e.g. sn1s7vb4gcic.\n\t*/\n\tstatic getRandomString() {\n\t\tvar x = 2147483648;\n\t\treturn Math.floor(Math.random() * x).toString(36) +\n\t\t\tMath.abs(Math.floor(Math.random() * x) ^ Date.now()).toString(36);\n\t}\n\n\t/**\n\t * Calculates the hashcode for a string. The hashcode value is computed by\n\t * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n\t * property of using 31 prime is that the multiplication can be replaced by\n\t * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n\t * Modern VMs do this sort of optimization automatically.\n\t * @param {String} val Target string.\n\t * @return {Number} Returns the string hashcode.\n\t */\n\tstatic hashCode(val) {\n\t\tvar hash = 0;\n\t\tfor (var i = 0, len = val.length; i < len; i++) {\n\t\t\thash = 31 * hash + val.charCodeAt(i);\n\t\t\thash %= 0x100000000;\n\t\t}\n\t\treturn hash;\n\t}\n\n\t/**\n\t * Replaces interval into the string with specified value, e.g.\n\t * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n\t * @param {string} str The input string.\n\t * @param {Number} start Start interval position to be replaced.\n\t * @param {Number} end End interval position to be replaced.\n\t * @param {string} value The value that replaces the specified interval.\n\t * @return {string}\n\t */\n\tstatic replaceInterval(str, start, end, value) {\n\t\treturn str.substring(0, start) + value + str.substring(end);\n\t}\n}\n\nexport default string;\n","'use strict';\n\nimport core from './core';\nimport array from './array/array';\nimport async from './async/async';\nimport Disposable from './disposable/Disposable';\nimport object from './object/object';\nimport string from './string/string';\n\nexport default core;\nexport { core, array, async, Disposable, object, string };\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for building range objects to be used by `Filter`.\n * @extends {Embodied}\n */\nclass Range extends Embodied {\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @param {*} opt_to\n\t * @constructor\n\t */\n\tconstructor(from, opt_to) {\n\t\tsuper();\n\t\tif (core.isDefAndNotNull(from)) {\n\t\t\tthis.body_.from = from;\n\t\t}\n\t\tif (core.isDefAndNotNull(opt_to)) {\n\t\t\tthis.body_.to = opt_to;\n\t\t}\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic from(from) {\n\t\treturn new Range(from);\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @param {*} to\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic range(from, to) {\n\t\treturn new Range(from, to);\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} to\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic to(to) {\n\t\treturn new Range(null, to);\n\t}\n}\n\nexport default Range;\n","'use strict';\n\nimport Embodied from './Embodied';\nimport Range from './Range';\n\n/**\n * Class that represents a search aggregation.\n */\nclass Aggregation {\n\t/**\n\t * Constructs an {@link Aggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {string} operator The aggregation operator.\n\t * @param {*=} opt_value The aggregation value.\n\t * @constructor\n\t */\n\tconstructor(field, operator, opt_value) {\n\t\tthis.field_ = field;\n\t\tthis.operator_ = operator;\n\t\tthis.value_ = opt_value;\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"avg\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic avg(field) {\n\t\treturn Aggregation.field(field, 'avg');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"count\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic count(field) {\n\t\treturn Aggregation.field(field, 'count');\n\t}\n\n\t/**\n\t * Creates an {@link DistanceAggregation} instance with the \"geoDistance\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {*} location The aggregation location.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @return {!DistanceAggregation}\n\t * @static\n\t */\n\tstatic distance(field, location, ...ranges) {\n\t\treturn new Aggregation.DistanceAggregation(field, location, ...ranges);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"extendedStats\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic extendedStats(field) {\n\t\treturn Aggregation.field(field, 'extendedStats');\n\t}\n\n\t/**\n\t * Gets this aggregation's field.\n\t * @return {string}\n\t */\n\tgetField() {\n\t\treturn this.field_;\n\t}\n\n\t/**\n\t * Gets this aggregation's operator.\n\t * @return {string}\n\t */\n\tgetOperator() {\n\t\treturn this.operator_;\n\t}\n\n\t/**\n\t * Gets this aggregation's value.\n\t * @return {*}\n\t */\n\tgetValue() {\n\t\treturn this.value_;\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"histogram\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {number} interval The histogram's interval.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic histogram(field, interval) {\n\t\treturn new Aggregation(field, 'histogram', interval);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"max\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic max(field) {\n\t\treturn Aggregation.field(field, 'max');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"min\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic min(field) {\n\t\treturn Aggregation.field(field, 'min');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"missing\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic missing(field) {\n\t\treturn Aggregation.field(field, 'missing');\n\t}\n\n\t/**\n\t * Creates a new {@link Aggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {string} operator The aggregation operator.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic field(field, operator) {\n\t\treturn new Aggregation(field, operator);\n\t}\n\n\t/**\n\t * Creates an {@link RangeAggregation} instance with the \"range\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @return {!RangeAggregation}\n\t * @static\n\t */\n\tstatic range(field, ...ranges) {\n\t\treturn new Aggregation.RangeAggregation(field, ...ranges);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"stats\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic stats(field) {\n\t\treturn Aggregation.field(field, 'stats');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"sum\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic sum(field) {\n\t\treturn Aggregation.field(field, 'sum');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"terms\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic terms(field) {\n\t\treturn Aggregation.field(field, 'terms');\n\t}\n}\n\n/**\n * Class that represents a distance aggregation.\n * @extends {Aggregation}\n */\nclass DistanceAggregation extends Aggregation {\n\t/**\n\t * Constructs an {@link DistanceAggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {*} location The aggregation location.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @constructor\n\t */\n\tconstructor(field, location, ...ranges) {\n\t\tsuper(field, 'geoDistance', {});\n\t\tthis.value_.location = Embodied.toBody(location);\n\t\tthis.value_.ranges = ranges.map(range => range.body());\n\t}\n\n\t/**\n\t * Adds a range to this aggregation.\n\t * @param {*} rangeOrFrom\n\t * @param {*=} opt_to\n\t * @chainnable\n\t */\n\trange(rangeOrFrom, opt_to) {\n\t\tvar range = rangeOrFrom;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrFrom, opt_to);\n\t\t}\n\t\tthis.value_.ranges.push(range.body());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this aggregation's unit.\n\t * @param {string} unit\n\t * @chainnable\n\t */\n\tunit(unit) {\n\t\tthis.value_.unit = unit;\n\t\treturn this;\n\t}\n}\nAggregation.DistanceAggregation = DistanceAggregation;\n\n/**\n * Class that represents a range aggregation.\n * @extends {Aggregation}\n */\nclass RangeAggregation extends Aggregation {\n\t/**\n\t * Constructs an {@link RangeAggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @constructor\n\t */\n\tconstructor(field, ...ranges) {\n\t\tsuper(field, 'range');\n\t\tthis.value_ = ranges.map(range => range.body());\n\t}\n\n\t/**\n\t * Adds a range to this aggregation.\n\t * @param {*} rangeOrFrom\n\t * @param {*=} opt_to\n\t * @chainnable\n\t */\n\trange(rangeOrFrom, opt_to) {\n\t\tvar range = rangeOrFrom;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrFrom, opt_to);\n\t\t}\n\t\tthis.value_.push(range.body());\n\t\treturn this;\n\t}\n}\nAggregation.RangeAggregation = RangeAggregation;\n\nexport default Aggregation;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for storing and handling the body contents\n * of a Filter instance.\n */\nclass FilterBody {\n\t/**\n\t * Constructs a {@link FilterBody} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should\n\t *   be the filter's operator (like \">=\"). Otherwise, this will be\n\t *   used as the filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @constructor\n\t */\n\tconstructor(field, operatorOrValue, opt_value) {\n\t\tvar obj = {\n\t\t\toperator: core.isDef(opt_value) ? operatorOrValue : '='\n\t\t};\n\n\t\tvar value = core.isDef(opt_value) ? opt_value : operatorOrValue;\n\n\t\tif (core.isDefAndNotNull(value)) {\n\t\t\tif (value instanceof Embodied) {\n\t\t\t\tvalue = value.body();\n\t\t\t}\n\t\t\tobj.value = value;\n\t\t}\n\n\t\tif (core.isDefAndNotNull(field)) {\n\t\t\tthis.createBody_(field, obj);\n\t\t} else {\n\t\t\tthis.createBody_('and', []);\n\t\t}\n\n\t}\n\n\t/**\n\t * Composes the current filter with the given operator.\n\t * @param {string} operator\n\t * @param {Filter=} opt_filter Another filter to compose this filter with,\n\t *   if the operator is not unary.\n\t */\n\tadd(operator, opt_filter) {\n\t\tif (opt_filter) {\n\t\t\tthis.addArrayOperator_(operator, opt_filter);\n\t\t} else {\n\t\t\tthis.createBody_(operator, this.body_);\n\t\t}\n\t}\n\n\t/**\n\t * Composes the current filter with an operator that stores its values in an array.\n\t * @param {string} operator\n\t * @param {!Filter} filter\n\t * @protected\n\t */\n\taddArrayOperator_(operator, filter) {\n\t\tif (!(this.body_[operator] instanceof Array)) {\n\t\t\tthis.createBody_(operator, [this.body_]);\n\t\t}\n\t\tthis.body_[operator].push(filter.body());\n\t}\n\n\t/**\n\t * Adds filters to be composed with this filter body using the given operator.\n\t * @param {string} operator\n\t * @param {...*} filters A variable amount of filters to be composed.\n\t */\n\taddMany(operator, ...filters) {\n\t\tfor (var i = 0; i < filters.length; i++) {\n\t\t\tthis.add(operator, filters[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new body object, setting the requestd key to the given value.\n\t * @param {string} key The key to set in the new body object\n\t * @param {*} value The value the requested key should have in the new body object.\n\t * @protected\n\t */\n\tcreateBody_(key, value) {\n\t\tthis.body_ = {};\n\t\tthis.body_[key] = value;\n\t}\n\n\t/**\n\t * Gets the json object that represents this filter's body.\n\t * @return {!Object}\n\t */\n\tgetObject() {\n\t\treturn this.body_;\n\t}\n}\n\nexport default FilterBody;\n","'use strict';\n\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for building different types of geometric\n * shapes.\n */\nclass Geo {\n\t/**\n\t * Creates a new {@link BoundingBox} instance.\n\t * @param {*} upperLeft The upper left point.\n\t * @param {*} lowerRight The lower right point.\n\t * @return {!BoundingBox}\n\t * @static\n\t */\n\tstatic boundingBox(upperLeft, lowerRight) {\n\t\treturn new Geo.BoundingBox(upperLeft, lowerRight);\n\t}\n\n\t/**\n\t * Creates a new {@link Circle} instance.\n\t * @param {*} center The circle's center coordinate.\n\t * @param {string} radius The circle's radius.\n\t * @return {!Circle}\n\t * @static\n\t */\n\tstatic circle(center, radius) {\n\t\treturn new Geo.Circle(center, radius);\n\t}\n\n\t/**\n\t * Creates a new {@link Line} instance.\n\t * @param {...*} points This line's points.\n\t * @return {!Line}\n\t * @static\n\t */\n\tstatic line(...points) {\n\t\treturn new Geo.Line(...points);\n\t}\n\n\t/**\n\t * Creates a new {@link Point} instance.\n\t * @param {number} lat The latitude coordinate\n\t * @param {number} lon The longitude coordinate\n\t * @return {!Point}\n\t * @static\n\t */\n\tstatic point(lat, lon) {\n\t\treturn new Geo.Point(lat, lon);\n\t}\n\n\t/**\n\t * Creates a new {@link Polygon} instance.\n\t * @param {...*} points This polygon's points.\n\t * @return {!Polygon}\n\t * @static\n\t */\n\tstatic polygon(...points) {\n\t\treturn new Geo.Polygon(...points);\n\t}\n}\n\n/**\n * Class that represents a point coordinate.\n * @extends {Embodied}\n */\nclass Point extends Embodied {\n\t/**\n\t * Constructs a {@link Point} instance.\n\t * @param {number} lat The latitude coordinate\n\t * @param {number} lon The longitude coordinate\n\t * @constructor\n\t */\n\tconstructor(lat, lon) {\n\t\tsuper();\n\t\tthis.body_ = [lat, lon];\n\t}\n}\nGeo.Point = Point;\n\n/**\n * Class that represents a line.\n * @extends {Embodied}\n */\nclass Line extends Embodied {\n\t/**\n\t * Constructs a {@link Line} instance.\n\t * @param {...*} points This line's points.\n\t * @constructor\n\t */\n\tconstructor(...points) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'linestring',\n\t\t\tcoordinates: points.map(point => Embodied.toBody(point))\n\t\t};\n\t}\n}\nGeo.Line = Line;\n\n/**\n * Class that represents a bounding box.\n * @extends {Embodied}\n */\nclass BoundingBox extends Embodied {\n\t/**\n\t * Constructs a {@link BoundingBox} instance.\n\t * @param {*} upperLeft The upper left point.\n\t * @param {*} lowerRight The lower right point.\n\t * @constructor\n\t */\n\tconstructor(upperLeft, lowerRight) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'envelope',\n\t\t\tcoordinates: [Embodied.toBody(upperLeft), Embodied.toBody(lowerRight)]\n\t\t};\n\t}\n\n\t/**\n\t * Gets this bounding box's points.\n\t * @return {!Array}\n\t */\n\tgetPoints() {\n\t\treturn this.body_.coordinates;\n\t}\n}\nGeo.BoundingBox = BoundingBox;\n\n/**\n * Class that represents a circle.\n * @extends {Embodied}\n */\nclass Circle extends Embodied {\n\t/**\n\t * Constructs a {@link Circle} instance.\n\t * @param {*} center The circle's center coordinate.\n\t * @param {string} radius The circle's radius.\n\t * @constructor\n\t */\n\tconstructor(center, radius) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'circle',\n\t\t\tcoordinates: Embodied.toBody(center),\n\t\t\tradius: radius\n\t\t};\n\t}\n\n\t/**\n\t * Gets this circle's center coordinate.\n\t * @return {*}\n\t */\n\tgetCenter() {\n\t\treturn this.body_.coordinates;\n\t}\n\n\t/**\n\t * Gets this circle's radius.\n\t * @return {string}\n\t */\n\tgetRadius() {\n\t\treturn this.body_.radius;\n\t}\n}\nGeo.Circle = Circle;\n\n/**\n * Class that represents a polygon.\n * @extends {Embodied}\n */\nclass Polygon extends Embodied {\n\t/**\n\t * Constructs a {@link Polygon} instance.\n\t * @param {...*} points This polygon's points.\n\t * @constructor\n\t */\n\tconstructor(...points) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'polygon',\n\t\t\tcoordinates: []\n\t\t};\n\t\tthis.addCoordinates_(...points);\n\t}\n\n\t/**\n\t * Adds the given points as coordinates for this polygon.\n\t * @param {...*} points\n\t * @protected\n\t */\n\taddCoordinates_(...points) {\n\t\tthis.body_.coordinates.push(points.map(point => Embodied.toBody(point)));\n\t}\n\n\t/**\n\t * Adds the given points as a hole inside this polygon.\n\t * @param  {...*} points\n\t * @chainnable\n\t */\n\thole(...points) {\n\t\tthis.addCoordinates_(...points);\n\t\treturn this;\n\t}\n}\nGeo.Polygon = Polygon;\n\nexport default Geo;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\nimport FilterBody from './FilterBody';\nimport Geo from './Geo';\nimport Range from './Range';\n\n/**\n * Class responsible for building filters.\n * @extends {Embodied}\n */\nclass Filter extends Embodied {\n\t/**\n\t * Constructs a {@link Filter} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should\n\t *   be the filter's operator (like \">=\"). Otherwise, this will be\n\t *   used as the filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @constructor\n\t */\n\tconstructor(field, operatorOrValue, opt_value) {\n\t\tsuper();\n\t\tthis.body_ = new FilterBody(field, operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the given operator.\n\t * @param {string} operator\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tadd(operator, fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tvar filter = fieldOrFilter ? Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value) : null;\n\t\tthis.body_.add(operator, filter);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds filters to be composed with this filter using the given operator.\n\t * @param {string} operator\n\t * @param {...*} filters A variable amount of filters to be composed.\n\t * @chainnable\n\t */\n\taddMany(operator, ...filters) {\n\t\tthis.body_.addMany(operator, ...filters);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"and\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tand(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn this.add('and', fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"any\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} values A variable amount of values to be used with\n\t *   the \"none\" operator. Can be passed either as a single array or as\n\t *   separate params.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic any(field) {\n\t\tvar values = Array.prototype.slice.call(arguments, 1);\n\t\tif (values.length === 1 && values[0] instanceof Array) {\n\t\t\tvalues = values[0];\n\t\t}\n\t\treturn new Filter(field, 'any', values);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gp\" operator.\n\t * This is a special use case of `Filter.polygon` for bounding\n\t * boxes.\n\t * @param {string} field The field's name.\n\t * @param {*} boxOrUpperLeft Either a `Geo.BoundingBox` instance, or\n\t *   a bounding box's upper left coordinate.\n\t * @param {*=} opt_lowerRight A bounding box's lower right coordinate.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic boundingBox(field, boxOrUpperLeft, opt_lowerRight) {\n\t\tif (boxOrUpperLeft instanceof Geo.BoundingBox) {\n\t\t\treturn Filter.polygon(field, ...boxOrUpperLeft.getPoints());\n\t\t} else {\n\t\t\treturn Filter.polygon(field, boxOrUpperLeft, opt_lowerRight);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the json object that represents this filter.\n\t * @return {!Object}\n\t */\n\tbody() {\n\t\treturn this.body_.getObject();\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gd\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} locationOrCircle Either a `Geo.Circle` instance or a coordinate.\n\t * @param {Range|string=} opt_rangeOrDistance Either a `Range` instance or\n\t *   the distance value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic distance(field, locationOrCircle, opt_rangeOrDistance) {\n\t\tvar location = locationOrCircle;\n\t\tvar range = opt_rangeOrDistance;\n\t\tif (locationOrCircle instanceof Geo.Circle) {\n\t\t\tlocation = locationOrCircle.getCenter();\n\t\t\trange = Range.to(locationOrCircle.getRadius());\n\t\t} else if (!(opt_rangeOrDistance instanceof Range)) {\n\t\t\trange = Range.to(opt_rangeOrDistance);\n\t\t}\n\t\treturn Filter.distanceInternal_(field, location, range);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gd\" operator. This\n\t * is just an internal helper used by `Filter.distance`.\n\t * @param {string} field The field's name.\n\t * @param {*} location A location coordinate.\n\t * @param {Range} range A `Range` instance.\n\t * @return {!Filter}\n\t * @protected\n\t * @static\n\t */\n\tstatic distanceInternal_(field, location, range) {\n\t\tvar value = {\n\t\t\tlocation: Embodied.toBody(location)\n\t\t};\n\t\trange = range.body();\n\t\tif (range.from) {\n\t\t\tvalue.min = range.from;\n\t\t}\n\t\tif (range.to) {\n\t\t\tvalue.max = range.to;\n\t\t}\n\t\treturn Filter.field(field, 'gd', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic equal(field, value) {\n\t\treturn new Filter(field, '=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"exists\" operator.\n\t * @param {string} field The field's name.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic exists(field) {\n\t\treturn Filter.field(field, 'exists', null);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"fuzzy\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string|number=} opt_queryOrFuzziness If this is a string, it should\n\t *   be the query, otherwise it should be the fuzziness value.\n\t * @param {number=} opt_fuzziness The fuzziness value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic fuzzy(fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness) {\n\t\treturn Filter.fuzzyInternal_('fuzzy', fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the given fuzzy operator. This\n\t * is an internal implementation used by the `Filter.fuzzy` method.\n\t * @param {string} operator The fuzzy operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string|number=} opt_queryOrFuzziness If this is a string, it should\n\t *   be the query, otherwise it should be the fuzziness value.\n\t * @param {number=} opt_fuzziness The fuzziness value.\n\t * @return {!Filter}\n\t * @protected\n\t * @static\n\t */\n\tstatic fuzzyInternal_(operator, fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness) {\n\t\tvar arg2IsString = core.isString(opt_queryOrFuzziness);\n\n\t\tvar value = {\n\t\t\tquery: arg2IsString ? opt_queryOrFuzziness : fieldOrQuery\n\t\t};\n\t\tvar fuzziness = arg2IsString ? opt_fuzziness : opt_queryOrFuzziness;\n\t\tif (fuzziness) {\n\t\t\tvalue.fuzziness = fuzziness;\n\t\t}\n\n\t\tvar field = arg2IsString ? fieldOrQuery : Filter.ALL;\n\t\treturn Filter.field(field, operator, value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \">\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic gt(field, value) {\n\t\treturn new Filter(field, '>', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \">=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic gte(field, value) {\n\t\treturn new Filter(field, '>=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"match\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic match(fieldOrQuery, opt_query) {\n\t\tvar field = core.isString(opt_query) ? fieldOrQuery : Filter.ALL;\n\t\tvar query = core.isString(opt_query) ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'match', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"missing\" operator.\n\t * @param {string} field The field's name.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic missing(field) {\n\t\treturn Filter.field(field, 'missing', null);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"phrase\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic phrase(fieldOrQuery, opt_query) {\n\t\tvar field = core.isString(opt_query) ? fieldOrQuery : Filter.ALL;\n\t\tvar query = core.isString(opt_query) ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'phrase', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gp\" operator.\n\t * @param {string} field The name of the field.\n\t * @param {...!Object} points Objects representing points in the polygon.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic polygon(field, ...points) {\n\t\tpoints = points.map(point => Embodied.toBody(point));\n\t\treturn Filter.field(field, 'gp', points);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"prefix\" operator.\n\t * @param {string} fieldOrQuery If no second argument is given, this should\n\t *   be the query string, in which case all fields will be matched. Otherwise,\n\t *   this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic prefix(fieldOrQuery, opt_query) {\n\t\tvar field = opt_query ? fieldOrQuery : Filter.ALL;\n\t\tvar query = opt_query ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'prefix', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"range\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} rangeOrMin Either a `Range` instance or a the range's min value.\n\t * @param {*=} opt_max The range's max value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic range(field, rangeOrMin, opt_max) {\n\t\tvar range = rangeOrMin;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrMin, opt_max);\n\t\t}\n\t\treturn Filter.field(field, 'range', range);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"~\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic regex(field, value) {\n\t\treturn new Filter(field, '~', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gs\" operator.\n\t * @param {string} field The field's name.\n\t * @param {...!Object} shapes Objects representing shapes.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic shape(field, ...shapes) {\n\t\tshapes = shapes.map(shape => Embodied.toBody(shape));\n\t\tvar value = {\n\t\t\ttype: 'geometrycollection',\n\t\t\tgeometries: shapes\n\t\t};\n\t\treturn Filter.field(field, 'gs', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"similar\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {?string} query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic similar(fieldOrQuery, query) {\n\t\tvar field = core.isString(query) ? fieldOrQuery : Filter.ALL;\n\t\tvar value = {\n\t\t\tquery: core.isString(query) ? query : fieldOrQuery\n\t\t};\n\t\treturn Filter.field(field, 'similar', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic lt(field, value) {\n\t\treturn new Filter(field, '<', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic lte(field, value) {\n\t\treturn new Filter(field, '<=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"none\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} value A variable amount of values to be used with\n\t * the \"none\" operator. Can be passed either as a single array or as\n\t * separate params.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic none(field) {\n\t\tvar values = Array.prototype.slice.call(arguments, 1);\n\t\tif (values.length === 1 && values[0] instanceof Array) {\n\t\t\tvalues = values[0];\n\t\t}\n\t\treturn new Filter(field, 'none', values);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"!=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic notEqual(field, value) {\n\t\treturn new Filter(field, '!=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"not\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t * the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic not(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value).add('not');\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should be the\n\t * filter's operator (like \">=\"). Otherwise, this will be used as the\n\t * filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic field(field, operatorOrValue, opt_value) {\n\t\treturn new Filter(field, operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"or\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t * the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tor(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn this.add('or', fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Converts the given arguments into a {@link Filter} instance.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t * the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t */\n\tstatic toFilter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tvar filter = fieldOrFilter;\n\t\tif (!(filter instanceof Filter)) {\n\t\t\tfilter = Filter.field(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\t}\n\t\treturn filter;\n\t}\n}\n\n/**\n * String constant that represents all fields.\n * @type {string}\n * @static\n */\nFilter.ALL = '*';\n\nexport default Filter;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\nimport Filter from './Filter';\nimport Aggregation from './Aggregation';\n\n/**\n * Class responsible for building queries.\n * @extends {Embodied}\n */\nclass Query extends Embodied {\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an\n\t *   {@link Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic aggregate(name, aggregationOrField, opt_operator) {\n\t\treturn new Query().aggregate(name, aggregationOrField, opt_operator);\n\t}\n\n\t/**\n\t * Sets this query's type to \"count\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic count() {\n\t\treturn new Query().type('count');\n\t}\n\n\t/**\n\t * Sets this query's type to \"fetch\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic fetch() {\n\t\treturn new Query().type('fetch');\n\t}\n\n\t/**\n\t * Adds a filter to this Query.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic filter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn new Query().filter(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Sets the query offset.\n\t * @param {number} offset The index of the first entry that should be returned\n\t *   by this query.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic offset(offset) {\n\t\treturn new Query().offset(offset);\n\t}\n\n\t/**\n\t * Adds a highlight entry to this {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic highlight(field) {\n\t\treturn new Query().highlight(field);\n\t}\n\n\t/**\n\t * Sets the query limit.\n\t * @param {number} limit The max amount of entries that this query should return.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic limit(limit) {\n\t\treturn new Query().limit(limit);\n\t}\n\n\t/**\n\t * Adds a search to this {@link Query} instance.\n\t * @param {!Filter|string} filterOrTextOrField If no other arguments\n\t *   are passed to this function, this should be either a {@link Filter}\n\t *   instance or a text to be used in a match filter. In both cases\n\t *   the filter will be applied to all fields. Another option is to\n\t *   pass this as a field name instead, together with other arguments\n\t *   so the filter can be created.\n\t * @param {string=} opt_textOrOperator Either a text to be used in a\n\t *   match filter, or the operator that should be used.\n\t * @param {*=} opt_value The value to be used by the filter. Should\n\t *   only be passed if an operator was passed as the second argument.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic search(filterOrTextOrField, opt_textOrOperator, opt_value) {\n\t\treturn new Query().search(filterOrTextOrField, opt_textOrOperator, opt_value);\n\t}\n\n\t/**\n\t * Adds a sort entry to this query, specifying the field this query should be\n\t * sorted by and, optionally, the sort direction.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should use.\n\t *   If none is given, \"asc\" is used by default.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic sort(field, opt_direction) {\n\t\treturn new Query().sort(field, opt_direction);\n\t}\n\n\t/**\n\t * Sets the query type.\n\t * @param {string} type The query's type. For example: \"count\", \"fetch\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic type(type) {\n\t\treturn new Query().type(type);\n\t}\n\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an\n\t *   {@link Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @chainnable\n\t */\n\taggregate(name, aggregationOrField, opt_operator) {\n\t\tvar aggregation = aggregationOrField;\n\t\tif (!(aggregation instanceof Aggregation)) {\n\t\t\taggregation = Aggregation.field(aggregationOrField, opt_operator);\n\t\t}\n\n\t\tvar field = aggregation.getField();\n\t\tvar value = {};\n\t\tvalue[field] = {\n\t\t\tname: name,\n\t\t\toperator: aggregation.getOperator()\n\t\t};\n\t\tif (core.isDefAndNotNull(aggregation.getValue())) {\n\t\t\tvalue[field].value = aggregation.getValue();\n\t\t}\n\n\t\tif (!this.body_.aggregation) {\n\t\t\tthis.body_.aggregation = [];\n\t\t}\n\t\tthis.body_.aggregation.push(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this query's type to \"count\".\n\t * @chainnable\n\t */\n\tcount() {\n\t\treturn this.type('count');\n\t}\n\n\t/**\n\t * Sets this query's type to \"fetch\".\n\t * @chainnable\n\t */\n\tfetch() {\n\t\treturn this.type('fetch');\n\t}\n\n\t/**\n\t * Adds a filter to this Query.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tfilter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tlet filter = Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\tif (!this.body_.filter) {\n\t\t\tthis.body_.filter = [];\n\t\t}\n\t\tthis.body_.filter.push(filter.body());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query offset.\n\t * @param {number} offset The index of the first entry that should be returned\n\t *   by this query.\n\t * @chainnable\n\t */\n\toffset(offset) {\n\t\tthis.body_.offset = offset;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a highlight entry to this {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @chainnable\n\t */\n\thighlight(field) {\n\t\tif (!this.body_.highlight) {\n\t\t\tthis.body_.highlight = [];\n\t\t}\n\n\t\tthis.body_.highlight.push(field);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query limit.\n\t * @param {number} limit The max amount of entries that this query should return.\n\t * @chainnable\n\t */\n\tlimit(limit) {\n\t\tthis.body_.limit = limit;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a search to this {@link Query} instance.\n\t * @param {!Filter|string} filterOrTextOrField If no other arguments\n\t *   are passed to this function, this should be either a {@link Filter}\n\t *   instance or a text to be used in a match filter. In both cases\n\t *   the filter will be applied to all fields. Another option is to\n\t *   pass this as a field name instead, together with other arguments\n\t *   so the filter can be created.\n\t * @param {string=} opt_textOrOperator Either a text to be used in a\n\t *   match filter, or the operator that should be used.\n\t * @param {*=} opt_value The value to be used by the filter. Should\n\t *   only be passed if an operator was passed as the second argument.\n\t * @chainnable\n\t */\n\tsearch(filterOrTextOrField, opt_textOrOperator, opt_value) {\n\t\tvar filter = filterOrTextOrField;\n\n\t\tif (opt_value) {\n\t\t\tfilter = Filter.field(filterOrTextOrField, opt_textOrOperator, opt_value);\n\t\t} else if (opt_textOrOperator) {\n\t\t\tfilter = Filter.match(filterOrTextOrField, opt_textOrOperator);\n\t\t} else if (!(filter instanceof Filter)) {\n\t\t\tfilter = Filter.match(filterOrTextOrField);\n\t\t}\n\n\t\tif (!this.body_.search) {\n\t\t\tthis.body_.search = [];\n\t\t}\n\n\t\tif (core.isDefAndNotNull(filterOrTextOrField)) {\n\t\t\tthis.body_.search.push(filter.body());\n\t\t} else {\n\t\t\tthis.body_.search.push({});\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a sort entry to this query, specifying the field this query should be\n\t * sorted by and, optionally, the sort direction.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should use.\n\t *   If none is given, \"asc\" is used by default.\n\t * @chainnable\n\t */\n\tsort(field, opt_direction) {\n\t\tif (!this.body_.sort) {\n\t\t\tthis.body_.sort = [];\n\t\t}\n\t\tvar sortEntry = {};\n\t\tsortEntry[field] = opt_direction || 'asc';\n\t\tthis.body_.sort.push(sortEntry);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query type.\n\t * @param {string} type The query's type. For example: \"count\", \"fetch\".\n\t * @chainnable\n\t */\n\ttype(type) {\n\t\tthis.body_.type = type;\n\t\treturn this;\n\t}\n}\n\nexport default Query;\n","'use strict';\n\n/**\n * Abstraction layer for string to base64 conversion\n * reference: https://github.com/nodejs/node/issues/3462\n */\nclass Base64 {\n\t/**\n\t * Creates a base-64 encoded ASCII string from a \"string\" of binary data.\n\t * @param {string} string to be encoded.\n\t * @return {string}\n\t * @static\n\t */\n\tstatic encodeString(string) {\n\t\tif (typeof btoa === 'function') {\n\t\t\treturn btoa(string);\n\t\t}\n\n\t\treturn new Buffer(string.toString(), 'binary');\n\t}\n}\n\nexport default Base64;\n","'use strict';\n\nimport { Disposable } from 'metal';\n\n/**\n * A cached reference to the create function.\n */\nvar create = Object.create;\n\n/**\n * Case insensitive string Multimap implementation. Allows multiple values for\n * the same key name.\n * @extends {Disposable}\n */\nclass MultiMap extends Disposable {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.keys = create(null);\n\t\tthis.values = create(null);\n\t}\n\n\t/**\n\t * Adds value to a key name.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tadd(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = this.values[name.toLowerCase()] || [];\n\t\tthis.values[name.toLowerCase()].push(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clears map names and values.\n\t * @chainable\n\t */\n\tclear() {\n\t\tthis.keys = create(null);\n\t\tthis.values = create(null);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Checks if map contains a value to the key name.\n\t * @param {string} name\n\t * @return {boolean}\n\t * @chainable\n\t */\n\tcontains(name) {\n\t\treturn name.toLowerCase() in this.values;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.values = null;\n\t}\n\n\t/**\n\t * Creates a `MultiMap` instance from the given object.\n\t * @param {!Object} obj\n\t * @return {!MultiMap}\n\t */\n\tstatic fromObject(obj) {\n\t\tvar map = new MultiMap();\n\t\tvar keys = Object.keys(obj);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tmap.set(keys[i], obj[keys[i]]);\n\t\t}\n\t\treturn map;\n\t}\n\n\t/**\n\t * Gets the first added value from a key name.\n\t * @param {string} name\n\t * @return {*}\n\t * @chainable\n\t */\n\tget(name) {\n\t\tvar values = this.values[name.toLowerCase()];\n\t\tif (values) {\n\t\t\treturn values[0];\n\t\t}\n\t}\n\n\t/**\n\t * Gets all values from a key name.\n\t * @param {string} name\n\t * @return {Array.<*>}\n\t */\n\tgetAll(name) {\n\t\treturn this.values[name.toLowerCase()];\n\t}\n\n\t/**\n\t * Returns true if the map is empty, false otherwise.\n\t * @return {boolean}\n\t */\n\tisEmpty() {\n\t\treturn this.size() === 0;\n\t}\n\n\t/**\n\t * Gets array of key names.\n\t * @return {Array.<string>}\n\t */\n\tnames() {\n\t\treturn Object.keys(this.values).map((key) => this.keys[key]);\n\t}\n\n\t/**\n\t * Removes all values from a key name.\n\t * @param {string} name\n\t * @chainable\n\t */\n\tremove(name) {\n\t\tdelete this.keys[name.toLowerCase()];\n\t\tdelete this.values[name.toLowerCase()];\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value of a key name. Relevant to replace the current values with\n\t * a new one.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tset(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = [value];\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the size of the map key names.\n\t * @return {number}\n\t */\n\tsize() {\n\t\treturn this.names().length;\n\t}\n\n\t/**\n\t * Returns the parsed values as a string.\n\t * @return {string}\n\t */\n\ttoString() {\n\t\treturn JSON.stringify(this.values);\n\t}\n}\n\nexport default MultiMap;\n","'use strict';\n\nimport { array } from 'metal';\n\n/**\n * Generic tree node data structure with arbitrary number of child nodes.\n * @param {V} value Value.\n * @constructor\n */\nclass TreeNode {\n\n\tconstructor(value) {\n\t\t/**\n\t\t * The value.\n\t\t * @private {V}\n\t\t */\n\t\tthis.value_ = value;\n\n\t\t/**\n\t\t * Reference to the parent node or null if it has no parent.\n\t\t * @private {TreeNode}\n\t\t */\n\t\tthis.parent_ = null;\n\n\t\t/**\n\t\t * Child nodes or null in case of leaf node.\n\t\t * @private {Array<!TreeNode>}\n\t\t */\n\t\tthis.children_ = null;\n\t}\n\n\t/**\n\t * Appends a child node to this node.\n\t * @param {!TreeNode} child Orphan child node.\n\t */\n\taddChild(child) {\n\t\tassertChildHasNoParent(child);\n\t\tchild.setParent(this);\n\t\tthis.children_ = this.children_ || [];\n\t\tthis.children_.push(child);\n\t}\n\n\t/**\n\t * Tells whether this node is the ancestor of the given node.\n\t * @param {!TreeNode} node A node.\n\t * @return {boolean} Whether this node is the ancestor of {@code node}.\n\t */\n\tcontains(node) {\n\t\tlet current = node.getParent();\n\t\twhile (current) {\n\t\t\tif (current === this) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcurrent = current.getParent();\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * @return {!Array<TreeNode>} All ancestor nodes in bottom-up order.\n\t */\n\tgetAncestors() {\n\t\tlet ancestors = [];\n\t\tlet node = this.getParent();\n\t\twhile (node) {\n\t\t\tancestors.push(node);\n\t\t\tnode = node.getParent();\n\t\t}\n\t\treturn ancestors;\n\t}\n\n\t/**\n\t * Gets the child node of this node at the given index.\n\t * @param {number} index Child index.\n\t * @return {?TreeNode} The node at the given index\n\t * or null if not found.\n\t */\n\tgetChildAt(index) {\n\t\treturn this.getChildren()[index] || null;\n\t}\n\n\t/**\n\t * @return {?Array<!TreeNode>} Child nodes or null in case of leaf node.\n\t */\n\tgetChildren() {\n\t\treturn this.children_ || TreeNode.EMPTY_ARRAY;\n\t}\n\n\t/**\n\t * @return {number} The number of children.\n\t */\n\tgetChildCount() {\n\t\treturn this.getChildren().length;\n\t}\n\n\t/**\n\t * @return {number} The number of ancestors of the node.\n\t */\n\tgetDepth() {\n\t\tlet depth = 0;\n\t\tlet node = this;\n\t\twhile (node.getParent()) {\n\t\t\tdepth++;\n\t\t\tnode = node.getParent();\n\t\t}\n\t\treturn depth;\n\t}\n\n\t/**\n\t * @return {?TreeNode} Parent node or null if it has no parent.\n\t */\n\tgetParent() {\n\t\treturn this.parent_;\n\t}\n\n\t/**\n\t * @return {!TreeNode} The root of the tree structure, i.e. the farthest\n\t * ancestor of the node or the node itself if it has no parents.\n\t */\n\tgetRoot() {\n\t\tlet root = this;\n\t\twhile (root.getParent()) {\n\t\t\troot = root.getParent();\n\t\t}\n\t\treturn root;\n\t}\n\n\t/**\n\t * Gets the value.\n\t * @return {V} The value.\n\t */\n\tgetValue() {\n\t\treturn this.value_;\n\t}\n\n\t/**\n\t * @return {boolean} Whether the node is a leaf node.\n\t */\n\tisLeaf() {\n\t\treturn !this.getChildCount();\n\t}\n\n\t/**\n\t * Removes the given child node of this node.\n\t * @param {TreeNode} child The node to remove.\n\t * @return {TreeNode} The removed node if any, null otherwise.\n\t */\n\tremoveChild(child) {\n\t\tif (array.remove(this.getChildren(), child)) {\n\t\t\treturn child;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the parent node of this node. The callers must ensure that the\n\t * parent node and only that has this node among its children.\n\t * @param {TreeNode} parent The parent to set. If null, the node will be\n\t * detached from the tree.\n\t * @protected\n\t */\n\tsetParent(parent) {\n\t\tthis.parent_ = parent;\n\t}\n\n\t/**\n\t * Traverses the subtree. The first callback starts with this node,\n\t * and visits the descendant nodes depth-first, in preorder.\n\t * The second callback, starts with deepest child then visits\n\t * the ancestor nodes depth-first, in postorder. E.g.\n\t *\n\t *  \t A\n\t *    / \\\n\t *   B   C\n\t *  /   / \\\n\t * D   E   F\n\t *\n\t * preorder -> ['A', 'B', 'D', 'C', 'E', 'F']\n\t * postorder -> ['D', 'B', 'E', 'F', 'C', 'A']\n\t *\n\t * @param {function=} opt_preorderFn The callback to execute when visiting a node.\n\t * @param {function=} opt_postorderFn The callback to execute before leaving a node.\n\t */\n\ttraverse(opt_preorderFn, opt_postorderFn) {\n\t\tif (opt_preorderFn) {\n\t\t\topt_preorderFn(this);\n\t\t}\n\t\tthis.getChildren().forEach((child) => child.traverse(opt_preorderFn, opt_postorderFn));\n\t\tif (opt_postorderFn) {\n\t\t\topt_postorderFn(this);\n\t\t}\n\t}\n\n}\n\n/**\n * Constant for empty array to avoid unnecessary allocations.\n * @private\n */\nTreeNode.EMPTY_ARRAY = [];\n\n/**\n * Asserts that child has no parent.\n * @param {TreeNode} child A child.\n * @private\n */\nconst assertChildHasNoParent = function(child) {\n\tif (child.getParent()) {\n\t\tthrow new Error('Cannot add child with parent.');\n\t}\n};\n\nexport default TreeNode;\n","'use strict';\n\nimport MultiMap from '../MultiMap';\nimport TreeNode from '../TreeNode';\n\nexport { MultiMap, TreeNode };\n","'use strict';\n\nimport { core } from 'metal';\nimport { MultiMap } from 'metal-structs';\n\n/**\n * Represents a client message (e.g. a request or a response).\n */\nclass ClientMessage {\n\tconstructor() {\n\t\tthis.headers_ = new MultiMap();\n\t}\n\n\t/**\n\t * Fluent getter and setter for request body.\n\t * @param {*=} opt_body Request body to be set. If none is given,\n\t *   the current value of the body will be returned.\n\t * @return {*} Returns request body if no body value was given. Otherwise\n\t *   returns the {@link ClientMessage} object itself, so calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tbody(opt_body) {\n\t\tif (core.isDef(opt_body)) {\n\t\t\tthis.body_ = opt_body;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.body_;\n\t}\n\n\t/**\n\t * Adds a header. If a header with the same name already exists, it will not be\n\t * overwritten, but the new value will be stored as well. The order is preserved.\n\t * @param {string} name\n\t * @param {string} value\n\t * @chainable\n\t */\n\theader(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.headers_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request headers.\n\t * @param {MultiMap|Object=} opt_headers Request headers list to\n\t *   be set. If none is given the current value of the headers will\n\t *   be returned.\n\t * @return {!MultiMap|ClientMessage} Returns map of request headers\n\t *   if no new value was given. Otherwise returns the {@link ClientMessage}\n\t *   object itself, so calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\theaders(opt_headers) {\n\t\tif (core.isDef(opt_headers)) {\n\t\t\tif (opt_headers instanceof MultiMap) {\n\t\t\t\tthis.headers_ = opt_headers;\n\t\t\t} else {\n\t\t\t\tthis.headers_.values = opt_headers;\n\t\t\t}\n\t\t\treturn opt_headers;\n\t\t}\n\t\treturn this.headers_;\n\t}\n\n\t/**\n\t * Removes the body.\n\t */\n\tremoveBody() {\n\t\tthis.body_ = undefined;\n\t}\n}\n\nexport default ClientMessage;\n","'use strict';\n\nimport { core } from 'metal';\nimport ClientMessage from './ClientMessage';\nimport { MultiMap } from 'metal-structs';\n\n/**\n * Represents a client request object.\n * @extends {ClientMessage}\n */\nclass ClientRequest extends ClientMessage {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.params_ = new MultiMap();\n\t\tthis.withCredentials_ = true;\n\t}\n\n\t/**\n\t * Fluent getter and setter for with credentials option.\n\t * @param {boolean=} opt_withCredentials\n\t * @chainable Chainable when used as setter.\n\t */\n\twithCredentials(opt_withCredentials) {\n\t\tif (core.isDef(opt_withCredentials)) {\n\t\t\tthis.withCredentials_ = !!opt_withCredentials;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.withCredentials_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request method.\n\t * @param {string=} opt_method Request method to be set. If none is given,\n\t *   the current method value will be returned.\n\t * @return {!ClientMessage|string} Returns request method if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so\n\t *   calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tmethod(opt_method) {\n\t\tif (core.isDef(opt_method)) {\n\t\t\tthis.method_ = opt_method;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.method_ || ClientRequest.DEFAULT_METHOD;\n\t}\n\n\t/**\n\t * Adds a query. If a query with the same name already exists, it will not\n\t * be overwritten, but new value will be stored as well. The order is preserved.\n\t * @param {string} name\n\t * @param {string} value\n\t * @chainable\n\t */\n\tparam(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.params_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request querystring.\n\t * @param {MultiMap|Object=} opt_params Request querystring map to be set.\n\t *   If none is given the current value of the params will be returned.\n\t * @return {!MultiMap|ClientMessage} Returns map of request querystring if\n\t *   no new value was given. Otherwise returns the {@link ClientMessage}\n\t *   object itself, so calls can be chained.\n\t */\n\tparams(opt_params) {\n\t\tif (core.isDef(opt_params)) {\n\t\t\tif (opt_params instanceof MultiMap) {\n\t\t\t\tthis.params_ = opt_params;\n\t\t\t} else {\n\t\t\t\tthis.params_.values = opt_params;\n\t\t\t}\n\t\t\treturn opt_params;\n\t\t}\n\t\treturn this.params_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request url.\n\t * @param {string=} opt_url Request url to be set. If none is given,\n\t *   the current value of the url will be returned.\n\t * @return {!ClientMessage|string} Returns request url if no new value was given.\n\t *   Otherwise returns the {@link ClientMessage} object itself, so calls can be\n\t *   chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\turl(opt_url) {\n\t\tif (core.isDef(opt_url)) {\n\t\t\tthis.url_ = opt_url;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.url_;\n\t}\n\n}\n\nClientRequest.DEFAULT_METHOD = 'GET';\n\nexport default ClientRequest;\n","'use strict';\n\nimport { core } from 'metal';\nimport ClientMessage from './ClientMessage';\n\n/**\n * Represents a client response object.\n * @extends {ClientMessage}\n */\nclass ClientResponse extends ClientMessage {\n\tconstructor(clientRequest) {\n\t\tsuper();\n\t\tif (!clientRequest) {\n\t\t\tthrow new Error('Can\\'t create response without request');\n\t\t}\n\t\tthis.clientRequest_ = clientRequest;\n\t}\n\n\t/**\n\t * Returns request that created this response.\n\t * @return {!ClientRequest}\n\t */\n\trequest() {\n\t\treturn this.clientRequest_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for response status code.\n\t * @param {number=} opt_statusCode Request status code to be set. If none is given,\n\t *   the current status code value will be returned.\n\t * @return {!ClientMessage|number} Returns response status code if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so calls can\n\t *   be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tstatusCode(opt_statusCode) {\n\t\tif (core.isDef(opt_statusCode)) {\n\t\t\tthis.statusCode_ = opt_statusCode;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.statusCode_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for response status text.\n\t * @param {string=} opt_statusText Request status text to be set. If none is given,\n\t *   the current status text value will be returned.\n\t * @return {!ClientMessage|number} Returns response status text if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so calls can\n\t *   be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tstatusText(opt_statusText) {\n\t\tif (core.isDef(opt_statusText)) {\n\t\t\tthis.statusText_ = opt_statusText;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.statusText_;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered valid.\n\t * @return {boolean}\n\t */\n\tsucceeded() {\n\t\treturn this.statusCode() >= 200 && this.statusCode() <= 399;\n\t}\n\n}\n\nexport default ClientResponse;\n","'use strict';\n\n/**\n * Provides a convenient interface for data transport.\n * @interface\n */\nclass Transport {\n\n\t/**\n\t * Sends a message for the specified client.\n\t * @param {!ClientRequest} clientRequest\n\t * @return {!Promise} Deferred request.\n\t */\n\tsend() {}\n\n}\n\nexport default Transport;\n","'use strict';\n\n/**\n * Parses the given uri string into an object.\n * @param {*=} opt_uri Optional string URI to parse\n */\nfunction parseFromAnchor(opt_uri) {\n\tvar link = document.createElement('a');\n\tlink.href = opt_uri;\n\treturn {\n\t\thash: link.hash,\n\t\thostname: link.hostname,\n\t\tpassword: link.password,\n\t\tpathname: link.pathname[0] === '/' ? link.pathname : '/' + link.pathname,\n\t\tport: link.port,\n\t\tprotocol: link.protocol,\n\t\tsearch: link.search,\n\t\tusername: link.username\n\t};\n}\n\nexport default parseFromAnchor;\n","'use strict';\n\nimport { core } from 'metal';\nimport parseFromAnchor from './parseFromAnchor';\n\n/**\n * Parses the given uri string into an object. The URL function will be used\n * when present, otherwise we'll fall back to the anchor node element.\n * @param {*=} opt_uri Optional string URI to parse\n */\nfunction parse(opt_uri) {\n\tif (core.isFunction(URL) && URL.length) {\n\t\treturn new URL(opt_uri);\n\t} else {\n\t\treturn parseFromAnchor(opt_uri);\n\t}\n}\n\nexport default parse;\n","'use strict';\n\nimport { core, string } from 'metal';\nimport parse from './parse';\nimport { MultiMap } from 'metal-structs';\n\nvar parseFn_ = parse;\n\nclass Uri {\n\n\t/**\n\t * This class contains setters and getters for the parts of the URI.\n\t * The following figure displays an example URIs and their component parts.\n\t *\n\t *                                  path\n\t *\t                             ┌───┴────┐\n\t *\t  abc://example.com:123/path/data?key=value#fragid1\n\t *\t  └┬┘   └────┬────┘ └┬┘           └───┬───┘ └──┬──┘\n\t * protocol  hostname  port            search    hash\n\t *          └──────┬───────┘\n\t *                host\n\t *\n\t * @param {*=} opt_uri Optional string URI to parse\n\t * @constructor\n\t */\n\tconstructor(opt_uri = '') {\n\t\tthis.url = Uri.parse(this.maybeAddProtocolAndHostname_(opt_uri));\n\t}\n\n\t/**\n\t * Adds parameters to uri from a <code>MultiMap</code> as source.\n\t * @param {MultiMap} multimap The <code>MultiMap</code> containing the\n\t *   parameters.\n\t * @protected\n\t * @chainable\n\t */\n\taddParametersFromMultiMap(multimap) {\n\t\tmultimap.names().forEach((name) => {\n\t\t\tmultimap.getAll(name).forEach((value) => {\n\t\t\t\tthis.addParameterValue(name, value);\n\t\t\t});\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the value of the named query parameters.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value. Will be explicitly casted to String.\n\t * @chainable\n\t */\n\taddParameterValue(name, value) {\n\t\tthis.ensureQueryInitialized_();\n\t\tif (core.isDef(value)) {\n\t\t\tvalue = String(value);\n\t\t}\n\t\tthis.query.add(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the values of the named query parameter.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value.\n\t * @chainable\n\t */\n\taddParameterValues(name, values) {\n\t\tvalues.forEach((value) => this.addParameterValue(name, value));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Ensures query internal map is initialized and synced with initial value\n\t * extracted from URI search part.\n\t * @protected\n\t */\n\tensureQueryInitialized_() {\n\t\tif (this.query) {\n\t\t\treturn;\n\t\t}\n\t\tthis.query = new MultiMap();\n\t\tvar search = this.url.search;\n\t\tif (search) {\n\t\t\tsearch.substring(1).split('&').forEach((param) => {\n\t\t\t\tvar [key, value] = param.split('=');\n\t\t\t\tif (core.isDef(value)) {\n\t\t\t\t\tvalue = Uri.urlDecode(value);\n\t\t\t\t}\n\t\t\t\tthis.addParameterValue(key, value);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Gets the hash part of uri.\n\t * @return {string}\n\t */\n\tgetHash() {\n\t\treturn this.url.hash || '';\n\t}\n\n\t/**\n\t * Gets the host part of uri. E.g. <code>[hostname]:[port]</code>.\n\t * @return {string}\n\t */\n\tgetHost() {\n\t\tvar host = this.getHostname();\n\t\tif (host) {\n\t\t\tvar port = this.getPort();\n\t\t\tif (port && port !== '80') {\n\t\t\t\thost += ':' + port;\n\t\t\t}\n\t\t}\n\t\treturn host;\n\t}\n\n\t/**\n\t * Gets the hostname part of uri without protocol and port.\n\t * @return {string}\n\t */\n\tgetHostname() {\n\t\tvar hostname = this.url.hostname;\n\t\tif (hostname === Uri.HOSTNAME_PLACEHOLDER) {\n\t\t\treturn '';\n\t\t}\n\t\treturn hostname;\n\t}\n\n\t/**\n\t * Gets the origin part of uri. E.g. <code>http://[hostname]:[port]</code>.\n\t * @return {string}\n\t */\n\tgetOrigin() {\n\t\tvar host = this.getHost();\n\t\tif (host) {\n\t\t\treturn this.getProtocol() + '//' + host;\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Returns the first value for a given parameter or undefined if the given\n\t * parameter name does not appear in the query string.\n\t * @param {string} paramName Unescaped parameter name.\n\t * @return {string|undefined} The first value for a given parameter or\n\t *   undefined if the given parameter name does not appear in the query\n\t *   string.\n\t */\n\tgetParameterValue(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.get(name);\n\t}\n\n\t/**\n\t * Returns the value<b>s</b> for a given parameter as a list of decoded\n\t * query parameter values.\n\t * @param {string} name The parameter to get values for.\n\t * @return {!Array<?>} The values for a given parameter as a list of decoded\n\t *   query parameter values.\n\t */\n\tgetParameterValues(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.getAll(name);\n\t}\n\n\t/**\n\t * Returns the name<b>s</b> of the parameters.\n\t * @return {!Array<string>} The names for the parameters as a list of\n\t *   strings.\n\t */\n\tgetParameterNames() {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.names();\n\t}\n\n\t/**\n\t * Gets the function currently being used to parse URIs.\n\t * @return {!function()}\n\t */\n\tstatic getParseFn() {\n\t\treturn parseFn_;\n\t}\n\n\t/**\n\t * Gets the pathname part of uri.\n\t * @return {string}\n\t */\n\tgetPathname() {\n\t\treturn this.url.pathname;\n\t}\n\n\t/**\n\t * Gets the port number part of uri as string.\n\t * @return {string}\n\t */\n\tgetPort() {\n\t\treturn this.url.port;\n\t}\n\n\t/**\n\t * Gets the protocol part of uri. E.g. <code>http:</code>.\n\t * @return {string}\n\t */\n\tgetProtocol() {\n\t\treturn this.url.protocol;\n\t}\n\n\t/**\n\t * Gets the search part of uri. Search value is retrieved from query\n\t * parameters.\n\t * @return {string}\n\t */\n\tgetSearch() {\n\t\tvar search = '';\n\t\tvar querystring = '';\n\t\tthis.getParameterNames().forEach((name) => {\n\t\t\tthis.getParameterValues(name).forEach((value) => {\n\t\t\t\tquerystring += name;\n\t\t\t\tif (core.isDef(value)) {\n\t\t\t\t\tquerystring += '=' + encodeURIComponent(value);\n\t\t\t\t}\n\t\t\t\tquerystring += '&';\n\t\t\t});\n\t\t});\n\t\tquerystring = querystring.slice(0, -1);\n\t\tif (querystring) {\n\t\t\tsearch += '?' + querystring;\n\t\t}\n\t\treturn search;\n\t}\n\n\t/**\n\t * Checks if uri contains the parameter.\n\t * @param {string} name\n\t * @return {boolean}\n\t */\n\thasParameter(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.contains(name);\n\t}\n\n\t/**\n\t * Makes this URL unique by adding a random param to it. Useful for avoiding\n\t * cache.\n\t */\n\tmakeUnique() {\n\t\tthis.setParameterValue(Uri.RANDOM_PARAM, string.getRandomString());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Maybe adds protocol and a hostname placeholder on a parial URI if needed.\n\t * Relevent for compatibility with <code>URL</code> native object.\n\t * @param {string=} opt_uri\n\t * @return {string} URI with protocol and hostname placeholder.\n\t */\n\tmaybeAddProtocolAndHostname_(opt_uri) {\n\t\tvar url = opt_uri;\n\t\tif (opt_uri.indexOf('://') === -1 &&\n\t\t\topt_uri.indexOf('javascript:') !== 0) { // jshint ignore:line\n\n\t\t\turl = Uri.DEFAULT_PROTOCOL;\n\t\t\tif (opt_uri[0] !== '/' || opt_uri[1] !== '/') {\n\t\t\t\turl += '//';\n\t\t\t}\n\n\t\t\tswitch (opt_uri.charAt(0)) {\n\t\t\t\tcase '.':\n\t\t\t\tcase '?':\n\t\t\t\tcase '#':\n\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\turl += '/';\n\t\t\t\t\turl += opt_uri;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '':\n\t\t\t\tcase '/':\n\t\t\t\t\tif (opt_uri[1] !== '/') {\n\t\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\t}\n\t\t\t\t\turl += opt_uri;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\turl += opt_uri;\n\t\t\t}\n\t\t}\n\t\treturn url;\n\t}\n\n\t/**\n\t * Normalizes the parsed object to be in the expected standard.\n\t * @param {!Object}\n\t */\n\tstatic normalizeObject(parsed) {\n\t\tvar length = parsed.pathname ? parsed.pathname.length : 0;\n\t\tif (length > 1 && parsed.pathname[length - 1] === '/') {\n\t\t\tparsed.pathname = parsed.pathname.substr(0, length - 1);\n\t\t}\n\t\treturn parsed;\n\t}\n\n\t/**\n\t * Parses the given uri string into an object.\n\t * @param {*=} opt_uri Optional string URI to parse\n\t */\n\tstatic parse(opt_uri) {\n\t\treturn Uri.normalizeObject(parseFn_(opt_uri));\n\t}\n\n\t/**\n\t * Removes the named query parameter.\n\t * @param {string} name The parameter to remove.\n\t * @chainable\n\t */\n\tremoveParameter(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\tthis.query.remove(name);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes uniqueness parameter of the uri.\n\t * @chainable\n\t */\n\tremoveUnique() {\n\t\tthis.removeParameter(Uri.RANDOM_PARAM);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the hash.\n\t * @param {string} hash\n\t * @chainable\n\t */\n\tsetHash(hash) {\n\t\tthis.url.hash = hash;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the hostname.\n\t * @param {string} hostname\n\t * @chainable\n\t */\n\tsetHostname(hostname) {\n\t\tthis.url.hostname = hostname;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value of the named query parameters, clearing previous values\n\t * for that key.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value.\n\t * @chainable\n\t */\n\tsetParameterValue(name, value) {\n\t\tthis.removeParameter(name);\n\t\tthis.addParameterValue(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the values of the named query parameters, clearing previous values\n\t * for that key.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value.\n\t * @chainable\n\t */\n\tsetParameterValues(name, values) {\n\t\tthis.removeParameter(name);\n\t\tvalues.forEach((value) => this.addParameterValue(name, value));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the pathname.\n\t * @param {string} pathname\n\t * @chainable\n\t */\n\tsetPathname(pathname) {\n\t\tthis.url.pathname = pathname;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the port number.\n\t * @param {*} port Port number.\n\t * @chainable\n\t */\n\tsetPort(port) {\n\t\tthis.url.port = port;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the function that will be used for parsing the original string uri\n\t * into an object.\n\t * @param {!function()} parseFn\n\t */\n\tstatic setParseFn(parseFn) {\n\t\tparseFn_ = parseFn;\n\t}\n\n\t/**\n\t * Sets the protocol. If missing <code>http:</code> is used as default.\n\t * @param {string} protocol\n\t * @chainable\n\t */\n\tsetProtocol(protocol) {\n\t\tthis.url.protocol = protocol;\n\t\tif (this.url.protocol[this.url.protocol.length - 1] !== ':') {\n\t\t\tthis.url.protocol += ':';\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string} The string form of the url.\n\t * @override\n\t */\n\ttoString() {\n\t\tvar href = '';\n\t\tvar host = this.getHost();\n\t\tif (host) {\n\t\t\thref += this.getProtocol() + '//';\n\t\t}\n\t\thref += host + this.getPathname() + this.getSearch() + this.getHash();\n\t\treturn href;\n\t}\n\n\t/**\n\t * Joins the given paths.\n\t * @param {string} basePath\n\t * @param {...string} ...paths Any number of paths to be joined with the base url.\n\t * @static\n\t */\n\tstatic joinPaths(basePath, ...paths) {\n\t\tif (basePath.charAt(basePath.length - 1) === '/') {\n\t\t\tbasePath = basePath.substring(0, basePath.length - 1);\n\t\t}\n\t\tpaths = paths.map(path => path.charAt(0) === '/' ? path.substring(1) : path);\n\t\treturn [basePath].concat(paths).join('/').replace(/\\/$/, '');\n\t}\n\n\t/**\n\t * URL-decodes the string. We need to specially handle '+'s because\n\t * the javascript library doesn't convert them to spaces.\n\t * @param {string} str The string to url decode.\n\t * @return {string} The decoded {@code str}.\n\t */\n\tstatic urlDecode(str) {\n\t\treturn decodeURIComponent(str.replace(/\\+/g, ' '));\n\t}\n\n}\n\n/**\n * Default protocol value.\n * @type {string}\n * @default http:\n * @static\n */\nUri.DEFAULT_PROTOCOL = 'http:';\n\n/**\n * Hostname placeholder. Relevant to internal usage only.\n * @type {string}\n * @static\n */\nUri.HOSTNAME_PLACEHOLDER = 'hostname' + Date.now();\n\n/**\n * Name used by the param generated by `makeUnique`.\n * @type {string}\n * @static\n */\nUri.RANDOM_PARAM = 'zx';\n\nexport default Uri;\n","/*!\n * Promises polyfill from Google's Closure Library.\n *\n *      Copyright 2013 The Closure Library Authors. All Rights Reserved.\n *\n * NOTE(eduardo): Promise support is not ready on all supported browsers,\n * therefore core.js is temporarily using Google's promises as polyfill. It\n * supports cancellable promises and has clean and fast implementation.\n */\n\n'use strict';\n\nimport { core } from 'metal';\nimport { async } from 'metal';\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see CancellablePromise}.\n *\n * @interface\n * @extends {IThenable.<TYPE>}\n * @template TYPE\n */\nvar Thenable = function() {};\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the {@code onFulfilled} callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE):\n *             (RESULT|IThenable.<RESULT>|Thenable))=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fullfilled.\n * @param {?(function(*): *)=} opt_onRejected A function that will be invoked\n *     with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @return {!CancellablePromise.<RESULT>} A new Promise that will receive the\n *     result of the fulfillment or rejection callback.\n * @template RESULT,THIS\n */\nThenable.prototype.then = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * {@code Thenable}.\n *\n * {@see addImplementation}.\n *\n * @const\n */\nThenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:Thenable,...[?])} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\nThenable.addImplementation = function(ctor) {\n  ctor.prototype.then = ctor.prototype.then;\n  ctor.prototype.$goog_Thenable = true;\n};\n\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements {@code Thenable}.\n *     The class/superclass of the instance must call {@code addImplementation}.\n */\nThenable.isImplementedBy = function(object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\nvar partial = function(fn) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n/**\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled or rejected with a value, which will be known\n * as the fulfillment value or the rejection reason. Whether fulfilled or\n * rejected, the Promise result is immutable once it is set.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling {@code then} and registering\n * {@code onFulfilled} and {@code onRejected} callbacks. Once the Promise\n * resolves, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional {@code then} calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering {@code then} invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is resolved, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable.<TYPE>|Thenable)),\n *             function(*)): void} resolver\n *     Initialization function that is invoked immediately with {@code resolve}\n *     and {@code reject} functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {Thenable.<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\nvar CancellablePromise = function(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {CancellablePromise.State_}\n   */\n  this.state_ = CancellablePromise.State_.PENDING;\n\n  /**\n   * The resolved result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling {@code then()}, the originating parent.\n   * @private {CancellablePromise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The list of {@code onFulfilled} and {@code onRejected} callbacks added to\n   * this Promise by calls to {@code then()}.\n   * @private {Array.<CancellablePromise.CallbackEntry_>}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the {@code UNHANDLED_REJECTION_DELAY} is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an {@code onRejected} callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    /**\n     * When the {@code UNHANDLED_REJECTION_DELAY} is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * {@code onRejected} callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  try {\n    var self = this;\n    resolver.call(\n      opt_context, function(value) {\n        self.resolve_(CancellablePromise.State_.FULFILLED, value);\n      }, function(reason) {\n        self.resolve_(CancellablePromise.State_.REJECTED, reason);\n      });\n  } catch (e) {\n    this.resolve_(CancellablePromise.State_.REJECTED, e);\n  }\n};\n\n/**\n * The delay in milliseconds before a rejected Promise's reason is passed to\n * the rejection handler. By default, the rejection handler rethrows the\n * rejection reason so that it appears in the developer console or\n * {@code window.onerror} handler.\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n * @type {number}\n */\nCancellablePromise.UNHANDLED_REJECTION_DELAY = 0;\n\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\nCancellablePromise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n\n/**\n * Typedef for entries in the callback chain. Each call to {@code then},\n * {@code thenCatch}, or {@code thenAlways} creates an entry containing the\n * functions that may be invoked once the Promise is resolved.\n *\n * @typedef {{\n *   child: CancellablePromise,\n *   onFulfilled: function(*),\n *   onRejected: function(*)\n * }}\n * @private\n */\nCancellablePromise.CallbackEntry_ = null;\n\n\n/**\n * @param {(TYPE|Thenable.<TYPE>|Thenable)=} opt_value\n * @return {!CancellablePromise.<TYPE>} A new Promise that is immediately resolved\n *     with the given value.\n * @template TYPE\n */\nCancellablePromise.resolve = function(opt_value) {\n  return new CancellablePromise(function(resolve) {\n      resolve(opt_value);\n    });\n};\n\n\n/**\n * @param {*=} opt_reason\n * @return {!CancellablePromise} A new Promise that is immediately rejected with the\n *     given reason.\n */\nCancellablePromise.reject = function(opt_reason) {\n  return new CancellablePromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to complete.\n * @template TYPE\n */\nCancellablePromise.race = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      if (!promises.length) {\n        resolve(undefined);\n      }\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(resolve, reject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<!Array.<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected by the first rejection result.\n * @template TYPE\n */\nCancellablePromise.all = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toFulfill = promises.length;\n      var values = [];\n\n      if (!toFulfill) {\n        resolve(values);\n        return;\n      }\n\n      var onFulfill = function(index, value) {\n        toFulfill--;\n        values[index] = value;\n        if (toFulfill === 0) {\n          resolve(values);\n        }\n      };\n\n      var onReject = function(reason) {\n        reject(reason);\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(partial(onFulfill, i), onReject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the value of\n *     the first input to be fulfilled, or is rejected with a list of every\n *     rejection reason if all inputs are rejected.\n * @template TYPE\n */\nCancellablePromise.firstFulfilled = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toReject = promises.length;\n      var reasons = [];\n\n      if (!toReject) {\n        resolve(undefined);\n        return;\n      }\n\n      var onFulfill = function(value) {\n        resolve(value);\n      };\n\n      var onReject = function(index, reason) {\n        toReject--;\n        reasons[index] = reason;\n        if (toReject === 0) {\n          reject(reasons);\n        }\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(onFulfill, partial(onReject, i));\n      }\n    });\n};\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the {@code onFulfilled} callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value (or thrown value) of the callback.\n *\n * @override\n */\nCancellablePromise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n  return this.addChildPromise_(\n    core.isFunction(opt_onFulfilled) ? opt_onFulfilled : null,\n    core.isFunction(opt_onRejected) ? opt_onRejected : null,\n    opt_context);\n};\nThenable.addImplementation(CancellablePromise);\n\n\n/**\n * Adds a callback that will be invoked whether the Promise is fulfilled or\n * rejected. The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with {@code thenAlways} will be\n * executed in the same order with other calls to {@code then},\n * {@code thenAlways}, or {@code thenCatch}.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with {@code thenAlways}. A Promise that has\n * a cleanup handler added with {@code thenAlways} will be canceled if all of\n * its children created by {@code then} (or {@code thenCatch}) are canceled.\n *\n * @param {function(this:THIS): void} onResolved A function that will be invoked\n *     when the Promise is resolved.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise.<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\nCancellablePromise.prototype.thenAlways = function(onResolved, opt_context) {\n  var callback = function() {\n    try {\n      // Ensure that no arguments are passed to onResolved.\n      onResolved.call(opt_context);\n    } catch (err) {\n      CancellablePromise.handleRejection_.call(null, err);\n    }\n  };\n\n  this.addCallbackEntry_({\n    child: null,\n    onRejected: callback,\n    onFulfilled: callback\n  });\n  return this;\n};\n\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {!function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\nCancellablePromise.prototype.thenCatch = function(onRejected, opt_context) {\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n/**\n * Alias of {@link CancellablePromise.prototype.thenCatch}\n */\nCancellablePromise.prototype.catch = CancellablePromise.prototype.thenCatch;\n\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\nCancellablePromise.prototype.cancel = function(opt_message) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    async.run(function() {\n      var err = new CancellablePromise.CancellationError(opt_message);\n      err.IS_CANCELLATION_ERROR = true;\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\nCancellablePromise.prototype.cancelInternal_ = function(err) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n    } else {\n      this.resolve_(CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!CancellablePromise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\nCancellablePromise.prototype.cancelChild_ = function(childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childIndex = -1;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var i = 0, entry; (entry = this.callbackEntries_[i]); i++) {\n    var child = entry.child;\n    if (child) {\n      childCount++;\n      if (child === childPromise) {\n        childIndex = i;\n      }\n      if (childIndex >= 0 && childCount > 1) {\n        break;\n      }\n    }\n  }\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childIndex >= 0) {\n    if (this.state_ === CancellablePromise.State_.PENDING && childCount === 1) {\n      this.cancelInternal_(err);\n    } else {\n      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];\n      this.executeCallback_(\n        callbackEntry, CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been resolved.\n *\n * @param {CancellablePromise.CallbackEntry_} callbackEntry Record containing\n *     {@code onFulfilled} and {@code onRejected} callbacks to execute after\n *     the Promise is resolved.\n * @private\n */\nCancellablePromise.prototype.addCallbackEntry_ = function(callbackEntry) {\n  if ((!this.callbackEntries_ || !this.callbackEntries_.length) &&\n    (this.state_ === CancellablePromise.State_.FULFILLED ||\n    this.state_ === CancellablePromise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  if (!this.callbackEntries_) {\n    this.callbackEntries_ = [];\n  }\n  this.callbackEntries_.push(callbackEntry);\n};\n\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the {@code onFulfilled} or {@code onRejected} callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|CancellablePromise.<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fullfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!CancellablePromise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\nCancellablePromise.prototype.addChildPromise_ = function(\nonFulfilled, onRejected, opt_context) {\n\n  var callbackEntry = {\n    child: null,\n    onFulfilled: null,\n    onRejected: null\n  };\n\n  callbackEntry.child = new CancellablePromise(function(resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function(value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function(reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!core.isDef(result) && reason.IS_CANCELLATION_ERROR) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(\n    /** @type {CancellablePromise.CallbackEntry_} */ (callbackEntry));\n  return callbackEntry.child;\n};\n\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\nCancellablePromise.prototype.unblockAndFulfill_ = function(value) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.FULFILLED, value);\n};\n\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\nCancellablePromise.prototype.unblockAndReject_ = function(reason) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.REJECTED, reason);\n};\n\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be resolved with the same state and result as the Thenable once it is itself\n * resolved.\n *\n * If the given result is not a Thenable, the Promise will be fulfilled or\n * rejected with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {CancellablePromise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\nCancellablePromise.prototype.resolve_ = function(state, x) {\n  if (this.state_ !== CancellablePromise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = CancellablePromise.State_.REJECTED;\n    x = new TypeError('CancellablePromise cannot resolve to itself');\n\n  } else if (Thenable.isImplementedBy(x)) {\n    x = /** @type {!Thenable} */ (x);\n    this.state_ = CancellablePromise.State_.BLOCKED;\n    x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);\n    return;\n\n  } else if (core.isObject(x)) {\n    try {\n      var then = x.then;\n      if (core.isFunction(then)) {\n        this.tryThen_(x, then);\n        return;\n      }\n    } catch (e) {\n      state = CancellablePromise.State_.REJECTED;\n      x = e;\n    }\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  this.scheduleCallbacks_();\n\n  if (state === CancellablePromise.State_.REJECTED && !x.IS_CANCELLATION_ERROR) {\n    CancellablePromise.addUnhandledRejection_(this, x);\n  }\n};\n\n\n/**\n * Attempts to call the {@code then} method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the {@code then} method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a {@code then} method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The {@code then} method of the Thenable object.\n * @private\n */\nCancellablePromise.prototype.tryThen_ = function(thenable, then) {\n  this.state_ = CancellablePromise.State_.BLOCKED;\n  var promise = this;\n  var called = false;\n\n  var resolve = function(value) {\n    if (!called) {\n      called = true;\n      promise.unblockAndFulfill_(value);\n    }\n  };\n\n  var reject = function(reason) {\n    if (!called) {\n      called = true;\n      promise.unblockAndReject_(reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n\n/**\n * Executes the pending callbacks of a resolved Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If {@code startExecution_} is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\nCancellablePromise.prototype.scheduleCallbacks_ = function() {\n  if (!this.executing_) {\n    this.executing_ = true;\n    async.run(this.executeCallbacks_, this);\n  }\n};\n\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\nCancellablePromise.prototype.executeCallbacks_ = function() {\n  while (this.callbackEntries_ && this.callbackEntries_.length) {\n    var entries = this.callbackEntries_;\n    this.callbackEntries_ = [];\n\n    for (var i = 0; i < entries.length; i++) {\n      this.executeCallback_(entries[i], this.state_, this.result_);\n    }\n  }\n  this.executing_ = false;\n};\n\n\n/**\n * Executes a pending callback for this Promise. Invokes an {@code onFulfilled}\n * or {@code onRejected} callback based on the resolved state of the Promise.\n *\n * @param {!CancellablePromise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {CancellablePromise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The resolved result of the Promise.\n * @private\n */\nCancellablePromise.prototype.executeCallback_ = function(\ncallbackEntry, state, result) {\n  if (state === CancellablePromise.State_.FULFILLED) {\n    callbackEntry.onFulfilled(result);\n  } else {\n    this.removeUnhandledRejection_();\n    callbackEntry.onRejected(result);\n  }\n};\n\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\nCancellablePromise.prototype.removeUnhandledRejection_ = function() {\n  var p;\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n\n/**\n * Marks this rejected Promise as unhandled. If no {@code onRejected} callback\n * is called for this Promise before the {@code UNHANDLED_REJECTION_DELAY}\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!CancellablePromise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\nCancellablePromise.addUnhandledRejection_ = function(promise, reason) {\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = setTimeout(function() {\n      CancellablePromise.handleRejection_.call(null, reason);\n    }, CancellablePromise.UNHANDLED_REJECTION_DELAY);\n\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    promise.hadUnhandledRejection_ = true;\n    async.run(function() {\n      if (promise.hadUnhandledRejection_) {\n        CancellablePromise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no {@code onRejected} callbacks registered yet.\n * @type {function(*)}\n * @private\n */\nCancellablePromise.handleRejection_ = async.throwException;\n\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * {@code onRejected} callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a {@code window.onerror} handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to {@code async.throwException}.\n */\nCancellablePromise.setUnhandledRejectionHandler = function(handler) {\n  CancellablePromise.handleRejection_ = handler;\n};\n\n\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {Error}\n * @final\n */\nCancellablePromise.CancellationError = class extends Error {\n  constructor(opt_message) {\n     super(opt_message);\n\n     if (opt_message) {\n       this.message = opt_message;\n     }\n   }\n};\n\n/** @override */\nCancellablePromise.CancellationError.prototype.name = 'cancel';\n\nexport {CancellablePromise};\nexport default CancellablePromise;\n","'use strict';\n\nimport { core } from 'metal';\nimport Uri from 'metal-uri';\nimport { CancellablePromise as Promise } from 'metal-promise';\n\nclass Ajax {\n\n\t/**\n\t * XmlHttpRequest's getAllResponseHeaders() method returns a string of\n\t * response headers according to the format described on the spec:\n\t * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}.\n\t * This method parses that string into a user-friendly name/value pair\n\t * object.\n\t * @param {string} allHeaders All headers as string.\n\t * @return {!Array.<Object<string, string>>}\n\t */\n\tstatic parseResponseHeaders(allHeaders) {\n\t\tvar headers = [];\n\t\tif (!allHeaders) {\n\t\t\treturn headers;\n\t\t}\n\t\tvar pairs = allHeaders.split('\\u000d\\u000a');\n\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\tvar index = pairs[i].indexOf('\\u003a\\u0020');\n\t\t\tif (index > 0) {\n\t\t\t\tvar name = pairs[i].substring(0, index);\n\t\t\t\tvar value = pairs[i].substring(index + 2);\n\t\t\t\theaders.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn headers;\n\t}\n\n\t/**\n\t * Requests the url using XMLHttpRequest.\n\t * @param {!string} url\n\t * @param {!string} method\n\t * @param {?string} body\n\t * @param {MultiMap=} opt_headers\n\t * @param {MultiMap=} opt_params\n\t * @param {number=} opt_timeout\n\t * @param {boolean=} opt_sync\n\t * @param {boolean=} opt_withCredentials\n\t * @return {Promise} Deferred ajax request.\n\t * @protected\n\t */\n\tstatic request(url, method, body, opt_headers, opt_params, opt_timeout, opt_sync, opt_withCredentials) {\n\t\turl = url || '';\n\t\tmethod = method || 'GET';\n\n\t\tvar request = new XMLHttpRequest();\n\n\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\trequest.onload = function() {\n\t\t\t\tif (request.aborted) {\n\t\t\t\t\trequest.onerror();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(request);\n\t\t\t};\n\t\t\trequest.onerror = function() {\n\t\t\t\tvar error = new Error('Request error');\n\t\t\t\terror.request = request;\n\t\t\t\treject(error);\n\t\t\t};\n\t\t}).thenCatch(function(reason) {\n\t\t\trequest.abort();\n\t\t\tthrow reason;\n\t\t}).thenAlways(function() {\n\t\t\tclearTimeout(timeout);\n\t\t});\n\n\t\tif (opt_params) {\n\t\t\turl = new Uri(url).addParametersFromMultiMap(opt_params).toString();\n\t\t}\n\n\t\trequest.open(method, url, !opt_sync);\n\n\t\tif (opt_withCredentials) {\n\t\t\trequest.withCredentials = true;\n\t\t}\n\n\t\tif (opt_headers) {\n\t\t\topt_headers.names().forEach(function(name) {\n\t\t\t\trequest.setRequestHeader(name, opt_headers.getAll(name).join(', '));\n\t\t\t});\n\t\t}\n\n\t\trequest.send(core.isDef(body) ? body : null);\n\n\t\tif (core.isDefAndNotNull(opt_timeout)) {\n\t\t\tvar timeout = setTimeout(function() {\n\t\t\t\tpromise.cancel('Request timeout');\n\t\t\t}, opt_timeout);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n}\n\nexport default Ajax;\n","'use strict';\n\nimport Ajax from 'metal-ajax';\nimport Transport from '../Transport';\nimport ClientResponse from '../ClientResponse';\n\n/**\n * The implementation of an ajax transport to be used with {@link WeDeploy}.\n * @extends {Transport}\n */\nclass AjaxTransport extends Transport {\n\t/**\n\t * @inheritDoc\n\t */\n\tsend(clientRequest) {\n\t\tvar deferred = Ajax.request(\n\t\t\tclientRequest.url(), clientRequest.method(), clientRequest.body(),\n\t\t\tclientRequest.headers(), clientRequest.params(), null, false, clientRequest.withCredentials());\n\n\t\treturn deferred.then(function(response) {\n\t\t\tvar clientResponse = new ClientResponse(clientRequest);\n\t\t\tclientResponse.body(response.responseText);\n\t\t\tclientResponse.statusCode(response.status);\n\t\t\tclientResponse.statusText(response.statusText);\n\t\t\tAjax.parseResponseHeaders(response.getAllResponseHeaders()).forEach(function(header) {\n\t\t\t\tclientResponse.header(header.name, header.value);\n\t\t\t});\n\t\t\treturn clientResponse;\n\t\t});\n\t}\n}\n\nexport default AjaxTransport;\n","'use strict';\n\nimport AjaxTransport from './browser/AjaxTransport';\n\n/**\n * Provides a factory for data transport.\n */\nclass TransportFactory {\n\tconstructor() {\n\t\tthis.transports = {};\n\t\tthis.transports[TransportFactory.DEFAULT_TRANSPORT_NAME] = TransportFactory[TransportFactory.DEFAULT_TRANSPORT_NAME];\n\t}\n\n\t/**\n\t * Returns {@link TransportFactory} instance.\n\t */\n\tstatic instance() {\n\t\tif (!TransportFactory.instance_) {\n\t\t\tTransportFactory.instance_ = new TransportFactory();\n\t\t}\n\t\treturn TransportFactory.instance_;\n\t}\n\n\t/**\n\t * Gets an instance of the transport implementation with the given name.\n\t * @param {string} implementationName\n\t * @return {!Transport}\n\t */\n\tget(implementationName) {\n\t\tvar TransportClass = this.transports[implementationName];\n\n\t\tif (!TransportClass) {\n\t\t\tthrow new Error('Invalid transport name: ' + implementationName);\n\t\t}\n\n\t\ttry {\n\t\t\treturn new (TransportClass)();\n\t\t} catch (err) {\n\t\t\tthrow new Error('Can\\'t create transport', err);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the default transport implementation.\n\t * @return {!Transport}\n\t */\n\tgetDefault() {\n\t\treturn this.get(TransportFactory.DEFAULT_TRANSPORT_NAME);\n\t}\n}\n\nTransportFactory.DEFAULT_TRANSPORT_NAME = 'default';\n\nTransportFactory[TransportFactory.DEFAULT_TRANSPORT_NAME] = AjaxTransport;\n\nexport default TransportFactory;\n","var globals = {};\n\nif (typeof window !== 'undefined') {\n\tglobals.window = window;\n}\n\nif (typeof document !== 'undefined') {\n\tglobals.document = document;\n}\n\nexport default globals;\n","'use strict';\n\nimport { core } from 'metal';\nimport globals from '../globals/globals';\nimport Uri from 'metal-uri';\n\nfunction assertBrowserEnvironment() {\n\tif (!globals.window) {\n\t\tthrow new Error('Sign-in type not supported in this environment');\n\t}\n}\n\nfunction assertDefAndNotNull(value, errorMessage) {\n\tif (!core.isDefAndNotNull(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertNotNull(value, errorMessage) {\n\tif (core.isNull(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertFunction(value, errorMessage) {\n\tif (!core.isFunction(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertObject(value, errorMessage) {\n\tif (!core.isObject(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nfunction assertResponseSucceeded(response) {\n\tif (!response.succeeded()) {\n\t\tthrow response.body();\n\t}\n\treturn response;\n}\n\nfunction assertUserSignedIn(user) {\n\tif (!core.isDefAndNotNull(user)) {\n\t\tthrow new Error('You must be signed-in to perform this operation');\n\t}\n}\n\nfunction assertUriWithNoPath(url, message) {\n\tvar uri = new Uri(url);\n\tif (uri.getPathname().length > 1) {\n\t\tthrow new Error(message);\n\t}\n}\n\nexport { assertBrowserEnvironment, assertDefAndNotNull, assertNotNull, assertFunction, assertObject, assertResponseSucceeded, assertUserSignedIn, assertUriWithNoPath };\n","'use strict';\n\nimport { core } from 'metal';\n\nimport { assertDefAndNotNull, assertObject, assertResponseSucceeded } from '../assertions';\n\n/**\n * Class responsible for storing authorization information.\n */\nclass Auth {\n\t/**\n\t * Constructs an {@link Auth} instance.\n\t * @param {string} tokenOrEmail Either the authorization token, or\n\t *   the username.\n\t * @param {string=} opt_password If a username is given as the first param,\n\t *   this should be the password.\n\t * @constructor\n\t */\n\tconstructor(tokenOrEmail, opt_password = null) {\n\t\tthis.token = core.isString(opt_password) ? null : tokenOrEmail;\n\t\tthis.email = core.isString(opt_password) ? tokenOrEmail : null;\n\t\tthis.password = opt_password;\n\n\t\tthis.createdAt = null;\n\t\tthis.id = null;\n\t\tthis.name = null;\n\t\tthis.photoUrl = null;\n\t\tthis.wedeployClient = null;\n\t}\n\n\t/**\n\t * Constructs an {@link Auth} instance.\n\t * @param {string} tokenOrUsername Either the authorization token, or\n\t *   the username.\n\t * @param {string=} opt_password If a username is given as the first param,\n\t *   this should be the password.\n\t * @return {!Auth}\n\t */\n\tstatic create(tokenOrUsername, opt_password) {\n\t\treturn new Auth(tokenOrUsername, opt_password);\n\t}\n\n\t/**\n\t * Gets the created at date.\n\t * @return {string}\n\t */\n\tgetCreatedAt() {\n\t\treturn this.createdAt;\n\t}\n\n\t/**\n\t * Gets the email.\n\t * @return {string}\n\t */\n\tgetEmail() {\n\t\treturn this.email;\n\t}\n\n\t/**\n\t * Gets the id.\n\t * @return {string}\n\t */\n\tgetId() {\n\t\treturn this.id;\n\t}\n\n\t/**\n\t * Gets the name.\n\t * @return {string}\n\t */\n\tgetName() {\n\t\treturn this.name;\n\t}\n\n\t/**\n\t * Gets the password.\n\t * @return {string}\n\t */\n\tgetPassword() {\n\t\treturn this.password;\n\t}\n\n\t/**\n\t * Gets the photo url.\n\t * @return {string}\n\t */\n\tgetPhotoUrl() {\n\t\treturn this.photoUrl;\n\t}\n\n\t/**\n\t * Gets the token.\n\t * @return {string}\n\t */\n\tgetToken() {\n\t\treturn this.token;\n\t}\n\n\t/**\n\t * Checks if created at is set.\n\t * @return {boolean}\n\t */\n\thasCreatedAt() {\n\t\treturn core.isDefAndNotNull(this.createdAt);\n\t}\n\n\t/**\n\t * Checks if the email is set.\n\t * @return {boolean}\n\t */\n\thasEmail() {\n\t\treturn core.isDefAndNotNull(this.email);\n\t}\n\n\t/**\n\t * Checks if the id is set.\n\t * @return {boolean}\n\t */\n\thasId() {\n\t\treturn core.isDefAndNotNull(this.id);\n\t}\n\n\t/**\n\t * Checks if the name is set.\n\t * @return {boolean}\n\t */\n\thasName() {\n\t\treturn core.isDefAndNotNull(this.name);\n\t}\n\n\t/**\n\t * Checks if the password is set.\n\t * @return {boolean}\n\t */\n\thasPassword() {\n\t\treturn core.isDefAndNotNull(this.password);\n\t}\n\n\t/**\n\t * Checks if the photo url is set.\n\t * @return {boolean}\n\t */\n\thasPhotoUrl() {\n\t\treturn core.isDefAndNotNull(this.photoUrl);\n\t}\n\n\t/**\n\t * Checks if the token is set.\n\t * @return {boolean}\n\t */\n\thasToken() {\n\t\treturn core.isDefAndNotNull(this.token);\n\t}\n\n\t/**\n\t * Sets created at.\n\t * @param {string} createdAt\n\t */\n\tsetCreatedAt(createdAt) {\n\t\tthis.createdAt = createdAt;\n\t}\n\n\t/**\n\t * Sets the email.\n\t * @param {string} email\n\t */\n\tsetEmail(email) {\n\t\tthis.email = email;\n\t}\n\n\t/**\n\t * Sets the id.\n\t * @param {string} id\n\t */\n\tsetId(id) {\n\t\tthis.id = id;\n\t}\n\n\t/**\n\t * Sets the name.\n\t * @param {string} name\n\t */\n\tsetName(name) {\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * Sets the password.\n\t * @param {string} password\n\t */\n\tsetPassword(password) {\n\t\tthis.password = password;\n\t}\n\n\t/**\n\t * Sets the photo url.\n\t * @param {string} photoUrl\n\t */\n\tsetPhotoUrl(photoUrl) {\n\t\tthis.photoUrl = photoUrl;\n\t}\n\n\t/**\n\t * Sets the token.\n\t * @param {string} token\n\t */\n\tsetToken(token) {\n\t\tthis.token = token;\n\t}\n\n\tsetWedeployClient(wedeployClient) {\n\t\tthis.wedeployClient = wedeployClient;\n\t}\n\n\t/**\n\t * Updates the user.\n\t * @param {!object} data\n\t * @return {CompletableFuture}\n\t */\n\tupdateUser(data) {\n\t\tassertObject(data, 'User data must be specified as object');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users')\n\t\t\t.auth(this)\n\t\t\t.patch(data)\n\t\t\t.then(response => assertResponseSucceeded(response));\n\t}\n\n\t/**\n\t * Deletes the current user.\n\t * @return {CompletableFuture}\n\t */\n\tdeleteUser() {\n\t\tassertDefAndNotNull(this.id, 'Cannot delete user without id');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users', this.id)\n\t\t\t.auth(this)\n\t\t\t.delete()\n\t\t\t.then(response => assertResponseSucceeded(response));\n\t}\n}\n\nexport default Auth;\n","'use strict';\n\nimport { core } from 'metal';\nimport Uri from 'metal-uri';\n\n/**\n * Class responsible for encapsulate provider information.\n */\nclass AuthProvider {\n\t/**\n\t * Constructs an {@link AuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.provider = null;\n\t\tthis.providerScope = null;\n\t\tthis.redirectUri = null;\n\t\tthis.scope = null;\n\t}\n\n\t/**\n\t * Checks if provider is defined and not null.\n\t * @return {boolean}\n\t */\n\thasProvider() {\n\t\treturn core.isDefAndNotNull(this.provider);\n\t}\n\n\t/**\n\t * Checks if scope is defined and not null.\n\t * @return {boolean}\n\t */\n\thasProviderScope() {\n\t\treturn core.isDefAndNotNull(this.providerScope);\n\t}\n\n\t/**\n\t * Checks if redirect uri is defined and not null.\n\t * @return {boolean}\n\t */\n\thasRedirectUri() {\n\t\treturn core.isDefAndNotNull(this.redirectUri);\n\t}\n\n\t/**\n\t * Checks if scope is defined and not null.\n\t * @return {boolean}\n\t */\n\thasScope() {\n\t\treturn core.isDefAndNotNull(this.scope);\n\t}\n\n\t/**\n\t * Makes authorization url.\n\t * @return {string=} Authorization url.\n\t */\n\tmakeAuthorizationUrl(opt_authUrl) {\n\t\tvar uri = new Uri(opt_authUrl);\n\n\t\turi.setPathname('/oauth/authorize');\n\n\t\tif (this.hasProvider()) {\n\t\t\turi.setParameterValue('provider', this.getProvider());\n\t\t}\n\t\tif (this.hasProviderScope()) {\n\t\t\turi.setParameterValue('provider_scope', this.getProviderScope());\n\t\t}\n\t\tif (this.hasRedirectUri()) {\n\t\t\turi.setParameterValue('redirect_uri', this.getRedirectUri());\n\t\t}\n\t\tif (this.hasScope()) {\n\t\t\turi.setParameterValue('scope', this.getScope());\n\t\t}\n\n\t\treturn uri.toString();\n\t}\n\n\t/**\n\t * Gets provider name.\n\t * @return {string=} Provider name.\n\t */\n\tgetProvider() {\n\t\treturn this.provider;\n\t}\n\n\t/**\n\t * Gets provider scope.\n\t * @return {string=} String with scopes.\n\t */\n\tgetProviderScope() {\n\t\treturn this.providerScope;\n\t}\n\n\t/**\n\t * Gets redirect uri.\n\t * @return {string=}.\n\t */\n\tgetRedirectUri() {\n\t\treturn this.redirectUri;\n\t}\n\n\t/**\n\t * Gets scope.\n\t * @return {string=} String with scopes.\n\t */\n\tgetScope() {\n\t\treturn this.scope;\n\t}\n\n\t/**\n\t * Sets provider scope.\n\t * @param {string=} scope Scope string. Separate by space for multiple\n\t *   scopes, e.g. \"scope1 scope2\".\n\t */\n\tsetProviderScope(providerScope) {\n\t\tassertStringIfDefAndNotNull(providerScope, 'Provider scope must be a string');\n\t\tthis.providerScope = providerScope;\n\t}\n\n\t/**\n\t * Sets redirect uri.\n\t * @param {string=} redirectUri.\n\t */\n\tsetRedirectUri(redirectUri) {\n\t\tassertStringIfDefAndNotNull(redirectUri, 'Redirect uri must be a string');\n\t\tthis.redirectUri = redirectUri;\n\t}\n\n\t/**\n\t * Sets scope.\n\t * @param {string=} scope Scope string. Separate by space for multiple\n\t *   scopes, e.g. \"scope1 scope2\".\n\t */\n\tsetScope(scope) {\n\t\tassertStringIfDefAndNotNull(scope, 'Scope must be a string');\n\t\tthis.scope = scope;\n\t}\n}\n\nfunction assertStringIfDefAndNotNull(value, errorMessage) {\n\tif (core.isDefAndNotNull(value) && !core.isString(value)) {\n\t\tthrow new Error(errorMessage);\n\t}\n}\n\nexport default AuthProvider;\n","'use strict';\n\nimport AuthProvider from './AuthProvider';\n\n/**\n * Facebook auth provider implementation.\n */\nclass FacebookAuthProvider extends AuthProvider {\n\t/**\n\t * Constructs an {@link FacebookAuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.provider = FacebookAuthProvider.PROVIDER;\n\t}\n}\n\nFacebookAuthProvider.PROVIDER = 'facebook';\n\nexport default FacebookAuthProvider;\n","'use strict';\n\nimport AuthProvider from './AuthProvider';\n\n/**\n * Github auth provider implementation.\n */\nclass GithubAuthProvider extends AuthProvider {\n\t/**\n\t * Constructs an {@link GithubAuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.provider = GithubAuthProvider.PROVIDER;\n\t}\n}\n\nGithubAuthProvider.PROVIDER = 'github';\n\nexport default GithubAuthProvider;\n","'use strict';\n\nimport AuthProvider from './AuthProvider';\n\n/**\n * Google auth provider implementation.\n */\nclass GoogleAuthProvider extends AuthProvider {\n\t/**\n\t * Constructs an {@link GoogleAuthProvider} instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.provider = GoogleAuthProvider.PROVIDER;\n\t}\n}\n\nGoogleAuthProvider.PROVIDER = 'google';\n\nexport default GoogleAuthProvider;\n","'use strict';\n\n/* jshint ignore:start */\n\n/**\n * Abstract interface for storing and retrieving data using some persistence\n * mechanism.\n * @constructor\n */\nclass StorageMechanism {\n\t/**\n\t * Clear all items from the data storage.\n\t */\n\tclear() {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Sets an item in the data storage.\n\t * @param {string} key The key to set.\n\t * @param {*} value The value to serialize to a string and save.\n\t */\n\tset(key, value) {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Gets an item from the data storage.\n\t * @param {string} key The key to get.\n\t * @return {*} Deserialized value or undefined if not found.\n\t */\n\tget(key) {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Returns the list of keys stored in the Storage object.\n\t * @param {!Array<string>} keys\n\t */\n\tkeys() {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Removes an item from the data storage.\n\t * @param {string} key The key to remove.\n\t */\n\tremove(key) {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Returns the number of data items stored in the Storage object.\n\t * @return {number}\n\t */\n\tsize() {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n}\n\nexport default StorageMechanism;\n\n/* jshint ignore:end */\n","'use strict';\n\nimport core from 'metal';\nimport StorageMechanism from './mechanism/StorageMechanism';\n\nclass Storage {\n\n\t/**\n\t * Provides a convenient API for data persistence using a selected data\n\t * storage mechanism.\n\t * @param {!StorageMechanism} mechanism The underlying storage mechanism.\n\t * @constructor\n\t */\n\tconstructor(mechanism) {\n\t\tassertMechanismDefAndNotNull(mechanism);\n\t\tassertMechanismIntanceOf(mechanism);\n\n\t\t/**\n\t\t * The mechanism used to persist key-value pairs.\n\t\t * @type {StorageMechanism}\n\t\t * @protected\n\t\t */\n\t\tthis.mechanism = mechanism;\n\t}\n\n\t/**\n\t * Clear all items from the data storage.\n\t */\n\tclear() {\n\t\tthis.mechanism.clear();\n\t}\n\n\t/**\n\t * Sets an item in the data storage.\n\t * @param {string} key The key to set.\n\t * @param {*} value The value to serialize to a string and save.\n\t */\n\tset(key, value) {\n\t\tif (!core.isDef(value)) {\n\t\t\tthis.mechanism.remove(key);\n\t\t\treturn;\n\t\t}\n\t\tthis.mechanism.set(key, JSON.stringify(value));\n\t}\n\n\t/**\n\t * Gets an item from the data storage.\n\t * @param {string} key The key to get.\n\t * @return {*} Deserialized value or undefined if not found.\n\t */\n\tget(key) {\n\t\tvar json;\n\t\ttry {\n\t\t\tjson = this.mechanism.get(key);\n\t\t} catch (e) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (core.isNull(json)) {\n\t\t\treturn undefined;\n\t\t}\n\t\ttry {\n\t\t\treturn JSON.parse(json);\n\t\t} catch (e) {\n\t\t\tthrow Storage.ErrorCode.INVALID_VALUE;\n\t\t}\n\t}\n\n\t/**\n\t * Returns the list of keys stored in the Storage object.\n\t * @param {!Array<string>} keys\n\t */\n\tkeys() {\n\t\treturn this.mechanism.keys();\n\t}\n\n\t/**\n\t * Removes an item from the data storage.\n\t * @param {string} key The key to remove.\n\t */\n\tremove(key) {\n\t\tthis.mechanism.remove(key);\n\t}\n\n\t/**\n\t * Returns the number of data items stored in the Storage object.\n\t * @return {number}\n\t */\n\tsize() {\n\t\treturn this.mechanism.size();\n\t}\n\n\t/**\n\t * Returns the list of values stored in the Storage object.\n\t * @param {!Array<string>} values\n\t */\n\tvalues() {\n\t\treturn this.keys().map((key) => this.get(key));\n\t}\n}\n\n/**\n * Errors thrown by the storage.\n * @enum {string}\n */\nStorage.ErrorCode = {\n\tINVALID_VALUE: 'Storage: Invalid value was encountered'\n};\n\nfunction assertMechanismDefAndNotNull(mechanism) {\n\tif (!core.isDefAndNotNull(mechanism)) {\n\t\tthrow Error('Storage mechanism is required');\n\t}\n}\n\nfunction assertMechanismIntanceOf(mechanism) {\n\tif (!(mechanism instanceof StorageMechanism)) {\n\t\tthrow Error('Storage mechanism must me an implementation of StorageMechanism');\n\t}\n}\n\nexport default Storage;\n","'use strict';\n\nimport StorageMechanism from './StorageMechanism';\n\n/**\n * Abstract interface for storing and retrieving data using some persistence\n * mechanism.\n * @constructor\n */\nclass LocalStorageMechanism extends StorageMechanism {\n\t/**\n\t * Returns reference for global local storage. by default\n\t */\n\tstorage() {\n\t\treturn LocalStorageMechanism.globals.localStorage;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tclear() {\n\t\tthis.storage().clear();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tkeys() {\n\t\treturn Object.keys(this.storage());\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tget(key) {\n\t\treturn this.storage().getItem(key);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tremove(key) {\n\t\tthis.storage().removeItem(key);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tset(key, value) {\n\t\tthis.storage().setItem(key, value);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tsize() {\n\t\treturn this.storage().length;\n\t}\n}\n\nLocalStorageMechanism.globals = {\n\tlocalStorage: window.localStorage\n};\n\nexport default LocalStorageMechanism;\n","'use strict';\n\nimport Storage from '../Storage';\nimport StorageMechanism from '../mechanism/StorageMechanism';\nimport LocalStorageMechanism from '../mechanism/LocalStorageMechanism';\n\nexport { Storage, StorageMechanism, LocalStorageMechanism };","'use strict';\n\nimport Auth from './Auth';\nimport FacebookAuthProvider from './FacebookAuthProvider';\nimport GithubAuthProvider from './GithubAuthProvider';\nimport globals from '../../globals/globals';\nimport GoogleAuthProvider from './GoogleAuthProvider';\nimport { Storage, LocalStorageMechanism } from 'metal-storage';\n\nimport { assertDefAndNotNull, assertFunction, assertObject, assertUserSignedIn, assertBrowserEnvironment, assertResponseSucceeded } from '../assertions';\n\n/**\n * Class responsible for encapsulate auth api calls.\n */\nclass AuthApiHelper {\n\t/**\n\t * Constructs an {@link AuthApiHelper} instance.\n\t * @constructor\n\t */\n\tconstructor(wedeployClient) {\n\t\tassertDefAndNotNull(wedeployClient, 'WeDeploy client reference must be specified');\n\n\t\tthis.currentUser = null;\n\t\tthis.onSignInCallback = null;\n\t\tthis.onSignOutCallback = null;\n\t\tthis.wedeployClient = wedeployClient;\n\t\tthis.storage = new Storage(new LocalStorageMechanism());\n\n\t\tthis.processSignIn_();\n\n\t\tthis.provider = {\n\t\t\tFacebook: FacebookAuthProvider,\n\t\t\tGoogle: GoogleAuthProvider,\n\t\t\tGithub: GithubAuthProvider\n\t\t};\n\t}\n\n\t/**\n\t * Creates user.\n\t * @param {!object} data The data to be used to create the user.\n\t * @return {CancellablePromise}\n\t */\n\tcreateUser(data) {\n\t\tassertObject(data, 'User data must be specified as object');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users')\n\t\t\t.post(data)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => this.makeUserAuthFromData(response.body()));\n\t}\n\n\t/**\n\t * Gets the current browser url without the fragment part.\n\t * @return {!string}\n\t * @protected\n\t */\n\tgetHrefWithoutFragment_() {\n\t\tvar location = globals.window.location;\n\t\treturn location.protocol + '//' + location.host + location.pathname + (location.search ? location.search : '');\n\t}\n\n\t/**\n\t * Gets the access token from the url fragment and removes it.\n\t * @return {?string}\n\t * @protected\n\t */\n\tgetRedirectAccessToken_() {\n\t\tif (globals.window) {\n\t\t\tvar fragment = globals.window.location.hash;\n\t\t\tif (fragment.indexOf('#access_token=') === 0) {\n\t\t\t\treturn fragment.substring(14);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets user by id.\n\t * @param {!string} userId\n\t * @return {CancellablePromise}\n\t */\n\tgetUser(userId) {\n\t\tassertDefAndNotNull(userId, 'User userId must be specified');\n\t\tassertUserSignedIn(this.currentUser);\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/users', userId)\n\t\t\t.auth(this.currentUser.token)\n\t\t\t.get()\n\t\t\t.then(response => assertResponseSucceeded(response));\n\t}\n\n\t/**\n\t * Loads current user. Requires a user token as argument.\n\t * @param {!string} token\n\t * @return {CancellablePromise}\n\t */\n\tloadCurrentUser(token) {\n\t\tassertDefAndNotNull(token, 'User token must be specified');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/user')\n\t\t\t.auth(token)\n\t\t\t.get()\n\t\t\t.then(response => {\n\t\t\t\tvar data = response.body();\n\t\t\t\tdata.token = token;\n\t\t\t\tthis.currentUser = this.makeUserAuthFromData(data);\n\t\t\t\tthis.storage.set('currentUser', data);\n\t\t\t\treturn this.currentUser;\n\t\t\t});\n\t}\n\n\t/**\n\t * Makes user Auth from data object.\n\t * @param {object} data\n\t * @return {Auth}\n\t * @protected\n\t */\n\tmakeUserAuthFromData(data) {\n\t\tvar auth = new Auth();\n\t\tauth.setWedeployClient(this.wedeployClient);\n\t\tauth.setCreatedAt(data.createdAt);\n\t\tauth.setEmail(data.email);\n\t\tauth.setId(data.id);\n\t\tauth.setName(data.name);\n\t\tauth.setPhotoUrl(data.photoUrl);\n\t\tauth.setToken(data.token);\n\t\treturn auth;\n\t}\n\n\t/**\n\t * Calls the on sign in callback if set.\n\t * @protected\n\t */\n\tmaybeCallOnSignInCallback_() {\n\t\tif (this.onSignInCallback) {\n\t\t\tthis.onSignInCallback.call(this, this.currentUser);\n\t\t}\n\t}\n\n\t/**\n\t * Calls the on sign out callback if set.\n\t * @protected\n\t */\n\tmaybeCallOnSignOutCallback_() {\n\t\tif (this.onSignOutCallback) {\n\t\t\tthis.onSignOutCallback.call(this, this.currentUser);\n\t\t}\n\t}\n\n\t/**\n\t * Fires passed callback when a user sign-in. Note that it keeps only the\n\t * last callback passed.\n\t * @param {!Function} callback\n\t */\n\tonSignIn(callback) {\n\t\tassertFunction(callback, 'Sign-in callback must be a function');\n\t\tthis.onSignInCallback = callback;\n\t}\n\n\t/**\n\t * Fires passed callback when a user sign-out. Note that it keeps only the\n\t * last callback passed.\n\t * @param {!Function} callback\n\t */\n\tonSignOut(callback) {\n\t\tassertFunction(callback, 'Sign-out callback must be a function');\n\t\tthis.onSignOutCallback = callback;\n\t}\n\n\t/**\n\t * Processes sign-in by detecting a presence of a fragment\n\t * <code>#access_token=</code> in the url or, alternatively, by local\n\t * storage current user.\n\t */\n\tprocessSignIn_() {\n\t\tvar redirectAccessToken = this.getRedirectAccessToken_();\n\t\tif (redirectAccessToken) {\n\t\t\tthis.removeUrlFragmentCompletely_();\n\t\t\tthis.loadCurrentUser(redirectAccessToken)\n\t\t\t\t.then(() => this.maybeCallOnSignInCallback_());\n\t\t\treturn;\n\t\t}\n\t\tvar currentUser = this.storage.get('currentUser');\n\t\tif (currentUser) {\n\t\t\tthis.currentUser = this.makeUserAuthFromData(currentUser);\n\t\t}\n\t}\n\n\t/**\n\t * Removes fragment from url by performing a push state to the current path.\n\t * @protected\n\t */\n\tremoveUrlFragmentCompletely_() {\n\t\tglobals.window.history.pushState({}, document.title, window.location.pathname + window.location.search);\n\t}\n\n\t/**\n\t * Sends password reset email to the specified email if found in database.\n\t * For security reasons call do not fail if email not found.\n\t * @param {!string} email\n\t * @return {CancellablePromise}\n\t */\n\tsendPasswordResetEmail(email) {\n\t\tassertDefAndNotNull(email, 'Send password reset email must be specified');\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/user/recover')\n\t\t\t.param('email', email)\n\t\t\t.post()\n\t\t\t.then(response => assertResponseSucceeded(response));\n\t}\n\n\t/**\n\t * Signs in using email and password.\n\t * @param {!string} email\n\t * @param {!string} password\n\t * @return {CancellablePromise}\n\t */\n\tsignInWithEmailAndPassword(email, password) {\n\t\tassertDefAndNotNull(email, 'Sign-in email must be specified');\n\t\tassertDefAndNotNull(password, 'Sign-in password must be specified');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/oauth/token')\n\t\t\t.param('grant_type', 'password')\n\t\t\t.param('username', email)\n\t\t\t.param('password', password)\n\t\t\t.get()\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => this.loadCurrentUser(response.body().access_token))\n\t\t\t.then((user) => {\n\t\t\t\tthis.maybeCallOnSignInCallback_();\n\t\t\t\treturn user;\n\t\t\t});\n\t}\n\n\t/**\n\t * Signs in with redirect. Some providers and environment may not support\n\t * this flow.\n\t * @param {AuthProvider} provider\n\t */\n\tsignInWithRedirect(provider) {\n\t\tassertBrowserEnvironment();\n\t\tassertDefAndNotNull(provider, 'Sign-in provider must be defined');\n\t\tassertSupportedProvider(provider);\n\n\t\tif (!provider.hasRedirectUri()) {\n\t\t\tprovider.setRedirectUri(this.getHrefWithoutFragment_());\n\t\t}\n\t\tglobals.window.location.href = provider.makeAuthorizationUrl(this.wedeployClient.authUrl_);\n\t}\n\n\t/**\n\t * Signs out <code>currentUser</code> and removes from <code>localStorage</code>.\n\t * @return {[type]} [description]\n\t */\n\tsignOut() {\n\t\tassertUserSignedIn(this.currentUser);\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.authUrl_)\n\t\t\t.path('/oauth/revoke')\n\t\t\t.param('token', this.currentUser.token)\n\t\t\t.get()\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => {\n\t\t\t\tthis.maybeCallOnSignOutCallback_();\n\t\t\t\tthis.unloadCurrentUser_();\n\t\t\t\treturn response;\n\t\t\t});\n\t}\n\n\t/**\n\t * Unloads all information for <code>currentUser</code> and removes from\n\t * <code>localStorage</code> if present.\n\t * @return {[type]} [description]\n\t */\n\tunloadCurrentUser_() {\n\t\tthis.currentUser = null;\n\t\tthis.storage.remove('currentUser');\n\t}\n}\n\nfunction assertSupportedProvider(provider) {\n\tswitch (provider.constructor.PROVIDER) {\n\t\tcase FacebookAuthProvider.PROVIDER:\n\t\tcase GithubAuthProvider.PROVIDER:\n\t\tcase GoogleAuthProvider.PROVIDER:\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('Sign-in provider not supported');\n\t}\n}\n\nexport default AuthApiHelper;\n","'use strict';\n\nimport Query from '../../api-query/Query';\nimport Filter from '../../api-query/Filter';\nimport { assertNotNull, assertObject, assertDefAndNotNull, assertResponseSucceeded } from '../assertions';\nimport { core } from 'metal';\n\n/**\n * Class responsible for encapsulate data api calls.\n */\nclass DataApiHelper {\n\t/**\n\t * Constructs an {@link DataApiHelper} instance.\n\t * @param {@link WeDeploy} instance.\n\t * @constructor\n\t */\n\tconstructor(wedeployClient) {\n\t\tassertDefAndNotNull(wedeployClient, 'WeDeploy client reference must be specified');\n\t\tthis.wedeployClient = wedeployClient;\n\t}\n\n\t/**\n\t * Adds a filter to this request's {@link Query}.\n\t * @param {!Filter|string} fieldOrFilter Either a Filter instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainable\n\t */\n\twhere(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tthis.getOrCreateFilter_().and(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"or\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or\n\t *   the name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tor(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tif (this.getOrCreateFilter_().body().and.length === 0) {\n\t\t\tthrow Error('It\\'s required to have a condition before using an \\'or()\\' for the first time.');\n\t\t}\n\t\tthis.getOrCreateFilter_().or(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"none\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} args A variable amount of values to be used with\n\t * the \"none\" operator. Can be passed either as a single array or as\n\t * separate params.\n\t * @chainnable\n\t */\n\tnone(field, ...args) {\n\t\treturn this.where(Filter.none(field, args));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"match\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t * should be the query string, in which case all fields will be matched.\n\t * Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @chainnable\n\t */\n\tmatch(field, value) {\n\t\treturn this.where(Filter.match(field, value));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"similar\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t * should be the query string, in which case all fields will be matched.\n\t * Otherwise, this should be the name of the field to match.\n\t * @param {?string} query The query string.\n\t * @chainnable\n\t */\n\tsimilar(fieldOrQuery, query) {\n\t\treturn this.where(Filter.similar(fieldOrQuery, query));\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tlt(field, value) {\n\t\treturn this.where(Filter.lt(field, value));\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tlte(field, value) {\n\t\treturn this.where(Filter.lte(field, value));\n\t}\n\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"any\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} args A variable amount of values to be used with\n\t * the \"none\" operator. Can be passed either as a single array or as\n\t * separate params.\n\t * @chainnable\n\t */\n\tany(field, ...args) {\n\t\treturn this.where(Filter.any(field, args));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"gp\" operator. This is a\n\t * special use case of `Filter.polygon` for bounding boxes.\n\t * @param {string} field The field's name.\n\t * @param {*} boxOrUpperLeft Either a `Geo.BoundingBox` instance, or a\n\t * bounding box's upper left coordinate.\n\t * @param {*=} opt_lowerRight A bounding box's lower right coordinate.\n\t * @chainnable\n\t */\n\tboundingBox(field, boxOrUpperLeft, opt_lowerRight) {\n\t\treturn this.where(Filter.boundingBox(field, boxOrUpperLeft, opt_lowerRight));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"gd\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} locationOrCircle Either a `Geo.Circle` instance or a\n\t * coordinate.\n\t * @param {Range|string=} opt_rangeOrDistance Either a `Range` instance or\n\t * the distance value.\n\t * @return {!Filter}\n\t * @chainnable\n\t */\n\tdistance(field, locationOrCircle, opt_rangeOrDistance) {\n\t\treturn this.where(Filter.distance(field, locationOrCircle, opt_rangeOrDistance));\n\t}\n\n\t/**\n\t * Adds a filter to be compose with this filter using \"range\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} rangeOrMin Either a `Range` instance or a the range's min\n\t * value.\n\t * @param {*=} opt_max The range's max value.\n\t * @return {!Filter}\n\t * @chainnable\n\t */\n\trange(field, rangeOrMin, opt_max) {\n\t\treturn this.where(Filter.range(field, rangeOrMin, opt_max));\n\t}\n\n\t/**\n\t * Sets the limit for this request's {@link Query}.\n\t * @param {number} limit The max amount of entries that this request should return.\n\t * @chainable\n\t */\n\tlimit(limit) {\n\t\tthis.getOrCreateQuery_().limit(limit);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the offset for this request's {@link Query}.\n\t * @param {number} offset The index of the first entry that should be\n\t * returned by this query.\n\t * @chainable\n\t */\n\toffset(offset) {\n\t\tthis.getOrCreateQuery_().offset(offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a highlight entry to this request's {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @chainable\n\t */\n\thighlight(field) {\n\t\tthis.getOrCreateQuery_().highlight(field);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an {@link\n\t * Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @chainable\n\t */\n\taggregate(name, aggregationOrField, opt_operator) {\n\t\tthis.getOrCreateQuery_().aggregate(name, aggregationOrField, opt_operator);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this request's query type to 'count'.\n\t * @chainnable\n\t */\n\tcount() {\n\t\tthis.getOrCreateQuery_().type('count');\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a sort query to this request's body.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should\n\t * use. If none is given, 'asc' is used by default.\n\t * @chainnable\n\t */\n\torderBy(field, opt_direction) {\n\t\tthis.getOrCreateQuery_().sort(field, opt_direction);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates an object (or multiple objects) and saves it to WeDeploy data. If\n\t * there's a validation registered in the collection and the request is\n\t * successful, the resulting object (or array of objects) is returned. The\n\t * data parameter can be either an Object or an Array of Objects.\n\t * These Objects describe the attributes on the objects that are to be created.\n\t * ```javascript\n\t * var data = WeDeploy.data('http://demodata.wedeploy.io');\n\t *\n\t * data.create('movies', {'title'=> 'Star Wars: Episode I – The Phantom Menace'})\n\t * \t\t .then(function(movie){\n\t * \t\t\t console.log(movie)\n\t *     });\n\t *\n\t * data.create('movies', [{'title'=> 'Star Wars: Episode II – Attack of the Clones'},\n\t * \t\t\t\t\t\t\t\t\t\t\t\t{'title'=> 'Star Wars: Episode III – Revenge of the Sith'})\n\t * \t\t .then(function(movies){\n\t * \t\t\t console.log(movies)\n\t *     });\n\t * ```\n\t * @param {string} collection Collection (key) used to create the new data.\n\t * @param {Object} data Attributes on the object that is to be created.\n\t * @return {!CancellablePromise}\n\t */\n\tcreate(collection, data) {\n\t\tassertNotNull(collection, 'Collection key must be specified.');\n\t\tassertObject(data, 'Data can\\'t be empty.');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.path(collection)\n\t\t\t.post(data)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Update the attributes of a document form the passed-in object and saves\n\t * the record. If the object is invalid, the saving will fail and an error\n\t * object will be returned.\n\t *\n\t * ```javascript\n\t * var data = WeDeploy.data('http://demodata.wedeploy.io');\n\t *\n\t * data.update('movies/1019112353', {'title'=> 'Star Wars: Episode I'})\n\t * \t\t .then(function(movie){\n\t * \t\t\t console.log(movie)\n\t *     });\n\t * ```\n\t * @param {string} document Key used to update the document.\n\t * @param {Object} data Attributes on the object that is to be updated.\n\t * @return {!CancellablePromise}\n\t */\n\tupdate(document, data) {\n\t\tassertNotNull(document, 'Document key must be specified.');\n\t\tassertObject(data, 'Data must be specified.');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.path(document)\n\t\t\t.put(data)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Deletes a [document/field/collection].\n\t * @param {string} key Key used to delete the\n\t * document/field/collection.\n\t * @return {!CancellablePromise}\n\t */\n\tdelete(key) {\n\t\tassertNotNull(key, 'Document/Field/Collection key must be specified');\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.path(key)\n\t\t\t.delete()\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(() => undefined);\n\t}\n\n\t/**\n\t * Retrieve data from a [document/field/collection].\n\t * @param {string} key Key used to delete the document/field/collection.\n\t * @return {!CancellablePromise}\n\t */\n\tget(key) {\n\t\tassertNotNull(key, 'Document/Field/Collection key must be specified');\n\n\t\tthis.addFiltersToQuery_();\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.path(key)\n\t\t\t.get(this.query_)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Retrieve data from a [document/field/collection] and put it in a search\n\t * format.\n\t * @param {string} key Key used to delete the document/field/collection.\n\t * @return {!CancellablePromise}\n\t */\n\tsearch(key) {\n\t\tassertNotNull(key, 'Document/Field/Collection key must be specified');\n\n\t\tthis.onSearch_();\n\n\t\tthis.addFiltersToQuery_();\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.path(key)\n\t\t\t.get(this.query_)\n\t\t\t.then(response => assertResponseSucceeded(response))\n\t\t\t.then(response => response.body());\n\t}\n\n\t/**\n\t * Creates new socket.io instance. Monitor the arrival of new broadcasted\n\t * data.\n\t * @param  {string} collection key/collection used to find organized data.\n\t * @param  {Object=} opt_options Object with Socket IO options.\n\t * @return {!io} Socket IO reference. Server events can be listened on it.\n\t */\n\twatch(collection, opt_options) {\n\t\tassertNotNull(collection, 'Collection key must be specified');\n\n\t\tthis.addFiltersToQuery_();\n\n\t\treturn this.wedeployClient\n\t\t\t.url(this.wedeployClient.dataUrl_)\n\t\t\t.path(collection)\n\t\t\t.watch(this.query_, opt_options);\n\t}\n\n\t/**\n\t * Gets the currentl used main {@link Filter} object. If none exists yet, a\n\t * new one is created.\n\t * @return {!Query}\n\t * @protected\n\t */\n\tgetOrCreateFilter_() {\n\t\tif (!this.filter_) {\n\t\t\tthis.filter_ = new Filter();\n\t\t}\n\t\treturn this.filter_;\n\t}\n\n\t/**\n\t * Gets the currently used {@link Query} object. If none exists yet,\n\t * a new one is created.\n\t * @return {!Query}\n\t * @protected\n\t */\n\tgetOrCreateQuery_() {\n\t\tif (!this.query_) {\n\t\t\tthis.query_ = new Query();\n\t\t}\n\t\treturn this.query_;\n\t}\n\n\t/**\n\t * Load the currently used main {@link Filter} object into the currently\n\t * used {@link Query}.\n\t * @chainable\n\t * @protected\n\t */\n\taddFiltersToQuery_() {\n\t\tif (core.isDef(this.filter_) && this.toSearch_ !== true) {\n\t\t\tthis.getOrCreateQuery_().filter(this.filter_);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a search to this request's {@link Query} instance.\n\t * @chainable\n\t * @protected\n\t */\n\tonSearch_() {\n\t\tif (core.isDef(this.filter_)) {\n\t\t\tthis.getOrCreateQuery_().search(this.getOrCreateFilter_());\n\t\t} else {\n\t\t\tthrow Error('It\\'s required to have a condition before using an \\'search()\\' for the first time.');\n\t\t}\n\t\tthis.toSearch_ = true;\n\t\treturn this;\n\t}\n\n}\n\nexport default DataApiHelper;\n","'use strict';\n\nimport globals from '../globals/globals';\nimport { core } from 'metal';\nimport Auth from './auth/Auth';\nimport AuthApiHelper from './auth/AuthApiHelper';\nimport DataApiHelper from './data/DataApiHelper';\nimport Base64 from '../crypt/Base64';\nimport Embodied from '../api-query/Embodied';\nimport Query from '../api-query/Query';\nimport Filter from '../api-query/Filter';\nimport TransportFactory from './TransportFactory';\nimport ClientRequest from './ClientRequest';\nimport { MultiMap } from 'metal-structs';\nimport Uri from 'metal-uri';\nimport { assertUriWithNoPath } from './assertions';\n\n\nvar io;\n\n// Optimistic initialization of `io` reference from global `globals.window.io`.\nif (typeof globals.window !== 'undefined') {\n\tio = globals.window.io;\n}\n\n/**\n * The main class for making api requests. Sending requests returns a promise\n * that is resolved when the response arrives. Usage example:\n * ```javascript\n * WeDeploy\n *   .url('/data/tasks')\n *   .post({desc: 'Buy milkl'})\n *   .then(function(response) {\n *     // Handle response here.\n *     console.log(response.body())\n *   });\n * ```\n */\nclass WeDeploy {\n\t/**\n\t * WeDeploy constructor function.\n\t * @param {string} url The base url.\n\t * @param {...string} paths Any amount of paths to be appended to the base\n\t * url.\n\t * @constructor\n\t */\n\tconstructor(url, ...paths) {\n\t\tif (arguments.length === 0) {\n\t\t\tthrow new Error('Invalid arguments, try `new WeDeploy(baseUrl, url)`');\n\t\t}\n\n\t\tthis.auth_ = null;\n\t\tthis.body_ = null;\n\t\tthis.url_ = Uri.joinPaths(url || '', ...paths);\n\t\tthis.headers_ = new MultiMap();\n\t\tthis.params_ = new MultiMap();\n\t\tthis.withCredentials_ = true;\n\n\t\tthis.header('Content-Type', 'application/json');\n\t\tthis.header('X-Requested-With', 'XMLHttpRequest');\n\t}\n\n\t/**\n\t * Static factory for creating WeDeploy data for the given url.\n\t * @param {string=} opt_dataUrl The url that points to the data services.\n\t * @return @return {data} WeDeploy data instance.\n\t */\n\tstatic data(opt_dataUrl) {\n\t\tassertUriWithNoPath(opt_dataUrl, 'The data url should not have a path');\n\n\t\tif (core.isString(opt_dataUrl)) {\n\t\t\tWeDeploy.dataUrl_ = opt_dataUrl;\n\t\t}\n\t\tif (!WeDeploy.data_) {\n\t\t\tWeDeploy.data_ = new DataApiHelper(WeDeploy);\n\t\t}\n\t\treturn WeDeploy.data_;\n\t}\n\n\t/**\n\t * Adds authorization information to this request.\n\t * @param {!Auth|string} authOrTokenOrEmail Either an {@link Auth} instance,\n\t * an authorization token, or the email.\n\t * @param {string=} opt_password If a email is given as the first param,\n\t * this should be the password.\n\t * @chainable\n\t */\n\tauth(authOrTokenOrEmail, opt_password) {\n\t\tthis.auth_ = authOrTokenOrEmail;\n\t\tif (!(this.auth_ instanceof Auth)) {\n\t\t\tthis.auth_ = Auth.create(authOrTokenOrEmail, opt_password);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Static factory for creating WeDeploy auth for the given url.\n\t * @param {string=} opt_authUrl The url that points to the auth service.\n\t */\n\tstatic auth(opt_authUrl) {\n\t\tif (core.isString(opt_authUrl)) {\n\t\t\tWeDeploy.authUrl_ = opt_authUrl;\n\t\t}\n\t\tif (!WeDeploy.auth_) {\n\t\t\tWeDeploy.auth_ = new AuthApiHelper(WeDeploy);\n\t\t}\n\t\treturn WeDeploy.auth_;\n\t}\n\n\t/**\n\t * Sets the body that will be sent with this request.\n\t * @param {*} body\n\t * @chainable\n\t */\n\tbody(body) {\n\t\tthis.body_ = body;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Converts the given body object to query params.\n\t * @param {!ClientRequest} clientRequest Client request.\n\t * @param {*} body\n\t * @protected\n\t */\n\tconvertBodyToParams_(clientRequest, body) {\n\t\tif (core.isString(body)) {\n\t\t\tbody = {\n\t\t\t\tbody: body\n\t\t\t};\n\t\t} else if (body instanceof Embodied) {\n\t\t\tbody = body.body();\n\t\t}\n\t\tObject.keys(body || {}).forEach(name => clientRequest.param(name, body[name]));\n\t}\n\n\t/**\n\t * Creates client request and encode.\n\t * @param {string} method\n\t * @param {*} body\n\t * @return {!ClientRequest} Client request.\n\t * @protected\n\t */\n\tcreateClientRequest_(method, body) {\n\t\tconst clientRequest = new ClientRequest();\n\n\t\tclientRequest.body(body || this.body_);\n\n\t\tif (!core.isDefAndNotNull(clientRequest.body())) {\n\t\t\tif (this.formData_) {\n\t\t\t\tclientRequest.body(this.formData_);\n\t\t\t}\n\t\t}\n\n\t\tclientRequest.method(method);\n\t\tclientRequest.headers(this.headers());\n\t\tclientRequest.params(this.params());\n\t\tclientRequest.url(this.url());\n\t\tclientRequest.withCredentials(this.withCredentials_);\n\n\t\tthis.encode(clientRequest);\n\n\t\treturn clientRequest;\n\t}\n\n\t/**\n\t * Decodes clientResponse body, parsing the body for example.\n\t * @param {!ClientResponse} clientResponse The response object to be\n\t * decoded.\n\t * @return {!ClientResponse} The decoded response.\n\t */\n\tdecode(clientResponse) {\n\t\tif (WeDeploy.isContentTypeJson(clientResponse)) {\n\t\t\ttry {\n\t\t\t\tclientResponse.body(JSON.parse(clientResponse.body()));\n\t\t\t} catch (err) {}\n\t\t}\n\t\treturn clientResponse;\n\t}\n\n\t/**\n\t * Sends message with the DELETE http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tdelete(opt_body) {\n\t\treturn this.sendAsync('DELETE', opt_body);\n\t}\n\n\t/**\n\t * Encodes the given {@link ClientRequest}, converting its body to an\n\t * appropriate format for example.\n\t * @param {!ClientRequest} clientRequest The request object to encode.\n\t * @return {!ClientRequest} The encoded request.\n\t */\n\tencode(clientRequest) {\n\t\tlet body = clientRequest.body();\n\n\t\tif (core.isElement(body)) {\n\t\t\tbody = new FormData(body);\n\t\t\tclientRequest.body(body);\n\t\t}\n\n\t\tbody = this.maybeWrapWithQuery_(body);\n\t\tif (clientRequest.method() === 'GET') {\n\t\t\tthis.convertBodyToParams_(clientRequest, body);\n\t\t\tclientRequest.removeBody();\n\t\t\tbody = null;\n\t\t}\n\n\t\tif (typeof FormData !== 'undefined' && body instanceof FormData) {\n\t\t\tclientRequest.headers().remove('content-type');\n\t\t} else if (body instanceof Embodied) {\n\t\t\tclientRequest.body(body.toString());\n\t\t} else if (WeDeploy.isContentTypeJson(clientRequest)) {\n\t\t\tclientRequest.body(JSON.stringify(clientRequest.body()));\n\t\t}\n\n\t\tthis.encodeParams_(clientRequest);\n\t\tthis.resolveAuthentication_(clientRequest);\n\n\t\treturn clientRequest;\n\t}\n\n\t/**\n\t * Encodes the params for the given request, according to their types.\n\t * @param {!ClientRequest} clientRequest\n\t * @protected\n\t */\n\tencodeParams_(clientRequest) {\n\t\tlet params = clientRequest.params();\n\t\tparams.names().forEach(function(name) {\n\t\t\tlet values = params.getAll(name);\n\t\t\tvalues.forEach(function(value, index) {\n\t\t\t\tif (value instanceof Embodied) {\n\t\t\t\t\tvalue = value.toString();\n\t\t\t\t} else if (core.isObject(value) || (value instanceof Array)) {\n\t\t\t\t\tvalue = JSON.stringify(value);\n\t\t\t\t}\n\t\t\t\tvalues[index] = value;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Adds a key/value pair to be sent via the body in a `multipart/form-data` format.\n\t * If the body is set by other means (for example, through the `body` method), this\n\t * will be ignored.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tform(name, value) {\n\t\tif (typeof FormData === 'undefined') {\n\t\t\tthrow new Error('form() is only available when FormData API is available.');\n\t\t}\n\n\t\tif (!this.formData_) {\n\t\t\tthis.formData_ = new FormData();\n\t\t}\n\t\tthis.formData_.append(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sends message with the GET http verb.\n\t * @param {*=} opt_params Params to be added to the request url.\n\t * @return {!CancellablePromise}\n\t */\n\tget(opt_params) {\n\t\treturn this.sendAsync('GET', opt_params);\n\t}\n\n\t/**\n\t * Adds a header. If the header with the same name already exists, it will\n\t * not be overwritten, but new value will be stored. The order is preserved.\n\t * @param {string} name Header key.\n\t * @param {*} value Header value.\n\t * @chainable\n\t */\n\theader(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.headers_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the headers.\n\t * @return {!MultiMap}\n\t */\n\theaders() {\n\t\treturn this.headers_;\n\t}\n\n\t/**\n\t * Wraps the given `Embodied` instance with a {@link Query} instance if needed.\n\t * @param {Embodied} embodied\n\t * @return {Embodied}\n\t * @protected\n\t */\n\tmaybeWrapWithQuery_(embodied) {\n\t\tif (embodied instanceof Filter) {\n\t\t\tembodied = Query.filter(embodied);\n\t\t}\n\t\treturn embodied;\n\t}\n\n\t/**\n\t * Adds a query. If the query with the same name already exists, it will not\n\t * be overwritten, but new value will be stored. The order is preserved.\n\t * @param {string} name Param key.\n\t * @param {*} value Param value.\n\t * @chainable\n\t */\n\tparam(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.params_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the query strings map.\n\t * @return {!MultiMap}\n\t */\n\tparams() {\n\t\treturn this.params_;\n\t}\n\n\t/**\n\t * Sends message with the PATCH http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tpatch(opt_body) {\n\t\treturn this.sendAsync('PATCH', opt_body);\n\t}\n\n\t/**\n\t * Creates a new {@link WeDeploy} instance for handling the url resulting in the\n\t * union of the current url with the given paths.\n\t * @param {...string} paths Any number of paths.\n\t * @return {!WeDeploy} A new {@link WeDeploy} instance for handling the given paths.\n\t */\n\tpath(...paths) {\n\t\treturn new WeDeploy(this.url(), ...paths).use(this.customTransport_);\n\t}\n\n\t/**\n\t * Sends message with the POST http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tpost(opt_body) {\n\t\treturn this.sendAsync('POST', opt_body);\n\t}\n\n\t/**\n\t * Sends message with the PUT http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tput(opt_body) {\n\t\treturn this.sendAsync('PUT', opt_body);\n\t}\n\n\t/**\n\t * Adds the authentication information to the request.\n\t * @param {!ClientRequest} clientRequest\n\t * @protected\n\t */\n\tresolveAuthentication_(clientRequest) {\n\t\tif (!this.auth_) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.auth_.hasToken()) {\n\t\t\tclientRequest.header('Authorization', 'Bearer ' + this.auth_.token);\n\t\t} else {\n\t\t\tconst credentials = this.auth_.email + ':' + this.auth_.password;\n\t\t\tclientRequest.header('Authorization', 'Basic ' + Base64.encodeString(credentials));\n\t\t}\n\t}\n\n\t/**\n\t * Uses transport to send request with given method name and body\n\t * asynchronously.\n\t * @param {string} method The HTTP method to be used when sending data.\n\t * @param {string} body Content to be sent as the request's body.\n\t * @return {!CancellablePromise} Deferred request.\n\t */\n\tsendAsync(method, body) {\n\t\tconst transport = this.customTransport_ || TransportFactory.instance().getDefault();\n\n\t\tconst clientRequest = this.createClientRequest_(method, body);\n\n\t\treturn transport.send(clientRequest).then(this.decode);\n\t}\n\n\t/**\n\t * Sets the socket transport\n\t * @param {Object} socket implementation object.\n\t */\n\tstatic socket(socket) {\n\t\tio = socket;\n\t}\n\n\t/**\n\t * Static factory for creating WeDeploy client for the given url.\n\t * @param {string} url The url that the client should use for sending requests.\n\t */\n\tstatic url(url) {\n\t\treturn new WeDeploy(url).use(this.customTransport_);\n\t}\n\n\t/**\n\t * Returns the URL used by this client.\n\t */\n\turl() {\n\t\treturn this.url_;\n\t}\n\n\t/**\n\t * Specifies {@link Transport} implementation.\n\t * @param {!Transport} transport The transport implementation that should be\n\t * used.\n\t */\n\tuse(transport) {\n\t\tthis.customTransport_ = transport;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates new socket.io instance. The parameters passed to socket.io\n\t * constructor will be provided:\n\t *\n\t * ```javascript\n\t * WeDeploy.url('http://domain:8080/path/a').watch({id: 'myId'}, {foo: true});\n\t * // Equals:\n\t * io('domain:8080/?url=path%2Fa%3Fid%3DmyId', {foo: true});\n\t * ```\n\t *\n\t * @param {Object=} opt_params Params to be sent with the Socket IO request.\n\t * @param {Object=} opt_options Object with Socket IO options.\n\t * @return {!io} Socket IO reference. Server events can be listened on it.\n\t */\n\twatch(opt_params, opt_options) {\n\t\tif (typeof io === 'undefined') {\n\t\t\tthrow new Error('Socket.io client not loaded');\n\t\t}\n\n\t\tconst clientRequest = this.createClientRequest_('GET', opt_params);\n\t\tconst uri = new Uri(clientRequest.url());\n\t\turi.addParametersFromMultiMap(clientRequest.params());\n\n\t\topt_options = opt_options || {\n\t\t\tforceNew: true\n\t\t};\n\t\topt_options.query = 'url=' + encodeURIComponent(uri.getPathname() + uri.getSearch());\n\t\topt_options.path = opt_options.path || uri.getPathname();\n\n\t\treturn io(uri.getHost(), opt_options);\n\t}\n}\n\nWeDeploy.isContentTypeJson = function(clientMessage) {\n\tconst contentType = clientMessage.headers().get('content-type') || '';\n\treturn contentType.indexOf('application/json') === 0;\n};\n\nWeDeploy.auth_ = null;\nWeDeploy.authUrl_ = '';\nWeDeploy.data_ = null;\nWeDeploy.dataUrl_ = '';\n\nexport default WeDeploy;\n","'use strict';\n\nimport globals from '../globals/globals';\nimport Filter from '../api-query/Filter';\nimport Geo from '../api-query/Geo';\nimport WeDeploy from '../api/WeDeploy';\nimport Query from '../api-query/Query';\nimport Range from '../api-query/Range';\n\nglobals.window.Filter = Filter;\nglobals.window.Geo = Geo;\nglobals.window.Query = Query;\nglobals.window.Range = Range;\nglobals.window.WeDeploy = WeDeploy;\n"],"sourceRoot":"/source/"}