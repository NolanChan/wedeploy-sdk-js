{"version":3,"sources":["core.js","array.js","async.js","Disposable.js","object.js","string.js","metal.js","Auth.js","MultiMap.js","ClientMessage.js","ClientRequest.js","ClientResponse.js","Base64.js","Embodied.js","FilterBody.js","Geo.js","Range.js","Filter.js","Aggregation.js","Query.js","parseFromAnchor.js","parse.js","Uri.js","Promise.js","Ajax.js","Transport.js","AjaxTransport.js","TransportFactory.js","Launchpad.js","browser.js"],"names":[],"mappings":"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","file":"api.js","sourcesContent":["'use strict';\n\n/**\n * A collection of core utility functions.\n * @const\n */\nclass core {\n\t/**\n\t * When defining a class Foo with an abstract method bar(), you can do:\n\t * Foo.prototype.bar = core.abstractMethod\n\t *\n\t * Now if a subclass of Foo fails to override bar(), an error will be thrown\n\t * when bar() is invoked.\n\t *\n\t * @type {!Function}\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic abstractMethod() {\n\t\tthrow Error('Unimplemented abstract method');\n\t}\n\n\t/**\n\t * Loops constructor super classes collecting its properties values. If\n\t * property is not available on the super class `undefined` will be\n\t * collected as value for the class hierarchy position.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @return {Array.<*>} Array of collected values.\n\t * TODO(*): Rethink superclass loop.\n\t */\n\tstatic collectSuperClassesProperty(constructor, propertyName) {\n\t\tvar propertyValues = [constructor[propertyName]];\n\t\twhile (constructor.__proto__ && !constructor.__proto__.isPrototypeOf(Function)) {\n\t\t\tconstructor = constructor.__proto__;\n\t\t\tpropertyValues.push(constructor[propertyName]);\n\t\t}\n\t\treturn propertyValues;\n\t}\n\n\t/**\n\t * Gets the name of the given function. If the current browser doesn't\n\t * support the `name` property, this will calculate it from the function's\n\t * content string.\n\t * @param {!function()} fn\n\t * @return {string}\n\t */\n\tstatic getFunctionName(fn) {\n\t\tif (!fn.name) {\n\t\t\tvar str = fn.toString();\n\t\t\tfn.name = str.substring(9, str.indexOf('('));\n\t\t}\n\t\treturn fn.name;\n\t}\n\n\t/**\n\t * Gets an unique id. If `opt_object` argument is passed, the object is\n\t * mutated with an unique id. Consecutive calls with the same object\n\t * reference won't mutate the object again, instead the current object uid\n\t * returns. See {@link core.UID_PROPERTY}.\n\t * @type {opt_object} Optional object to be mutated with the uid. If not\n\t *     specified this method only returns the uid.\n\t * @throws {Error} when invoked to indicate the method should be overridden.\n\t */\n\tstatic getUid(opt_object) {\n\t\tif (opt_object) {\n\t\t\treturn opt_object[core.UID_PROPERTY] ||\n\t\t\t\t(opt_object[core.UID_PROPERTY] = core.uniqueIdCounter_++);\n\t\t}\n\t\treturn core.uniqueIdCounter_++;\n\t}\n\n\t/**\n\t * The identity function. Returns its first argument.\n\t * @param {*=} opt_returnValue The single value that will be returned.\n\t * @return {?} The first argument.\n\t */\n\tstatic identityFunction(opt_returnValue) {\n\t\treturn opt_returnValue;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a boolean.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is boolean.\n\t */\n\tstatic isBoolean(val) {\n\t\treturn typeof val === 'boolean';\n\t}\n\n\t/**\n\t * Returns true if the specified value is not undefined.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is defined.\n\t */\n\tstatic isDef(val) {\n\t\treturn val !== undefined;\n\t}\n\n\t/**\n\t * Returns true if value is not undefined or null.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isDefAndNotNull(val) {\n\t\treturn core.isDef(val) && !core.isNull(val);\n\t}\n\n\t/**\n\t * Returns true if value is a document.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isDocument(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 9;\n\t}\n\n\t/**\n\t * Returns true if value is a dom element.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isElement(val) {\n\t\treturn val && typeof val === 'object' && val.nodeType === 1;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a function.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a function.\n\t */\n\tstatic isFunction(val) {\n\t\treturn typeof val === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is null.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isNull(val) {\n\t\treturn val === null;\n\t}\n\n\t/**\n\t * Returns true if the specified value is a number.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is a number.\n\t */\n\tstatic isNumber(val) {\n\t\treturn typeof val === 'number';\n\t}\n\n\t/**\n\t * Returns true if value is a window.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isWindow(val) {\n\t\treturn val !== null && val === val.window;\n\t}\n\n\t/**\n\t * Returns true if the specified value is an object. This includes arrays\n\t * and functions.\n\t * @param {?} val Variable to test.\n\t * @return {boolean} Whether variable is an object.\n\t */\n\tstatic isObject(val) {\n\t\tvar type = typeof val;\n\t\treturn type === 'object' && val !== null || type === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is a Promise.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isPromise(val) {\n\t\treturn val && typeof val === 'object' && typeof val.then === 'function';\n\t}\n\n\t/**\n\t * Returns true if value is a string.\n\t * @param {*} val\n\t * @return {Boolean}\n\t */\n\tstatic isString(val) {\n\t\treturn typeof val === 'string';\n\t}\n\n\t/**\n\t * Merges the values of a static property a class with the values of that\n\t * property for all its super classes, and stores it as a new static\n\t * property of that class. If the static property already existed, it won't\n\t * be recalculated.\n\t * @param {!function()} constructor Class constructor.\n\t * @param {string} propertyName Property name to be collected.\n\t * @param {function(*, *):*=} opt_mergeFn Function that receives an array filled\n\t *   with the values of the property for the current class and all its super classes.\n\t *   Should return the merged value to be stored on the current class.\n\t * @return {boolean} Returns true if merge happens, false otherwise.\n\t */\n\tstatic mergeSuperClassesProperty(constructor, propertyName, opt_mergeFn) {\n\t\tvar mergedName = propertyName + '_MERGED';\n\t\tif (constructor.hasOwnProperty(mergedName)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar merged = core.collectSuperClassesProperty(constructor, propertyName);\n\t\tif (opt_mergeFn) {\n\t\t\tmerged = opt_mergeFn(merged);\n\t\t}\n\t\tconstructor[mergedName] = merged;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Null function used for default values of callbacks, etc.\n\t * @return {void} Nothing.\n\t */\n\tstatic nullFunction() {}\n}\n\n/**\n * Unique id property prefix.\n * @type {String}\n * @protected\n */\ncore.UID_PROPERTY = 'core_' + ((Math.random() * 1e9) >>> 0);\n\n/**\n * Counter for unique id.\n * @type {Number}\n * @private\n */\ncore.uniqueIdCounter_ = 1;\n\nexport default core;\n","'use strict';\n\nimport core from '../core';\n\nclass array {\n\t/**\n\t * Checks if the given arrays have the same content.\n\t * @param {!Array<*>} arr1\n\t * @param {!Array<*>} arr2\n\t * @return {boolean}\n\t */\n\tstatic equal(arr1, arr2) {\n\t\tif (arr1.length !== arr2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] !== arr2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Returns the first value in the given array that isn't undefined.\n\t * @param {!Array} arr\n\t * @return {*}\n\t */\n\tstatic firstDefinedValue(arr) {\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (arr[i] !== undefined) {\n\t\t\t\treturn arr[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Transforms the input nested array to become flat.\n\t * @param {Array.<*|Array.<*>>} arr Nested array to flatten.\n\t * @param {Array.<*>} opt_output Optional output array.\n\t * @return {Array.<*>} Flat array.\n\t */\n\tstatic flatten(arr, opt_output) {\n\t\tvar output = opt_output || [];\n\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\tif (Array.isArray(arr[i])) {\n\t\t\t\tarray.flatten(arr[i], output);\n\t\t\t} else {\n\t\t\t\toutput.push(arr[i]);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Removes the first occurrence of a particular value from an array.\n\t * @param {Array.<T>} arr Array from which to remove value.\n\t * @param {T} obj Object to remove.\n\t * @return {boolean} True if an element was removed.\n\t * @template T\n\t */\n\tstatic remove(arr, obj) {\n\t\tvar i = arr.indexOf(obj);\n\t\tvar rv;\n\t\tif ( (rv = i >= 0) ) {\n\t\t\tarray.removeAt(arr, i);\n\t\t}\n\t\treturn rv;\n\t}\n\n\t/**\n\t * Removes from an array the element at index i\n\t * @param {Array} arr Array or array like object from which to remove value.\n\t * @param {number} i The index to remove.\n\t * @return {boolean} True if an element was removed.\n\t */\n\tstatic removeAt(arr, i) {\n\t\treturn Array.prototype.splice.call(arr, i, 1).length === 1;\n\t}\n\n\t/**\n\t * Slices the given array, just like Array.prototype.slice, but this\n\t * is faster and working on all array-like objects (like arguments).\n\t * @param {!Object} arr Array-like object to slice.\n\t * @param {number} start The index that should start the slice.\n\t * @param {number=} opt_end The index where the slice should end, not\n\t *   included in the final array. If not given, all elements after the\n\t *   start index will be included.\n\t * @return {!Array}\n\t */\n\tstatic slice(arr, start, opt_end) {\n\t\tvar sliced = [];\n\t\tvar end = core.isDef(opt_end) ? opt_end : arr.length;\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tsliced.push(arr[i]);\n\t\t}\n\t\treturn sliced;\n\t}\n}\n\nexport default array;\n","/*!\n * Polyfill from Google's Closure Library.\n * Copyright 2013 The Closure Library Authors. All Rights Reserved.\n */\n\n'use strict';\n\nvar async = {};\n\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nasync.throwException = function(exception) {\n\t// Each throw needs to be in its own context.\n\tasync.nextTick(function() {\n\t\tthrow exception;\n\t});\n};\n\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\nasync.run = function(callback, opt_context) {\n\tif (!async.run.workQueueScheduled_) {\n\t\t// Nothing is currently scheduled, schedule it now.\n\t\tasync.nextTick(async.run.processWorkQueue);\n\t\tasync.run.workQueueScheduled_ = true;\n\t}\n\n\tasync.run.workQueue_.push(\n\t\tnew async.run.WorkItem_(callback, opt_context));\n};\n\n\n/** @private {boolean} */\nasync.run.workQueueScheduled_ = false;\n\n\n/** @private {!Array.<!async.run.WorkItem_>} */\nasync.run.workQueue_ = [];\n\n/**\n * Run any pending async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * async.nextTick.\n */\nasync.run.processWorkQueue = function() {\n\t// NOTE: additional work queue items may be pushed while processing.\n\twhile (async.run.workQueue_.length) {\n\t\t// Don't let the work queue grow indefinitely.\n\t\tvar workItems = async.run.workQueue_;\n\t\tasync.run.workQueue_ = [];\n\t\tfor (var i = 0; i < workItems.length; i++) {\n\t\t\tvar workItem = workItems[i];\n\t\t\ttry {\n\t\t\t\tworkItem.fn.call(workItem.scope);\n\t\t\t} catch (e) {\n\t\t\t\tasync.throwException(e);\n\t\t\t}\n\t\t}\n\t}\n\n\t// There are no more work items, reset the work queue.\n\tasync.run.workQueueScheduled_ = false;\n};\n\n\n/**\n * @constructor\n * @final\n * @struct\n * @private\n *\n * @param {function()} fn\n * @param {Object|null|undefined} scope\n */\nasync.run.WorkItem_ = function(fn, scope) {\n\t/** @const */\n\tthis.fn = fn;\n\t/** @const */\n\tthis.scope = scope;\n};\n\n\n/**\n * Fires the provided callbacks as soon as possible after the current JS\n * execution context. setTimeout(…, 0) always takes at least 5ms for legacy\n * reasons.\n * @param {function(this:SCOPE)} callback Callback function to fire as soon as\n *     possible.\n * @param {SCOPE=} opt_context Object in whose scope to call the listener.\n * @template SCOPE\n */\nasync.nextTick = function(callback, opt_context) {\n\tvar cb = callback;\n\tif (opt_context) {\n\t\tcb = callback.bind(opt_context);\n\t}\n\tcb = async.nextTick.wrapCallback_(cb);\n\t// Introduced and currently only supported by IE10.\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof setImmediate === 'function') {\n\t\tsetImmediate(cb);\n\t\treturn;\n\t}\n\t// Look for and cache the custom fallback version of setImmediate.\n\tif (!async.nextTick.setImmediate_) {\n\t\tasync.nextTick.setImmediate_ = async.nextTick.getSetImmediateEmulator_();\n\t}\n\tasync.nextTick.setImmediate_(cb);\n};\n\n\n/**\n * Cache for the setImmediate implementation.\n * @type {function(function())}\n * @private\n */\nasync.nextTick.setImmediate_ = null;\n\n\n/**\n * Determines the best possible implementation to run a function as soon as\n * the JS event loop is idle.\n * @return {function(function())} The \"setImmediate\" implementation.\n * @private\n */\nasync.nextTick.getSetImmediateEmulator_ = function() {\n\t// Create a private message channel and use it to postMessage empty messages\n\t// to ourselves.\n\tvar Channel;\n\n\t// Verify if variable is defined on the current runtime (i.e., node, browser).\n\t// Can't use typeof enclosed in a function (such as core.isFunction) or an\n\t// exception will be thrown when the function is called on an environment\n\t// where the variable is undefined.\n\tif (typeof MessageChannel === 'function') {\n\t\tChannel = MessageChannel;\n\t}\n\n\t// If MessageChannel is not available and we are in a browser, implement\n\t// an iframe based polyfill in browsers that have postMessage and\n\t// document.addEventListener. The latter excludes IE8 because it has a\n\t// synchronous postMessage implementation.\n\tif (typeof Channel === 'undefined' && typeof window !== 'undefined' &&\n\t\twindow.postMessage && window.addEventListener) {\n\t\t/** @constructor */\n\t\tChannel = function() {\n\t\t\t// Make an empty, invisible iframe.\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tiframe.style.display = 'none';\n\t\t\tiframe.src = '';\n\t\t\tdocument.documentElement.appendChild(iframe);\n\t\t\tvar win = iframe.contentWindow;\n\t\t\tvar doc = win.document;\n\t\t\tdoc.open();\n\t\t\tdoc.write('');\n\t\t\tdoc.close();\n\t\t\tvar message = 'callImmediate' + Math.random();\n\t\t\tvar origin = win.location.protocol + '//' + win.location.host;\n\t\t\tvar onmessage = function(e) {\n\t\t\t\t// Validate origin and message to make sure that this message was\n\t\t\t\t// intended for us.\n\t\t\t\tif (e.origin !== origin && e.data !== message) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.port1.onmessage();\n\t\t\t}.bind(this);\n\t\t\twin.addEventListener('message', onmessage, false);\n\t\t\tthis.port1 = {};\n\t\t\tthis.port2 = {\n\t\t\t\tpostMessage: function() {\n\t\t\t\t\twin.postMessage(message, origin);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n\tif (typeof Channel !== 'undefined') {\n\t\tvar channel = new Channel();\n\t\t// Use a fifo linked list to call callbacks in the right order.\n\t\tvar head = {};\n\t\tvar tail = head;\n\t\tchannel.port1.onmessage = function() {\n\t\t\thead = head.next;\n\t\t\tvar cb = head.cb;\n\t\t\thead.cb = null;\n\t\t\tcb();\n\t\t};\n\t\treturn function(cb) {\n\t\t\ttail.next = {\n\t\t\t\tcb: cb\n\t\t\t};\n\t\t\ttail = tail.next;\n\t\t\tchannel.port2.postMessage(0);\n\t\t};\n\t}\n\t// Implementation for IE6-8: Script elements fire an asynchronous\n\t// onreadystatechange event when inserted into the DOM.\n\tif (typeof document !== 'undefined' && 'onreadystatechange' in\n\t\tdocument.createElement('script')) {\n\t\treturn function(cb) {\n\t\t\tvar script = document.createElement('script');\n\t\t\tscript.onreadystatechange = function() {\n\t\t\t\t// Clean up and call the callback.\n\t\t\t\tscript.onreadystatechange = null;\n\t\t\t\tscript.parentNode.removeChild(script);\n\t\t\t\tscript = null;\n\t\t\t\tcb();\n\t\t\t\tcb = null;\n\t\t\t};\n\t\t\tdocument.documentElement.appendChild(script);\n\t\t};\n\t}\n\t// Fall back to setTimeout with 0. In browsers this creates a delay of 5ms\n\t// or more.\n\treturn function(cb) {\n\t\tsetTimeout(cb, 0);\n\t};\n};\n\n\n/**\n * Helper function that is overrided to protect callbacks with entry point\n * monitor if the application monitors entry points.\n * @param {function()} callback Callback function to fire as soon as possible.\n * @return {function()} The wrapped callback.\n * @private\n */\nasync.nextTick.wrapCallback_ = function(opt_returnValue) {\n\treturn opt_returnValue;\n};\n\nexport default async;\n","'use strict';\n\n/**\n * Disposable utility. When inherited provides the `dispose` function to its\n * subclass, which is responsible for disposing of any object references\n * when an instance won't be used anymore. Subclasses should override\n * `disposeInternal` to implement any specific disposing logic.\n * @constructor\n */\nclass Disposable {\n\tconstructor() {\n\t\t/**\n\t\t * Flag indicating if this instance has already been disposed.\n\t\t * @type {boolean}\n\t\t * @protected\n\t\t */\n\t\tthis.disposed_ = false;\n\t}\n\n\t/**\n\t * Disposes of this instance's object references. Calls `disposeInternal`.\n\t */\n\tdispose() {\n\t\tif (!this.disposed_) {\n\t\t\tthis.disposeInternal();\n\t\t\tthis.disposed_ = true;\n\t\t}\n\t}\n\n\t/**\n\t * Subclasses should override this method to implement any specific\n\t * disposing logic (like clearing references and calling `dispose` on other\n\t * disposables).\n\t */\n\tdisposeInternal() {}\n\n\t/**\n\t * Checks if this instance has already been disposed.\n\t * @return {boolean}\n\t */\n\tisDisposed() {\n\t\treturn this.disposed_;\n\t}\n}\n\nexport default Disposable;\n","'use strict';\n\nclass object {\n\t/**\n\t * Copies all the members of a source object to a target object.\n\t * @param {Object} target Target object.\n\t * @param {...Object} var_args The objects from which values will be copied.\n\t * @return {Object} Returns the target object reference.\n\t */\n\tstatic mixin(target) {\n\t\tvar key, source;\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\tsource = arguments[i];\n\t\t\tfor (key in source) {\n\t\t\t\ttarget[key] = source[key];\n\t\t\t}\n\t\t}\n\t\treturn target;\n\t}\n\n\t/**\n\t * Returns an object based on its fully qualified external name.\n\t * @param {string} name The fully qualified name.\n\t * @param {object=} opt_obj The object within which to look; default is\n\t *     <code>window</code>.\n\t * @return {?} The value (object or primitive) or, if not found, undefined.\n\t */\n\tstatic getObjectByName(name, opt_obj) {\n\t\tvar scope = opt_obj || window;\n\t\tvar parts = name.split('.');\n\t\treturn parts.reduce((part, key) => part[key], scope);\n\t}\n\n\t/**\n\t * Returns a new object with the same keys as the given one, but with\n\t * their values set to the return values of the specified function.\n\t * @param {!Object} obj\n\t * @param {!function(string, *)} fn\n\t * @return {!Object}\n\t */\n\tstatic map(obj, fn) {\n\t\tvar mappedObj = {};\n\t\tvar keys = Object.keys(obj);\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tmappedObj[keys[i]] = fn(keys[i], obj[keys[i]]);\n\t\t}\n\t\treturn mappedObj;\n\t}\n\n\t/**\n\t * Checks if the two given objects are equal. This is done via a shallow\n\t * check, including only the keys directly contained by the 2 objects.\n\t * @return {boolean}\n\t */\n\tstatic shallowEqual(obj1, obj2) {\n\t\tif (obj1 === obj2) {\n\t\t\treturn true;\n\t\t}\n\n\t\tvar keys1 = Object.keys(obj1);\n\t\tvar keys2 = Object.keys(obj2);\n\t\tif (keys1.length !== keys2.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (var i = 0; i < keys1.length; i++) {\n\t\t\tif (obj1[keys1[i]] !== obj2[keys1[i]]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport default object;\n","'use strict';\n\nclass string {\n\t/**\n\t * Removes the breaking spaces from the left and right of the string and\n\t * collapses the sequences of breaking spaces in the middle into single spaces.\n\t * The original and the result strings render the same way in HTML.\n\t * @param {string} str A string in which to collapse spaces.\n\t * @return {string} Copy of the string with normalized breaking spaces.\n\t */\n\tstatic collapseBreakingSpaces(str) {\n\t\treturn str.replace(/[\\t\\r\\n ]+/g, ' ').replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n\t}\n\n\t/**\n\t* Escapes characters in the string that are not safe to use in a RegExp.\n\t* @param {*} str The string to escape. If not a string, it will be casted\n\t*     to one.\n\t* @return {string} A RegExp safe, escaped copy of {@code s}.\n\t*/\n\tstatic escapeRegex(str) {\n\t\treturn String(str)\n\t\t\t.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n\t\t\t.replace(/\\x08/g, '\\\\x08');\n\t}\n\n\t/**\n\t* Returns a string with at least 64-bits of randomness.\n\t* @return {string} A random string, e.g. sn1s7vb4gcic.\n\t*/\n\tstatic getRandomString() {\n\t\tvar x = 2147483648;\n\t\treturn Math.floor(Math.random() * x).toString(36) +\n\t\t\tMath.abs(Math.floor(Math.random() * x) ^ Date.now()).toString(36);\n\t}\n\n\t/**\n\t * Calculates the hashcode for a string. The hashcode value is computed by\n\t * the sum algorithm: s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]. A nice\n\t * property of using 31 prime is that the multiplication can be replaced by\n\t * a shift and a subtraction for better performance: 31*i == (i<<5)-i.\n\t * Modern VMs do this sort of optimization automatically.\n\t * @param {String} val Target string.\n\t * @return {Number} Returns the string hashcode.\n\t */\n\tstatic hashCode(val) {\n\t\tvar hash = 0;\n\t\tfor (var i = 0, len = val.length; i < len; i++) {\n\t\t\thash = 31 * hash + val.charCodeAt(i);\n\t\t\thash %= 0x100000000;\n\t\t}\n\t\treturn hash;\n\t}\n\n\t/**\n\t * Replaces interval into the string with specified value, e.g.\n\t * `replaceInterval(\"abcde\", 1, 4, \"\")` returns \"ae\".\n\t * @param {string} str The input string.\n\t * @param {Number} start Start interval position to be replaced.\n\t * @param {Number} end End interval position to be replaced.\n\t * @param {string} value The value that replaces the specified interval.\n\t * @return {string}\n\t */\n\tstatic replaceInterval(str, start, end, value) {\n\t\treturn str.substring(0, start) + value + str.substring(end);\n\t}\n}\n\nexport default string;\n","'use strict';\n\nimport core from './core';\nimport array from './array/array';\nimport async from './async/async';\nimport Disposable from './disposable/Disposable';\nimport object from './object/object';\nimport string from './string/string';\n\nexport default core;\nexport { core, array, async, Disposable, object, string };\n","'use strict';\n\nimport { core } from 'metal';\n\n/**\n * Class responsible for storing authorization information.\n */\nclass Auth {\n\t/**\n\t * Constructs an {@link Auth} instance.\n\t * @param {string} tokenOrUsername Either the authorization token, or\n\t *   the username.\n\t * @param {string=} opt_password If a username is given as the first param,\n\t *   this should be the password.\n\t * @constructor\n\t */\n\tconstructor(tokenOrUsername, opt_password = null) {\n\t\tthis.token_ = core.isString(opt_password) ? null : tokenOrUsername;\n\t\tthis.username_ = core.isString(opt_password) ? tokenOrUsername : null;\n\t\tthis.password_ = opt_password;\n\t}\n\n\t/**\n\t * Constructs an {@link Auth} instance.\n\t * @param {string} tokenOrUsername Either the authorization token, or\n\t *   the username.\n\t * @param {string=} opt_password If a username is given as the first param,\n\t *   this should be the password.\n\t * @return {!Auth}\n\t */\n\tstatic create(tokenOrUsername, opt_password) {\n\t\treturn new Auth(tokenOrUsername, opt_password);\n\t}\n\n\t/**\n\t * Checks if the password is set.\n\t * @return {boolean}\n\t */\n\thasPassword() {\n\t\treturn this.password_ !== null;\n\t}\n\n\t/**\n\t * Checks if the token is set.\n\t * @return {boolean}\n\t */\n\thasToken() {\n\t\treturn this.token_ !== null;\n\t}\n\n\t/**\n\t * Checks if the username is set.\n\t * @return {boolean}\n\t */\n\thasUsername() {\n\t\treturn this.username_ !== null;\n\t}\n\n\t/**\n\t * Returns the password.\n\t * @return {string}\n\t */\n\tpassword() {\n\t\treturn this.password_;\n\t}\n\n\t/**\n\t * Returns the token.\n\t * @return {string}\n\t */\n\ttoken() {\n\t\treturn this.token_;\n\t}\n\n\t/**\n\t * Returns the username.\n\t * @return {string}\n\t */\n\tusername() {\n\t\treturn this.username_;\n\t}\n}\n\nexport default Auth;\n","'use strict';\n\nimport { Disposable } from 'metal';\n\n/**\n * A cached reference to the create function.\n */\nvar create = Object.create;\n\n/**\n * Case insensitive string Multimap implementation. Allows multiple values for\n * the same key name.\n * @extends {Disposable}\n */\nclass MultiMap extends Disposable {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.keys = create(null);\n\t\tthis.values = create(null);\n\t}\n\n\t/**\n\t * Adds value to a key name.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tadd(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = this.values[name.toLowerCase()] || [];\n\t\tthis.values[name.toLowerCase()].push(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Clears map names and values.\n\t * @chainable\n\t */\n\tclear() {\n\t\tthis.keys = create(null);\n\t\tthis.values = create(null);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Checks if map contains a value to the key name.\n\t * @param {string} name\n\t * @return {boolean}\n\t * @chainable\n\t */\n\tcontains(name) {\n\t\treturn name.toLowerCase() in this.values;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tthis.values = null;\n\t}\n\n\t/**\n\t * Gets the first added value from a key name.\n\t * @param {string} name\n\t * @return {*}\n\t * @chainable\n\t */\n\tget(name) {\n\t\tvar values = this.values[name.toLowerCase()];\n\t\tif (values) {\n\t\t\treturn values[0];\n\t\t}\n\t}\n\n\t/**\n\t * Gets all values from a key name.\n\t * @param {string} name\n\t * @return {Array.<*>}\n\t */\n\tgetAll(name) {\n\t\treturn this.values[name.toLowerCase()];\n\t}\n\n\t/**\n\t * Returns true if the map is empty, false otherwise.\n\t * @return {boolean}\n\t */\n\tisEmpty() {\n\t\treturn this.size() === 0;\n\t}\n\n\t/**\n\t * Gets array of key names.\n\t * @return {Array.<string>}\n\t */\n\tnames() {\n\t\treturn Object.keys(this.values).map((key) => this.keys[key]);\n\t}\n\n\t/**\n\t * Removes all values from a key name.\n\t * @param {string} name\n\t * @chainable\n\t */\n\tremove(name) {\n\t\tdelete this.keys[name.toLowerCase()];\n\t\tdelete this.values[name.toLowerCase()];\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value of a key name. Relevant to replace the current values with\n\t * a new one.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tset(name, value) {\n\t\tthis.keys[name.toLowerCase()] = name;\n\t\tthis.values[name.toLowerCase()] = [value];\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the size of the map key names.\n\t * @return {number}\n\t */\n\tsize() {\n\t\treturn this.names().length;\n\t}\n\n\t/**\n\t * Returns the parsed values as a string.\n\t * @return {string}\n\t */\n\ttoString() {\n\t\treturn JSON.stringify(this.values);\n\t}\n}\n\nexport default MultiMap;\n","'use strict';\n\nimport { core } from 'metal';\nimport MultiMap from 'metal-multimap';\n\n/**\n * Represents a client message (e.g. a request or a response).\n */\nclass ClientMessage {\n\tconstructor() {\n\t\tthis.headers_ = new MultiMap();\n\t}\n\n\t/**\n\t * Fluent getter and setter for request body.\n\t * @param {*=} opt_body Request body to be set. If none is given,\n\t *   the current value of the body will be returned.\n\t * @return {*} Returns request body if no body value was given. Otherwise\n\t *   returns the {@link ClientMessage} object itself, so calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tbody(opt_body) {\n\t\tif (core.isDef(opt_body)) {\n\t\t\tthis.body_ = opt_body;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.body_;\n\t}\n\n\t/**\n\t * Adds a header. If a header with the same name already exists, it will not be\n\t * overwritten, but the new value will be stored as well. The order is preserved.\n\t * @param {string} name\n\t * @param {string} value\n\t * @chainable\n\t */\n\theader(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.headers_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request headers.\n\t * @param {MultiMap|Object=} opt_headers Request headers list to\n\t *   be set. If none is given the current value of the headers will\n\t *   be returned.\n\t * @return {!MultiMap|ClientMessage} Returns map of request headers\n\t *   if no new value was given. Otherwise returns the {@link ClientMessage}\n\t *   object itself, so calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\theaders(opt_headers) {\n\t\tif (core.isDef(opt_headers)) {\n\t\t\tif (opt_headers instanceof MultiMap) {\n\t\t\t\tthis.headers_ = opt_headers;\n\t\t\t} else {\n\t\t\t\tthis.headers_.values = opt_headers;\n\t\t\t}\n\t\t\treturn opt_headers;\n\t\t}\n\t\treturn this.headers_;\n\t}\n\n\t/**\n\t * Removes the body.\n\t */\n\tremoveBody() {\n\t\tthis.body_ = undefined;\n\t}\n}\n\nexport default ClientMessage;\n","'use strict';\n\nimport { core } from 'metal';\nimport ClientMessage from './ClientMessage';\nimport MultiMap from 'metal-multimap';\n\n/**\n * Represents a client request object.\n * @extends {ClientMessage}\n */\nclass ClientRequest extends ClientMessage {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.params_ = new MultiMap();\n\t}\n\n\t/**\n\t * Fluent getter and setter for request method.\n\t * @param {string=} opt_method Request method to be set. If none is given,\n\t *   the current method value will be returned.\n\t * @return {!ClientMessage|string} Returns request method if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so\n\t *   calls can be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tmethod(opt_method) {\n\t\tif (core.isDef(opt_method)) {\n\t\t\tthis.method_ = opt_method;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.method_ || ClientRequest.DEFAULT_METHOD;\n\t}\n\n\t/**\n\t * Adds a query. If a query with the same name already exists, it will not\n\t * be overwritten, but new value will be stored as well. The order is preserved.\n\t * @param {string} name\n\t * @param {string} value\n\t * @chainable\n\t */\n\tparam(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.params_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request querystring.\n\t * @param {MultiMap|Object=} opt_params Request querystring map to be set.\n\t *   If none is given the current value of the params will be returned.\n\t * @return {!MultiMap|ClientMessage} Returns map of request querystring if\n\t *   no new value was given. Otherwise returns the {@link ClientMessage}\n\t *   object itself, so calls can be chained.\n\t */\n\tparams(opt_params) {\n\t\tif (core.isDef(opt_params)) {\n\t\t\tif (opt_params instanceof MultiMap) {\n\t\t\t\tthis.params_ = opt_params;\n\t\t\t} else {\n\t\t\t\tthis.params_.values = opt_params;\n\t\t\t}\n\t\t\treturn opt_params;\n\t\t}\n\t\treturn this.params_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for request url.\n\t * @param {string=} opt_url Request url to be set. If none is given,\n\t *   the current value of the url will be returned.\n\t * @return {!ClientMessage|string} Returns request url if no new value was given.\n\t *   Otherwise returns the {@link ClientMessage} object itself, so calls can be\n\t *   chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\turl(opt_url) {\n\t\tif (core.isDef(opt_url)) {\n\t\t\tthis.url_ = opt_url;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.url_;\n\t}\n\n}\n\nClientRequest.DEFAULT_METHOD = 'GET';\n\nexport default ClientRequest;\n","'use strict';\n\nimport { core } from 'metal';\nimport ClientMessage from './ClientMessage';\n\n/**\n * Represents a client response object.\n * @extends {ClientMessage}\n */\nclass ClientResponse extends ClientMessage {\n\tconstructor(clientRequest) {\n\t\tsuper();\n\t\tif (!clientRequest) {\n\t\t\tthrow new Error('Can\\'t create response without request');\n\t\t}\n\t\tthis.clientRequest_ = clientRequest;\n\t}\n\n\t/**\n\t * Returns request that created this response.\n\t * @return {!ClientRequest}\n\t */\n\trequest() {\n\t\treturn this.clientRequest_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for response status code.\n\t * @param {number=} opt_statusCode Request status code to be set. If none is given,\n\t *   the current status code value will be returned.\n\t * @return {!ClientMessage|number} Returns response status code if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so calls can\n\t *   be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tstatusCode(opt_statusCode) {\n\t\tif (core.isDef(opt_statusCode)) {\n\t\t\tthis.statusCode_ = opt_statusCode;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.statusCode_;\n\t}\n\n\t/**\n\t * Fluent getter and setter for response status text.\n\t * @param {string=} opt_statusText Request status text to be set. If none is given,\n\t *   the current status text value will be returned.\n\t * @return {!ClientMessage|number} Returns response status text if no new value was\n\t *   given. Otherwise returns the {@link ClientMessage} object itself, so calls can\n\t *   be chained.\n\t * @chainable Chainable when used as setter.\n\t */\n\tstatusText(opt_statusText) {\n\t\tif (core.isDef(opt_statusText)) {\n\t\t\tthis.statusText_ = opt_statusText;\n\t\t\treturn this;\n\t\t}\n\t\treturn this.statusText_;\n\t}\n\n\t/**\n\t * Checks if response succeeded. Any status code 2xx or 3xx is considered valid.\n\t * @return {boolean}\n\t */\n\tsucceeded() {\n\t\treturn this.statusCode() >= 200 && this.statusCode() <= 399;\n\t}\n\n}\n\nexport default ClientResponse;\n","'use strict';\n\n/**\n * Abstraction layer for string to base64 conversion\n * reference: https://github.com/nodejs/node/issues/3462\n */\nclass Base64 {\n\t/**\n\t * Creates a base-64 encoded ASCII string from a \"string\" of binary data.\n\t * @param {string} string to be encoded.\n\t * @return {string}\n\t * @static\n\t */\n\tstatic encodeString(string) {\n\t\tif (typeof btoa === 'function') {\n\t\t\treturn btoa(string);\n\t\t}\n\n\t\treturn new Buffer(string.toString(), 'binary');\n\t}\n}\n\nexport default Base64;\n","'use strict';\n\n/**\n * Class responsible for storing an object that will be printed as JSON\n * when the `toString` method is called.\n */\nclass Embodied {\n\t/**\n\t * Constructs a Embodied instance.\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.body_ = {};\n\t}\n\n\t/**\n\t * Gets the json object that represents this instance.\n\t * @return {!Object}\n\t */\n\tbody() {\n\t\treturn this.body_;\n\t}\n\n\t/**\n\t * If the given object is an instance of Embodied, this will\n\t * return its body content. Otherwise this will return the\n\t * original object.\n\t * @param {*} obj\n\t * @return {*}\n\t * @static\n\t */\n\tstatic toBody(obj) {\n\t\treturn (obj instanceof Embodied) ? obj.body() : obj;\n\t}\n\n\t/**\n\t * Gets the json string that represents this instance.\n\t * @return {string}\n\t */\n\ttoString() {\n\t\treturn JSON.stringify(this.body());\n\t}\n}\n\nexport default Embodied;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for storing and handling the body contents\n * of a Filter instance.\n */\nclass FilterBody {\n\t/**\n\t * Constructs a {@link FilterBody} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should\n\t *   be the filter's operator (like \">=\"). Otherwise, this will be\n\t *   used as the filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @constructor\n\t */\n\tconstructor(field, operatorOrValue, opt_value) {\n\t\tvar obj = {\n\t\t\toperator: core.isDef(opt_value) ? operatorOrValue : '='\n\t\t};\n\t\tvar value = core.isDef(opt_value) ? opt_value : operatorOrValue;\n\t\tif (core.isDefAndNotNull(value)) {\n\t\t\tif (value instanceof Embodied) {\n\t\t\t\tvalue = value.body();\n\t\t\t}\n\t\t\tobj.value = value;\n\t\t}\n\t\tthis.createBody_(field, obj);\n\t}\n\n\t/**\n\t * Composes the current filter with the given operator.\n\t * @param {string} operator\n\t * @param {Filter=} opt_filter Another filter to compose this filter with,\n\t *   if the operator is not unary.\n\t */\n\tadd(operator, opt_filter) {\n\t\tif (opt_filter) {\n\t\t\tthis.addArrayOperator_(operator, opt_filter);\n\t\t} else {\n\t\t\tthis.createBody_(operator, this.body_);\n\t\t}\n\t}\n\n\t/**\n\t * Composes the current filter with an operator that stores its values in an array.\n\t * @param {string} operator\n\t * @param {!Filter} filter\n\t * @protected\n\t */\n\taddArrayOperator_(operator, filter) {\n\t\tif (!(this.body_[operator] instanceof Array)) {\n\t\t\tthis.createBody_(operator, [this.body_]);\n\t\t}\n\t\tthis.body_[operator].push(filter.body());\n\t}\n\n\t/**\n\t * Adds filters to be composed with this filter body using the given operator.\n\t * @param {string} operator\n\t * @param {...*} filters A variable amount of filters to be composed.\n\t */\n\taddMany(operator, ...filters) {\n\t\tfor (var i = 0; i < filters.length; i++) {\n\t\t\tthis.add(operator, filters[i]);\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new body object, setting the requestd key to the given value.\n\t * @param {string} key The key to set in the new body object\n\t * @param {*} value The value the requested key should have in the new body object.\n\t * @protected\n\t */\n\tcreateBody_(key, value) {\n\t\tthis.body_ = {};\n\t\tthis.body_[key] = value;\n\t}\n\n\t/**\n\t * Gets the json object that represents this filter's body.\n\t * @return {!Object}\n\t */\n\tgetObject() {\n\t\treturn this.body_;\n\t}\n}\n\nexport default FilterBody;\n","'use strict';\n\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for building different types of geometric\n * shapes.\n */\nclass Geo {\n\t/**\n\t * Creates a new {@link BoundingBox} instance.\n\t * @param {*} upperLeft The upper left point.\n\t * @param {*} lowerRight The lower right point.\n\t * @return {!BoundingBox}\n\t * @static\n\t */\n\tstatic boundingBox(upperLeft, lowerRight) {\n\t\treturn new Geo.BoundingBox(upperLeft, lowerRight);\n\t}\n\n\t/**\n\t * Creates a new {@link Circle} instance.\n\t * @param {*} center The circle's center coordinate.\n\t * @param {string} radius The circle's radius.\n\t * @return {!Circle}\n\t * @static\n\t */\n\tstatic circle(center, radius) {\n\t\treturn new Geo.Circle(center, radius);\n\t}\n\n\t/**\n\t * Creates a new {@link Line} instance.\n\t * @param {...*} points This line's points.\n\t * @return {!Line}\n\t * @static\n\t */\n\tstatic line(...points) {\n\t\treturn new Geo.Line(...points);\n\t}\n\n\t/**\n\t * Creates a new {@link Point} instance.\n\t * @param {number} lat The latitude coordinate\n\t * @param {number} lon The longitude coordinate\n\t * @return {!Point}\n\t * @static\n\t */\n\tstatic point(lat, lon) {\n\t\treturn new Geo.Point(lat, lon);\n\t}\n\n\t/**\n\t * Creates a new {@link Polygon} instance.\n\t * @param {...*} points This polygon's points.\n\t * @return {!Polygon}\n\t * @static\n\t */\n\tstatic polygon(...points) {\n\t\treturn new Geo.Polygon(...points);\n\t}\n}\n\n/**\n * Class that represents a point coordinate.\n * @extends {Embodied}\n */\nclass Point extends Embodied {\n\t/**\n\t * Constructs a {@link Point} instance.\n\t * @param {number} lat The latitude coordinate\n\t * @param {number} lon The longitude coordinate\n\t * @constructor\n\t */\n\tconstructor(lat, lon) {\n\t\tsuper();\n\t\tthis.body_ = [lat, lon];\n\t}\n}\nGeo.Point = Point;\n\n/**\n * Class that represents a line.\n * @extends {Embodied}\n */\nclass Line extends Embodied {\n\t/**\n\t * Constructs a {@link Line} instance.\n\t * @param {...*} points This line's points.\n\t * @constructor\n\t */\n\tconstructor(...points) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'linestring',\n\t\t\tcoordinates: points.map(point => Embodied.toBody(point))\n\t\t};\n\t}\n}\nGeo.Line = Line;\n\n/**\n * Class that represents a bounding box.\n * @extends {Embodied}\n */\nclass BoundingBox extends Embodied {\n\t/**\n\t * Constructs a {@link BoundingBox} instance.\n\t * @param {*} upperLeft The upper left point.\n\t * @param {*} lowerRight The lower right point.\n\t * @constructor\n\t */\n\tconstructor(upperLeft, lowerRight) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'envelope',\n\t\t\tcoordinates: [Embodied.toBody(upperLeft), Embodied.toBody(lowerRight)]\n\t\t};\n\t}\n\n\t/**\n\t * Gets this bounding box's points.\n\t * @return {!Array}\n\t */\n\tgetPoints() {\n\t\treturn this.body_.coordinates;\n\t}\n}\nGeo.BoundingBox = BoundingBox;\n\n/**\n * Class that represents a circle.\n * @extends {Embodied}\n */\nclass Circle extends Embodied {\n\t/**\n\t * Constructs a {@link Circle} instance.\n\t * @param {*} center The circle's center coordinate.\n\t * @param {string} radius The circle's radius.\n\t * @constructor\n\t */\n\tconstructor(center, radius) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'circle',\n\t\t\tcoordinates: Embodied.toBody(center),\n\t\t\tradius: radius\n\t\t};\n\t}\n\n\t/**\n\t * Gets this circle's center coordinate.\n\t * @return {*}\n\t */\n\tgetCenter() {\n\t\treturn this.body_.coordinates;\n\t}\n\n\t/**\n\t * Gets this circle's radius.\n\t * @return {string}\n\t */\n\tgetRadius() {\n\t\treturn this.body_.radius;\n\t}\n}\nGeo.Circle = Circle;\n\n/**\n * Class that represents a polygon.\n * @extends {Embodied}\n */\nclass Polygon extends Embodied {\n\t/**\n\t * Constructs a {@link Polygon} instance.\n\t * @param {...*} points This polygon's points.\n\t * @constructor\n\t */\n\tconstructor(...points) {\n\t\tsuper();\n\t\tthis.body_ = {\n\t\t\ttype: 'polygon',\n\t\t\tcoordinates: []\n\t\t};\n\t\tthis.addCoordinates_(...points);\n\t}\n\n\t/**\n\t * Adds the given points as coordinates for this polygon.\n\t * @param {...*} points\n\t * @protected\n\t */\n\taddCoordinates_(...points) {\n\t\tthis.body_.coordinates.push(points.map(point => Embodied.toBody(point)));\n\t}\n\n\t/**\n\t * Adds the given points as a hole inside this polygon.\n\t * @param  {...*} points\n\t * @chainnable\n\t */\n\thole(...points) {\n\t\tthis.addCoordinates_(...points);\n\t\treturn this;\n\t}\n}\nGeo.Polygon = Polygon;\n\nexport default Geo;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\n\n/**\n * Class responsible for building range objects to be used by `Filter`.\n * @extends {Embodied}\n */\nclass Range extends Embodied {\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @param {*} opt_to\n\t * @constructor\n\t */\n\tconstructor(from, opt_to) {\n\t\tsuper();\n\t\tif (core.isDefAndNotNull(from)) {\n\t\t\tthis.body_.from = from;\n\t\t}\n\t\tif (core.isDefAndNotNull(opt_to)) {\n\t\t\tthis.body_.to = opt_to;\n\t\t}\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic from(from) {\n\t\treturn new Range(from);\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} from\n\t * @param {*} to\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic range(from, to) {\n\t\treturn new Range(from, to);\n\t}\n\n\t/**\n\t * Constructs a {@link Range} instance.\n\t * @param {*} to\n\t * @return {!Range}\n\t * @static\n\t */\n\tstatic to(to) {\n\t\treturn new Range(null, to);\n\t}\n}\n\nexport default Range;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\nimport FilterBody from './FilterBody';\nimport Geo from './Geo';\nimport Range from './Range';\n\n/**\n * Class responsible for building filters.\n * @extends {Embodied}\n */\nclass Filter extends Embodied {\n\t/**\n\t * Constructs a {@link Filter} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should\n\t *   be the filter's operator (like \">=\"). Otherwise, this will be\n\t *   used as the filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @constructor\n\t */\n\tconstructor(field, operatorOrValue, opt_value) {\n\t\tsuper();\n\t\tthis.body_ = new FilterBody(field, operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the given operator.\n\t * @param {string} operator\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tadd(operator, fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tvar filter = fieldOrFilter ? Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value) : null;\n\t\tthis.body_.add(operator, filter);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds filters to be composed with this filter using the given operator.\n\t * @param {string} operator\n\t * @param {...*} filters A variable amount of filters to be composed.\n\t * @chainnable\n\t */\n\taddMany(operator, ...filters) {\n\t\tthis.body_.addMany(operator, ...filters);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"and\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tand(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn this.add('and', fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"any\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} values A variable amount of values to be used with\n\t *   the \"none\" operator. Can be passed either as a single array or as\n\t *   separate params.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic any(field) {\n\t\tvar values = Array.prototype.slice.call(arguments, 1);\n\t\tif (values.length === 1 && values[0] instanceof Array) {\n\t\t\tvalues = values[0];\n\t\t}\n\t\treturn new Filter(field, 'any', values);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gp\" operator.\n\t * This is a special use case of `Filter.polygon` for bounding\n\t * boxes.\n\t * @param {string} field The field's name.\n\t * @param {*} boxOrUpperLeft Either a `Geo.BoundingBox` instance, or\n\t *   a bounding box's upper left coordinate.\n\t * @param {*=} opt_lowerRight A bounding box's lower right coordinate.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic boundingBox(field, boxOrUpperLeft, opt_lowerRight) {\n\t\tif (boxOrUpperLeft instanceof Geo.BoundingBox) {\n\t\t\treturn Filter.polygon(field, ...boxOrUpperLeft.getPoints());\n\t\t} else {\n\t\t\treturn Filter.polygon(field, boxOrUpperLeft, opt_lowerRight);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the json object that represents this filter.\n\t * @return {!Object}\n\t */\n\tbody() {\n\t\treturn this.body_.getObject();\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gd\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} locationOrCircle Either a `Geo.Circle` instance or a coordinate.\n\t * @param {Range|string=} opt_rangeOrDistance Either a `Range` instance or\n\t *   the distance value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic distance(field, locationOrCircle, opt_rangeOrDistance) {\n\t\tvar location = locationOrCircle;\n\t\tvar range = opt_rangeOrDistance;\n\t\tif (locationOrCircle instanceof Geo.Circle) {\n\t\t\tlocation = locationOrCircle.getCenter();\n\t\t\trange = Range.to(locationOrCircle.getRadius());\n\t\t} else if (!(opt_rangeOrDistance instanceof Range)) {\n\t\t\trange = Range.to(opt_rangeOrDistance);\n\t\t}\n\t\treturn Filter.distanceInternal_(field, location, range);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gd\" operator. This\n\t * is just an internal helper used by `Filter.distance`.\n\t * @param {string} field The field's name.\n\t * @param {*} location A location coordinate.\n\t * @param {Range} range A `Range` instance.\n\t * @return {!Filter}\n\t * @protected\n\t * @static\n\t */\n\tstatic distanceInternal_(field, location, range) {\n\t\tvar value = {\n\t\t\tlocation: Embodied.toBody(location)\n\t\t};\n\t\trange = range.body();\n\t\tif (range.from) {\n\t\t\tvalue.min = range.from;\n\t\t}\n\t\tif (range.to) {\n\t\t\tvalue.max = range.to;\n\t\t}\n\t\treturn Filter.field(field, 'gd', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic equal(field, value) {\n\t\treturn new Filter(field, '=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"exists\" operator.\n\t * @param {string} field The field's name.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic exists(field) {\n\t\treturn Filter.field(field, 'exists', null);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"fuzzy\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string|number=} opt_queryOrFuzziness If this is a string, it should\n\t *   be the query, otherwise it should be the fuzziness value.\n\t * @param {number=} opt_fuzziness The fuzziness value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic fuzzy(fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness) {\n\t\treturn Filter.fuzzyInternal_('fuzzy', fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the given fuzzy operator. This\n\t * is an internal implementation used by the `Filter.fuzzy` method.\n\t * @param {string} operator The fuzzy operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string|number=} opt_queryOrFuzziness If this is a string, it should\n\t *   be the query, otherwise it should be the fuzziness value.\n\t * @param {number=} opt_fuzziness The fuzziness value.\n\t * @return {!Filter}\n\t * @protected\n\t * @static\n\t */\n\tstatic fuzzyInternal_(operator, fieldOrQuery, opt_queryOrFuzziness, opt_fuzziness) {\n\t\tvar arg2IsString = core.isString(opt_queryOrFuzziness);\n\n\t\tvar value = {\n\t\t\tquery: arg2IsString ? opt_queryOrFuzziness : fieldOrQuery\n\t\t};\n\t\tvar fuzziness = arg2IsString ? opt_fuzziness : opt_queryOrFuzziness;\n\t\tif (fuzziness) {\n\t\t\tvalue.fuzziness = fuzziness;\n\t\t}\n\n\t\tvar field = arg2IsString ? fieldOrQuery : Filter.ALL;\n\t\treturn Filter.field(field, operator, value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \">\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic gt(field, value) {\n\t\treturn new Filter(field, '>', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \">=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic gte(field, value) {\n\t\treturn new Filter(field, '>=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"match\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic match(fieldOrQuery, opt_query) {\n\t\tvar field = core.isString(opt_query) ? fieldOrQuery : Filter.ALL;\n\t\tvar query = core.isString(opt_query) ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'match', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"missing\" operator.\n\t * @param {string} field The field's name.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic missing(field) {\n\t\treturn Filter.field(field, 'missing', null);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"phrase\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic phrase(fieldOrQuery, opt_query) {\n\t\tvar field = core.isString(opt_query) ? fieldOrQuery : Filter.ALL;\n\t\tvar query = core.isString(opt_query) ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'phrase', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gp\" operator.\n\t * @param {string} field The name of the field.\n\t * @param {...!Object} points Objects representing points in the polygon.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic polygon(field, ...points) {\n\t\tpoints = points.map(point => Embodied.toBody(point));\n\t\treturn Filter.field(field, 'gp', points);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"prefix\" operator.\n\t * @param {string} fieldOrQuery If no second argument is given, this should\n\t *   be the query string, in which case all fields will be matched. Otherwise,\n\t *   this should be the name of the field to match.\n\t * @param {string=} opt_query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic prefix(fieldOrQuery, opt_query) {\n\t\tvar field = opt_query ? fieldOrQuery : Filter.ALL;\n\t\tvar query = opt_query ? opt_query : fieldOrQuery;\n\t\treturn Filter.field(field, 'prefix', query);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"range\" operator.\n\t * @param {string} field The field's name.\n\t * @param {*} rangeOrMin Either a `Range` instance or a the range's min value.\n\t * @param {*=} opt_max The range's max value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic range(field, rangeOrMin, opt_max) {\n\t\tvar range = rangeOrMin;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrMin, opt_max);\n\t\t}\n\t\treturn Filter.field(field, 'range', range);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"~\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic regex(field, value) {\n\t\treturn new Filter(field, '~', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"gs\" operator.\n\t * @param {string} field The field's name.\n\t * @param {...!Object} shapes Objects representing shapes.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic shape(field, ...shapes) {\n\t\tshapes = shapes.map(shape => Embodied.toBody(shape));\n\t\tvar value = {\n\t\t\ttype: 'geometrycollection',\n\t\t\tgeometries: shapes\n\t\t};\n\t\treturn Filter.field(field, 'gs', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"similar\" operator.\n\t * @param {string} fieldOrQuery If no second string argument is given, this\n\t *   should be the query string, in which case all fields will be matched.\n\t *   Otherwise, this should be the name of the field to match.\n\t * @param {?string} query The query string.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic similar(fieldOrQuery, query) {\n\t\tvar field = core.isString(query) ? fieldOrQuery : Filter.ALL;\n\t\tvar value = {\n\t\t\tquery: core.isString(query) ? query : fieldOrQuery\n\t\t};\n\t\treturn Filter.field(field, 'similar', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic lt(field, value) {\n\t\treturn new Filter(field, '<', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"<=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic lte(field, value) {\n\t\treturn new Filter(field, '<=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"none\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {!(Array|...*)} value A variable amount of values to be used with\n\t *   the \"none\" operator. Can be passed either as a single array or as\n\t *   separate params.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic none(field) {\n\t\tvar values = Array.prototype.slice.call(arguments, 1);\n\t\tif (values.length === 1 && values[0] instanceof Array) {\n\t\t\tvalues = values[0];\n\t\t}\n\t\treturn new Filter(field, 'none', values);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"!=\" operator.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic notEqual(field, value) {\n\t\treturn new Filter(field, '!=', value);\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance that uses the \"not\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t * @static\n\t */\n\tstatic not(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value).add('not');\n\t}\n\n\t/**\n\t * Returns a {@link Filter} instance.\n\t * @param {string} field The name of the field to filter by.\n\t * @param {*} operatorOrValue If a third param is given, this should\n\t *   be the filter's operator (like \">=\"). Otherwise, this will be\n\t *   used as the filter's value, and the filter's operator will be \"=\".\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n   * @static\n\t */\n\tstatic field(field, operatorOrValue, opt_value) {\n\t\treturn new Filter(field, operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Adds a filter to be composed with this filter using the \"or\" operator.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tor(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn this.add('or', fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Converts the given arguments into a {@link Filter} instance.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Filter}\n\t */\n\tstatic toFilter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tvar filter = fieldOrFilter;\n\t\tif (!(filter instanceof Filter)) {\n\t\t\tfilter = Filter.field(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\t}\n\t\treturn filter;\n\t}\n}\n\n/**\n * String constant that represents all fields.\n * @type {string}\n * @static\n */\nFilter.ALL = '*';\n\nexport default Filter;\n","'use strict';\n\nimport Embodied from './Embodied';\nimport Range from './Range';\n\n/**\n * Class that represents a search aggregation.\n */\nclass Aggregation {\n\t/**\n\t * Constructs an {@link Aggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {string} operator The aggregation operator.\n\t * @param {*=} opt_value The aggregation value.\n\t * @constructor\n\t */\n\tconstructor(field, operator, opt_value) {\n\t\tthis.field_ = field;\n\t\tthis.operator_ = operator;\n\t\tthis.value_ = opt_value;\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"avg\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic avg(field) {\n\t\treturn Aggregation.field(field, 'avg');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"count\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic count(field) {\n\t\treturn Aggregation.field(field, 'count');\n\t}\n\n\t/**\n\t * Creates an {@link DistanceAggregation} instance with the \"geoDistance\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {*} location The aggregation location.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @return {!DistanceAggregation}\n\t * @static\n\t */\n\tstatic distance(field, location, ...ranges) {\n\t\treturn new Aggregation.DistanceAggregation(field, location, ...ranges);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"extendedStats\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic extendedStats(field) {\n\t\treturn Aggregation.field(field, 'extendedStats');\n\t}\n\n\t/**\n\t * Gets this aggregation's field.\n\t * @return {string}\n\t */\n\tgetField() {\n\t\treturn this.field_;\n\t}\n\n\t/**\n\t * Gets this aggregation's operator.\n\t * @return {string}\n\t */\n\tgetOperator() {\n\t\treturn this.operator_;\n\t}\n\n\t/**\n\t * Gets this aggregation's value.\n\t * @return {*}\n\t */\n\tgetValue() {\n\t\treturn this.value_;\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"histogram\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {number} interval The histogram's interval.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic histogram(field, interval) {\n\t\treturn new Aggregation(field, 'histogram', interval);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"max\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic max(field) {\n\t\treturn Aggregation.field(field, 'max');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"min\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic min(field) {\n\t\treturn Aggregation.field(field, 'min');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"missing\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic missing(field) {\n\t\treturn Aggregation.field(field, 'missing');\n\t}\n\n\t/**\n\t * Creates a new {@link Aggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {string} operator The aggregation operator.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic field(field, operator) {\n\t\treturn new Aggregation(field, operator);\n\t}\n\n\t/**\n\t * Creates an {@link RangeAggregation} instance with the \"range\" operator.\n\t * @param {string} field The aggregation field.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @return {!RangeAggregation}\n\t * @static\n\t */\n\tstatic range(field, ...ranges) {\n\t\treturn new Aggregation.RangeAggregation(field, ...ranges);\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"stats\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic stats(field) {\n\t\treturn Aggregation.field(field, 'stats');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"sum\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic sum(field) {\n\t\treturn Aggregation.field(field, 'sum');\n\t}\n\n\t/**\n\t * Creates an {@link Aggregation} instance with the \"terms\" operator.\n\t * @param {string} field The aggregation field.\n\t * @return {!Aggregation}\n\t * @static\n\t */\n\tstatic terms(field) {\n\t\treturn Aggregation.field(field, 'terms');\n\t}\n}\n\n/**\n * Class that represents a distance aggregation.\n * @extends {Aggregation}\n */\nclass DistanceAggregation extends Aggregation {\n\t/**\n\t * Constructs an {@link DistanceAggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {*} location The aggregation location.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @constructor\n\t */\n\tconstructor(field, location, ...ranges) {\n\t\tsuper(field, 'geoDistance', {});\n\t\tthis.value_.location = Embodied.toBody(location);\n\t\tthis.value_.ranges = ranges.map(range => range.body());\n\t}\n\n\t/**\n\t * Adds a range to this aggregation.\n\t * @param {*} rangeOrFrom\n\t * @param {*=} opt_to\n\t * @chainnable\n\t */\n\trange(rangeOrFrom, opt_to) {\n\t\tvar range = rangeOrFrom;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrFrom, opt_to);\n\t\t}\n\t\tthis.value_.ranges.push(range.body());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this aggregation's unit.\n\t * @param {string} unit\n\t * @chainnable\n\t */\n\tunit(unit) {\n\t\tthis.value_.unit = unit;\n\t\treturn this;\n\t}\n}\nAggregation.DistanceAggregation = DistanceAggregation;\n\n/**\n * Class that represents a range aggregation.\n * @extends {Aggregation}\n */\nclass RangeAggregation extends Aggregation {\n\t/**\n\t * Constructs an {@link RangeAggregation} instance.\n\t * @param {string} field The aggregation field.\n\t * @param {...!Range} ranges The aggregation ranges.\n\t * @constructor\n\t */\n\tconstructor(field, ...ranges) {\n\t\tsuper(field, 'range');\n\t\tthis.value_ = ranges.map(range => range.body());\n\t}\n\n\t/**\n\t * Adds a range to this aggregation.\n\t * @param {*} rangeOrFrom\n\t * @param {*=} opt_to\n\t * @chainnable\n\t */\n\trange(rangeOrFrom, opt_to) {\n\t\tvar range = rangeOrFrom;\n\t\tif (!(range instanceof Range)) {\n\t\t\trange = Range.range(rangeOrFrom, opt_to);\n\t\t}\n\t\tthis.value_.push(range.body());\n\t\treturn this;\n\t}\n}\nAggregation.RangeAggregation = RangeAggregation;\n\nexport default Aggregation;\n","'use strict';\n\nimport { core } from 'metal';\nimport Embodied from './Embodied';\nimport Filter from './Filter';\nimport Aggregation from './Aggregation';\n\n/**\n * Class responsible for building queries.\n * @extends {Embodied}\n */\nclass Query extends Embodied {\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an\n\t *   {@link Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic aggregate(name, aggregationOrField, opt_operator) {\n\t\treturn new Query().aggregate(name, aggregationOrField, opt_operator);\n\t}\n\n\t/**\n\t * Sets this query's type to \"count\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic count() {\n\t\treturn new Query().type('count');\n\t}\n\n\t/**\n\t * Sets this query's type to \"fetch\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic fetch() {\n\t\treturn new Query().type('fetch');\n\t}\n\n\t/**\n\t * Adds a filter to this Query.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic filter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\treturn new Query().filter(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t}\n\n\t/**\n\t * Sets the query offset.\n\t * @param {number} offset The index of the first entry that should be returned\n\t *   by this query.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic offset(offset) {\n\t\treturn new Query().offset(offset);\n\t}\n\n\t/**\n\t * Adds a highlight entry to this {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic highlight(field) {\n\t\treturn new Query().highlight(field);\n\t}\n\n\t/**\n\t * Sets the query limit.\n\t * @param {number} limit The max amount of entries that this query should return.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic limit(limit) {\n\t\treturn new Query().limit(limit);\n\t}\n\n\t/**\n\t * Adds a search to this {@link Query} instance.\n\t * @param {!Filter|string} filterOrTextOrField If no other arguments\n\t *   are passed to this function, this should be either a {@link Filter}\n\t *   instance or a text to be used in a match filter. In both cases\n\t *   the filter will be applied to all fields. Another option is to\n\t *   pass this as a field name instead, together with other arguments\n\t *   so the filter can be created.\n\t * @param {string=} opt_textOrOperator Either a text to be used in a\n\t *   match filter, or the operator that should be used.\n\t * @param {*=} opt_value The value to be used by the filter. Should\n\t *   only be passed if an operator was passed as the second argument.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic search(filterOrTextOrField, opt_textOrOperator, opt_value) {\n\t\treturn new Query().search(filterOrTextOrField, opt_textOrOperator, opt_value);\n\t}\n\n\t/**\n\t * Adds a sort entry to this query, specifying the field this query should be\n\t * sorted by and, optionally, the sort direction.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should use.\n\t *   If none is given, \"asc\" is used by default.\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic sort(field, opt_direction) {\n\t\treturn new Query().sort(field, opt_direction);\n\t}\n\n\t/**\n\t * Sets the query type.\n\t * @param {string} type The query's type. For example: \"count\", \"fetch\".\n\t * @return {!Query}\n\t * @static\n\t */\n\tstatic type(type) {\n\t\treturn new Query().type(type);\n\t}\n\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an\n\t *   {@link Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @chainnable\n\t */\n\taggregate(name, aggregationOrField, opt_operator) {\n\t\tvar aggregation = aggregationOrField;\n\t\tif (!(aggregation instanceof Aggregation)) {\n\t\t\taggregation = Aggregation.field(aggregationOrField, opt_operator);\n\t\t}\n\n\t\tvar field = aggregation.getField();\n\t\tvar value = {};\n\t\tvalue[field] = {\n\t\t\tname: name,\n\t\t\toperator: aggregation.getOperator()\n\t\t};\n\t\tif (core.isDefAndNotNull(aggregation.getValue())) {\n\t\t\tvalue[field].value = aggregation.getValue();\n\t\t}\n\n\t\tif (!this.body_.aggregation) {\n\t\t\tthis.body_.aggregation = [];\n\t\t}\n\t\tthis.body_.aggregation.push(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets this query's type to \"count\".\n\t * @chainnable\n\t */\n\tcount() {\n\t\treturn this.type('count');\n\t}\n\n\t/**\n\t * Sets this query's type to \"fetch\".\n\t * @chainnable\n\t */\n\tfetch() {\n\t\treturn this.type('fetch');\n\t}\n\n\t/**\n\t * Adds a filter to this Query.\n\t * @param {!Filter|string} fieldOrFilter Either a {@link Filter} or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainnable\n\t */\n\tfilter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tvar filter = Filter.toFilter(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\tif (!this.body_.filter) {\n\t\t\tthis.body_.filter = [];\n\t\t}\n\t\tthis.body_.filter.push(filter.body());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query offset.\n\t * @param {number} offset The index of the first entry that should be returned\n\t *   by this query.\n\t * @chainnable\n\t */\n\toffset(offset) {\n\t\tthis.body_.offset = offset;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a highlight entry to this {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @chainnable\n\t */\n\thighlight(field) {\n\t\tif (!this.body_.highlight) {\n\t\t\tthis.body_.highlight = [];\n\t\t}\n\n\t\tthis.body_.highlight.push(field);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query limit.\n\t * @param {number} limit The max amount of entries that this query should return.\n\t * @chainnable\n\t */\n\tlimit(limit) {\n\t\tthis.body_.limit = limit;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a search to this {@link Query} instance.\n\t * @param {!Filter|string} filterOrTextOrField If no other arguments\n\t *   are passed to this function, this should be either a {@link Filter}\n\t *   instance or a text to be used in a match filter. In both cases\n\t *   the filter will be applied to all fields. Another option is to\n\t *   pass this as a field name instead, together with other arguments\n\t *   so the filter can be created.\n\t * @param {string=} opt_textOrOperator Either a text to be used in a\n\t *   match filter, or the operator that should be used.\n\t * @param {*=} opt_value The value to be used by the filter. Should\n\t *   only be passed if an operator was passed as the second argument.\n\t * @chainnable\n\t */\n\tsearch(filterOrTextOrField, opt_textOrOperator, opt_value) {\n\t\tvar filter = filterOrTextOrField;\n\t\tif (opt_value) {\n\t\t\tfilter = Filter.field(filterOrTextOrField, opt_textOrOperator, opt_value);\n\t\t} else if (opt_textOrOperator) {\n\t\t\tfilter = Filter.match(filterOrTextOrField, opt_textOrOperator);\n\t\t} else if (!(filter instanceof Filter)) {\n\t\t\tfilter = Filter.match(filterOrTextOrField);\n\t\t}\n\t\tif (!this.body_.search) {\n\t\t\tthis.body_.search = [];\n\t\t}\n\t\tthis.body_.search.push(filter.body());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a sort entry to this query, specifying the field this query should be\n\t * sorted by and, optionally, the sort direction.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should use.\n\t *   If none is given, \"asc\" is used by default.\n\t * @chainnable\n\t */\n\tsort(field, opt_direction) {\n\t\tif (!this.body_.sort) {\n\t\t\tthis.body_.sort = [];\n\t\t}\n\t\tvar sortEntry = {};\n\t\tsortEntry[field] = opt_direction || 'asc';\n\t\tthis.body_.sort.push(sortEntry);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the query type.\n\t * @param {string} type The query's type. For example: \"count\", \"fetch\".\n\t * @chainnable\n\t */\n\ttype(type) {\n\t\tthis.body_.type = type;\n\t\treturn this;\n\t}\n}\n\nexport default Query;\n","'use strict';\n\n/**\n * Parses the given uri string into an object.\n * @param {*=} opt_uri Optional string URI to parse\n */\nfunction parseFromAnchor(opt_uri) {\n\tvar link = document.createElement('a');\n\tlink.href = opt_uri;\n\treturn {\n\t\thash: link.hash,\n\t\thostname: link.hostname,\n\t\tpassword: link.password,\n\t\tpathname: link.pathname[0] === '/' ? link.pathname : '/' + link.pathname,\n\t\tport: link.port,\n\t\tprotocol: link.protocol,\n\t\tsearch: link.search,\n\t\tusername: link.username\n\t};\n}\n\nexport default parseFromAnchor;\n","'use strict';\n\nimport { core } from 'metal';\nimport parseFromAnchor from './parseFromAnchor';\n\n/**\n * Parses the given uri string into an object. The URL function will be used\n * when present, otherwise we'll fall back to the anchor node element.\n * @param {*=} opt_uri Optional string URI to parse\n */\nfunction parse(opt_uri) {\n\tif (core.isFunction(URL) && URL.length) {\n\t\treturn new URL(opt_uri);\n\t} else {\n\t\treturn parseFromAnchor(opt_uri);\n\t}\n}\n\nexport default parse;\n","'use strict';\n\nimport { core, string } from 'metal';\nimport parse from './parse';\nimport MultiMap from 'metal-multimap';\n\nvar parseFn_ = parse;\n\nclass Uri {\n\n\t/**\n\t * This class contains setters and getters for the parts of the URI.\n\t * The following figure displays an example URIs and their component parts.\n\t *\n\t *                                  path\n\t *\t                             ┌───┴────┐\n\t *\t  abc://example.com:123/path/data?key=value#fragid1\n\t *\t  └┬┘   └────┬────┘ └┬┘           └───┬───┘ └──┬──┘\n\t * protocol  hostname  port            search    hash\n\t *          └──────┬───────┘\n\t *                host\n\t *\n\t * @param {*=} opt_uri Optional string URI to parse\n\t * @constructor\n\t */\n\tconstructor(opt_uri = '') {\n\t\tthis.url = Uri.parse(this.maybeAddProtocolAndHostname_(opt_uri));\n\t}\n\n\t/**\n\t * Adds parameters to uri from a <code>MultiMap</code> as source.\n\t * @param {MultiMap} multimap The <code>MultiMap</code> containing the\n\t *   parameters.\n\t * @protected\n\t * @chainable\n\t */\n\taddParametersFromMultiMap(multimap) {\n\t\tmultimap.names().forEach((name) => {\n\t\t\tmultimap.getAll(name).forEach((value) => {\n\t\t\t\tthis.addParameterValue(name, value);\n\t\t\t});\n\t\t});\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the value of the named query parameters.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value. Will be explicitly casted to String.\n\t * @chainable\n\t */\n\taddParameterValue(name, value) {\n\t\tthis.ensureQueryInitialized_();\n\t\tif (core.isDef(value)) {\n\t\t\tvalue = String(value);\n\t\t}\n\t\tthis.query.add(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds the values of the named query parameter.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value.\n\t * @chainable\n\t */\n\taddParameterValues(name, values) {\n\t\tvalues.forEach((value) => this.addParameterValue(name, value));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Ensures query internal map is initialized and synced with initial value\n\t * extracted from URI search part.\n\t * @protected\n\t */\n\tensureQueryInitialized_() {\n\t\tif (this.query) {\n\t\t\treturn;\n\t\t}\n\t\tthis.query = new MultiMap();\n\t\tvar search = this.url.search;\n\t\tif (search) {\n\t\t\tsearch.substring(1).split('&').forEach((param) => {\n\t\t\t\tvar [key, value] = param.split('=');\n\t\t\t\tif (core.isDef(value)) {\n\t\t\t\t\tvalue = Uri.urlDecode(value);\n\t\t\t\t}\n\t\t\t\tthis.addParameterValue(key, value);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Gets the hash part of uri.\n\t * @return {string}\n\t */\n\tgetHash() {\n\t\treturn this.url.hash || '';\n\t}\n\n\t/**\n\t * Gets the host part of uri. E.g. <code>[hostname]:[port]</code>.\n\t * @return {string}\n\t */\n\tgetHost() {\n\t\tvar host = this.getHostname();\n\t\tif (host) {\n\t\t\tvar port = this.getPort();\n\t\t\tif (port && port !== '80') {\n\t\t\t\thost += ':' + port;\n\t\t\t}\n\t\t}\n\t\treturn host;\n\t}\n\n\t/**\n\t * Gets the hostname part of uri without protocol and port.\n\t * @return {string}\n\t */\n\tgetHostname() {\n\t\tvar hostname = this.url.hostname;\n\t\tif (hostname === Uri.HOSTNAME_PLACEHOLDER) {\n\t\t\treturn '';\n\t\t}\n\t\treturn hostname;\n\t}\n\n\t/**\n\t * Gets the origin part of uri. E.g. <code>http://[hostname]:[port]</code>.\n\t * @return {string}\n\t */\n\tgetOrigin() {\n\t\tvar host = this.getHost();\n\t\tif (host) {\n\t\t\treturn this.getProtocol() + '//' + host;\n\t\t}\n\t\treturn '';\n\t}\n\n\t/**\n\t * Returns the first value for a given parameter or undefined if the given\n\t * parameter name does not appear in the query string.\n\t * @param {string} paramName Unescaped parameter name.\n\t * @return {string|undefined} The first value for a given parameter or\n\t *   undefined if the given parameter name does not appear in the query\n\t *   string.\n\t */\n\tgetParameterValue(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.get(name);\n\t}\n\n\t/**\n\t * Returns the value<b>s</b> for a given parameter as a list of decoded\n\t * query parameter values.\n\t * @param {string} name The parameter to get values for.\n\t * @return {!Array<?>} The values for a given parameter as a list of decoded\n\t *   query parameter values.\n\t */\n\tgetParameterValues(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.getAll(name);\n\t}\n\n\t/**\n\t * Returns the name<b>s</b> of the parameters.\n\t * @return {!Array<string>} The names for the parameters as a list of\n\t *   strings.\n\t */\n\tgetParameterNames() {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.names();\n\t}\n\n\t/**\n\t * Gets the function currently being used to parse URIs.\n\t * @return {!function()}\n\t */\n\tstatic getParseFn() {\n\t\treturn parseFn_;\n\t}\n\n\t/**\n\t * Gets the pathname part of uri.\n\t * @return {string}\n\t */\n\tgetPathname() {\n\t\treturn this.url.pathname;\n\t}\n\n\t/**\n\t * Gets the port number part of uri as string.\n\t * @return {string}\n\t */\n\tgetPort() {\n\t\treturn this.url.port;\n\t}\n\n\t/**\n\t * Gets the protocol part of uri. E.g. <code>http:</code>.\n\t * @return {string}\n\t */\n\tgetProtocol() {\n\t\treturn this.url.protocol;\n\t}\n\n\t/**\n\t * Gets the search part of uri. Search value is retrieved from query\n\t * parameters.\n\t * @return {string}\n\t */\n\tgetSearch() {\n\t\tvar search = '';\n\t\tvar querystring = '';\n\t\tthis.getParameterNames().forEach((name) => {\n\t\t\tthis.getParameterValues(name).forEach((value) => {\n\t\t\t\tquerystring += name;\n\t\t\t\tif (core.isDef(value)) {\n\t\t\t\t\tquerystring += '=' + encodeURIComponent(value);\n\t\t\t\t}\n\t\t\t\tquerystring += '&';\n\t\t\t});\n\t\t});\n\t\tquerystring = querystring.slice(0, -1);\n\t\tif (querystring) {\n\t\t\tsearch += '?' + querystring;\n\t\t}\n\t\treturn search;\n\t}\n\n\t/**\n\t * Checks if uri contains the parameter.\n\t * @param {string} name\n\t * @return {boolean}\n\t */\n\thasParameter(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\treturn this.query.contains(name);\n\t}\n\n\t/**\n\t * Makes this URL unique by adding a random param to it. Useful for avoiding\n\t * cache.\n\t */\n\tmakeUnique() {\n\t\tthis.setParameterValue(Uri.RANDOM_PARAM, string.getRandomString());\n\t\treturn this;\n\t}\n\n\t/**\n\t * Maybe adds protocol and a hostname placeholder on a parial URI if needed.\n\t * Relevent for compatibility with <code>URL</code> native object.\n\t * @param {string=} opt_uri\n\t * @return {string} URI with protocol and hostname placeholder.\n\t */\n\tmaybeAddProtocolAndHostname_(opt_uri) {\n\t\tvar url = opt_uri;\n\t\tif (opt_uri.indexOf('://') === -1 &&\n\t\t\topt_uri.indexOf('javascript:') !== 0) { // jshint ignore:line\n\n\t\t\turl = Uri.DEFAULT_PROTOCOL;\n\t\t\tif (opt_uri[0] !== '/' || opt_uri[1] !== '/') {\n\t\t\t\turl += '//';\n\t\t\t}\n\n\t\t\tswitch (opt_uri.charAt(0)) {\n\t\t\t\tcase '.':\n\t\t\t\tcase '?':\n\t\t\t\tcase '#':\n\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\turl += '/';\n\t\t\t\t\turl += opt_uri;\n\t\t\t\t\tbreak;\n\t\t\t\tcase '':\n\t\t\t\tcase '/':\n\t\t\t\t\tif (opt_uri[1] !== '/') {\n\t\t\t\t\t\turl += Uri.HOSTNAME_PLACEHOLDER;\n\t\t\t\t\t}\n\t\t\t\t\turl += opt_uri;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\turl += opt_uri;\n\t\t\t}\n\t\t}\n\t\treturn url;\n\t}\n\n\t/**\n\t * Normalizes the parsed object to be in the expected standard.\n\t * @param {!Object}\n\t */\n\tstatic normalizeObject(parsed) {\n\t\tvar length = parsed.pathname ? parsed.pathname.length : 0;\n\t\tif (length > 1 && parsed.pathname[length - 1] === '/') {\n\t\t\tparsed.pathname = parsed.pathname.substr(0, length - 1);\n\t\t}\n\t\treturn parsed;\n\t}\n\n\t/**\n\t * Parses the given uri string into an object.\n\t * @param {*=} opt_uri Optional string URI to parse\n\t */\n\tstatic parse(opt_uri) {\n\t\treturn Uri.normalizeObject(parseFn_(opt_uri));\n\t}\n\n\t/**\n\t * Removes the named query parameter.\n\t * @param {string} name The parameter to remove.\n\t * @chainable\n\t */\n\tremoveParameter(name) {\n\t\tthis.ensureQueryInitialized_();\n\t\tthis.query.remove(name);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Removes uniqueness parameter of the uri.\n\t * @chainable\n\t */\n\tremoveUnique() {\n\t\tthis.removeParameter(Uri.RANDOM_PARAM);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the hash.\n\t * @param {string} hash\n\t * @chainable\n\t */\n\tsetHash(hash) {\n\t\tthis.url.hash = hash;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the hostname.\n\t * @param {string} hostname\n\t * @chainable\n\t */\n\tsetHostname(hostname) {\n\t\tthis.url.hostname = hostname;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the value of the named query parameters, clearing previous values\n\t * for that key.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value.\n\t * @chainable\n\t */\n\tsetParameterValue(name, value) {\n\t\tthis.removeParameter(name);\n\t\tthis.addParameterValue(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the values of the named query parameters, clearing previous values\n\t * for that key.\n\t * @param {string} key The parameter to set.\n\t * @param {*} value The new value.\n\t * @chainable\n\t */\n\tsetParameterValues(name, values) {\n\t\tthis.removeParameter(name);\n\t\tvalues.forEach((value) => this.addParameterValue(name, value));\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the pathname.\n\t * @param {string} pathname\n\t * @chainable\n\t */\n\tsetPathname(pathname) {\n\t\tthis.url.pathname = pathname;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the port number.\n\t * @param {*} port Port number.\n\t * @chainable\n\t */\n\tsetPort(port) {\n\t\tthis.url.port = port;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the function that will be used for parsing the original string uri\n\t * into an object.\n\t * @param {!function()} parseFn\n\t */\n\tstatic setParseFn(parseFn) {\n\t\tparseFn_ = parseFn;\n\t}\n\n\t/**\n\t * Sets the protocol. If missing <code>http:</code> is used as default.\n\t * @param {string} protocol\n\t * @chainable\n\t */\n\tsetProtocol(protocol) {\n\t\tthis.url.protocol = protocol;\n\t\tif (this.url.protocol[this.url.protocol.length - 1] !== ':') {\n\t\t\tthis.url.protocol += ':';\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * @return {string} The string form of the url.\n\t * @override\n\t */\n\ttoString() {\n\t\tvar href = '';\n\t\tvar host = this.getHost();\n\t\tif (host) {\n\t\t\thref += this.getProtocol() + '//';\n\t\t}\n\t\thref += host + this.getPathname() + this.getSearch() + this.getHash();\n\t\treturn href;\n\t}\n\n\t/**\n\t * Joins the given paths.\n\t * @param {string} basePath\n\t * @param {...string} ...paths Any number of paths to be joined with the base url.\n\t * @static\n\t */\n\tstatic joinPaths(basePath, ...paths) {\n\t\tif (basePath.charAt(basePath.length - 1) === '/') {\n\t\t\tbasePath = basePath.substring(0, basePath.length - 1);\n\t\t}\n\t\tpaths = paths.map(path => path.charAt(0) === '/' ? path.substring(1) : path);\n\t\treturn [basePath].concat(paths).join('/').replace(/\\/$/, '');\n\t}\n\n\t/**\n\t * URL-decodes the string. We need to specially handle '+'s because\n\t * the javascript library doesn't convert them to spaces.\n\t * @param {string} str The string to url decode.\n\t * @return {string} The decoded {@code str}.\n\t */\n\tstatic urlDecode(str) {\n\t\treturn decodeURIComponent(str.replace(/\\+/g, ' '));\n\t}\n\n}\n\n/**\n * Default protocol value.\n * @type {string}\n * @default http:\n * @static\n */\nUri.DEFAULT_PROTOCOL = 'http:';\n\n/**\n * Hostname placeholder. Relevant to internal usage only.\n * @type {string}\n * @static\n */\nUri.HOSTNAME_PLACEHOLDER = 'hostname' + Date.now();\n\n/**\n * Name used by the param generated by `makeUnique`.\n * @type {string}\n * @static\n */\nUri.RANDOM_PARAM = 'zx';\n\nexport default Uri;\n","/*!\n * Promises polyfill from Google's Closure Library.\n *\n *      Copyright 2013 The Closure Library Authors. All Rights Reserved.\n *\n * NOTE(eduardo): Promise support is not ready on all supported browsers,\n * therefore core.js is temporarily using Google's promises as polyfill. It\n * supports cancellable promises and has clean and fast implementation.\n */\n\n'use strict';\n\nimport { core } from 'metal';\nimport { async } from 'metal';\n\n/**\n * Provides a more strict interface for Thenables in terms of\n * http://promisesaplus.com for interop with {@see CancellablePromise}.\n *\n * @interface\n * @extends {IThenable.<TYPE>}\n * @template TYPE\n */\nvar Thenable = function() {};\n\n/**\n * Adds callbacks that will operate on the result of the Thenable, returning a\n * new child Promise.\n *\n * If the Thenable is fulfilled, the {@code onFulfilled} callback will be\n * invoked with the fulfillment value as argument, and the child Promise will\n * be fulfilled with the return value of the callback. If the callback throws\n * an exception, the child Promise will be rejected with the thrown value\n * instead.\n *\n * If the Thenable is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value of the callback or thrown value.\n *\n * @param {?(function(this:THIS, TYPE):\n *             (RESULT|IThenable.<RESULT>|Thenable))=} opt_onFulfilled A\n *     function that will be invoked with the fulfillment value if the Promise\n *     is fullfilled.\n * @param {?(function(*): *)=} opt_onRejected A function that will be invoked\n *     with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     with the default this.\n * @return {!CancellablePromise.<RESULT>} A new Promise that will receive the\n *     result of the fulfillment or rejection callback.\n * @template RESULT,THIS\n */\nThenable.prototype.then = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * {@code Thenable}.\n *\n * {@see addImplementation}.\n *\n * @const\n */\nThenable.IMPLEMENTED_BY_PROP = '$goog_Thenable';\n\n\n/**\n * Marks a given class (constructor) as an implementation of Thenable, so\n * that we can query that fact at runtime. The class must have already\n * implemented the interface.\n * Exports a 'then' method on the constructor prototype, so that the objects\n * also implement the extern {@see Thenable} interface for interop with\n * other Promise implementations.\n * @param {function(new:Thenable,...[?])} ctor The class constructor. The\n *     corresponding class must have already implemented the interface.\n */\nThenable.addImplementation = function(ctor) {\n  ctor.prototype.then = ctor.prototype.then;\n  ctor.prototype.$goog_Thenable = true;\n};\n\n\n/**\n * @param {*} object\n * @return {boolean} Whether a given instance implements {@code Thenable}.\n *     The class/superclass of the instance must call {@code addImplementation}.\n */\nThenable.isImplementedBy = function(object) {\n  if (!object) {\n    return false;\n  }\n  try {\n    return !!object.$goog_Thenable;\n  } catch (e) {\n    // Property access seems to be forbidden.\n    return false;\n  }\n};\n\n\n/**\n * Like bind(), except that a 'this object' is not required. Useful when the\n * target function is already bound.\n *\n * Usage:\n * var g = partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function bind() was\n *     invoked as a method of.\n */\nvar partial = function(fn) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(this, newArgs);\n  };\n};\n\n/**\n * Promises provide a result that may be resolved asynchronously. A Promise may\n * be resolved by being fulfilled or rejected with a value, which will be known\n * as the fulfillment value or the rejection reason. Whether fulfilled or\n * rejected, the Promise result is immutable once it is set.\n *\n * Promises may represent results of any type, including undefined. Rejection\n * reasons are typically Errors, but may also be of any type. Closure Promises\n * allow for optional type annotations that enforce that fulfillment values are\n * of the appropriate types at compile time.\n *\n * The result of a Promise is accessible by calling {@code then} and registering\n * {@code onFulfilled} and {@code onRejected} callbacks. Once the Promise\n * resolves, the relevant callbacks are invoked with the fulfillment value or\n * rejection reason as argument. Callbacks are always invoked in the order they\n * were registered, even when additional {@code then} calls are made from inside\n * another callback. A callback is always run asynchronously sometime after the\n * scope containing the registering {@code then} invocation has returned.\n *\n * If a Promise is resolved with another Promise, the first Promise will block\n * until the second is resolved, and then assumes the same result as the second\n * Promise. This allows Promises to depend on the results of other Promises,\n * linking together multiple asynchronous operations.\n *\n * This implementation is compatible with the Promises/A+ specification and\n * passes that specification's conformance test suite. A Closure Promise may be\n * resolved with a Promise instance (or sufficiently compatible Promise-like\n * object) created by other Promise implementations. From the specification,\n * Promise-like objects are known as \"Thenables\".\n *\n * @see http://promisesaplus.com/\n *\n * @param {function(\n *             this:RESOLVER_CONTEXT,\n *             function((TYPE|IThenable.<TYPE>|Thenable)),\n *             function(*)): void} resolver\n *     Initialization function that is invoked immediately with {@code resolve}\n *     and {@code reject} functions as arguments. The Promise is resolved or\n *     rejected with the first argument passed to either function.\n * @param {RESOLVER_CONTEXT=} opt_context An optional context for executing the\n *     resolver function. If unspecified, the resolver function will be executed\n *     in the default scope.\n * @constructor\n * @struct\n * @final\n * @implements {Thenable.<TYPE>}\n * @template TYPE,RESOLVER_CONTEXT\n */\nvar CancellablePromise = function(resolver, opt_context) {\n  /**\n   * The internal state of this Promise. Either PENDING, FULFILLED, REJECTED, or\n   * BLOCKED.\n   * @private {CancellablePromise.State_}\n   */\n  this.state_ = CancellablePromise.State_.PENDING;\n\n  /**\n   * The resolved result of the Promise. Immutable once set with either a\n   * fulfillment value or rejection reason.\n   * @private {*}\n   */\n  this.result_ = undefined;\n\n  /**\n   * For Promises created by calling {@code then()}, the originating parent.\n   * @private {CancellablePromise}\n   */\n  this.parent_ = null;\n\n  /**\n   * The list of {@code onFulfilled} and {@code onRejected} callbacks added to\n   * this Promise by calls to {@code then()}.\n   * @private {Array.<CancellablePromise.CallbackEntry_>}\n   */\n  this.callbackEntries_ = null;\n\n  /**\n   * Whether the Promise is in the queue of Promises to execute.\n   * @private {boolean}\n   */\n  this.executing_ = false;\n\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    /**\n     * A timeout ID used when the {@code UNHANDLED_REJECTION_DELAY} is greater\n     * than 0 milliseconds. The ID is set when the Promise is rejected, and\n     * cleared only if an {@code onRejected} callback is invoked for the\n     * Promise (or one of its descendants) before the delay is exceeded.\n     *\n     * If the rejection is not handled before the timeout completes, the\n     * rejection reason is passed to the unhandled rejection handler.\n     * @private {number}\n     */\n    this.unhandledRejectionId_ = 0;\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    /**\n     * When the {@code UNHANDLED_REJECTION_DELAY} is set to 0 milliseconds, a\n     * boolean that is set if the Promise is rejected, and reset to false if an\n     * {@code onRejected} callback is invoked for the Promise (or one of its\n     * descendants). If the rejection is not handled before the next timestep,\n     * the rejection reason is passed to the unhandled rejection handler.\n     * @private {boolean}\n     */\n    this.hadUnhandledRejection_ = false;\n  }\n\n  try {\n    var self = this;\n    resolver.call(\n      opt_context, function(value) {\n        self.resolve_(CancellablePromise.State_.FULFILLED, value);\n      }, function(reason) {\n        self.resolve_(CancellablePromise.State_.REJECTED, reason);\n      });\n  } catch (e) {\n    this.resolve_(CancellablePromise.State_.REJECTED, e);\n  }\n};\n\n/**\n * The delay in milliseconds before a rejected Promise's reason is passed to\n * the rejection handler. By default, the rejection handler rethrows the\n * rejection reason so that it appears in the developer console or\n * {@code window.onerror} handler.\n * Rejections are rethrown as quickly as possible by default. A negative value\n * disables rejection handling entirely.\n * @type {number}\n */\nCancellablePromise.UNHANDLED_REJECTION_DELAY = 0;\n\n\n/**\n * The possible internal states for a Promise. These states are not directly\n * observable to external callers.\n * @enum {number}\n * @private\n */\nCancellablePromise.State_ = {\n  /** The Promise is waiting for resolution. */\n  PENDING: 0,\n\n  /** The Promise is blocked waiting for the result of another Thenable. */\n  BLOCKED: 1,\n\n  /** The Promise has been resolved with a fulfillment value. */\n  FULFILLED: 2,\n\n  /** The Promise has been resolved with a rejection reason. */\n  REJECTED: 3\n};\n\n\n/**\n * Typedef for entries in the callback chain. Each call to {@code then},\n * {@code thenCatch}, or {@code thenAlways} creates an entry containing the\n * functions that may be invoked once the Promise is resolved.\n *\n * @typedef {{\n *   child: CancellablePromise,\n *   onFulfilled: function(*),\n *   onRejected: function(*)\n * }}\n * @private\n */\nCancellablePromise.CallbackEntry_ = null;\n\n\n/**\n * @param {(TYPE|Thenable.<TYPE>|Thenable)=} opt_value\n * @return {!CancellablePromise.<TYPE>} A new Promise that is immediately resolved\n *     with the given value.\n * @template TYPE\n */\nCancellablePromise.resolve = function(opt_value) {\n  return new CancellablePromise(function(resolve) {\n      resolve(opt_value);\n    });\n};\n\n\n/**\n * @param {*=} opt_reason\n * @return {!CancellablePromise} A new Promise that is immediately rejected with the\n *     given reason.\n */\nCancellablePromise.reject = function(opt_reason) {\n  return new CancellablePromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the result of the\n *     first Promise (or Promise-like) input to complete.\n * @template TYPE\n */\nCancellablePromise.race = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      if (!promises.length) {\n        resolve(undefined);\n      }\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(resolve, reject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<!Array.<TYPE>>} A Promise that receives a list of\n *     every fulfilled value once every input Promise (or Promise-like) is\n *     successfully fulfilled, or is rejected by the first rejection result.\n * @template TYPE\n */\nCancellablePromise.all = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toFulfill = promises.length;\n      var values = [];\n\n      if (!toFulfill) {\n        resolve(values);\n        return;\n      }\n\n      var onFulfill = function(index, value) {\n        toFulfill--;\n        values[index] = value;\n        if (toFulfill === 0) {\n          resolve(values);\n        }\n      };\n\n      var onReject = function(reason) {\n        reject(reason);\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(partial(onFulfill, i), onReject);\n      }\n    });\n};\n\n\n/**\n * @param {!Array.<!(Thenable.<TYPE>|Thenable)>} promises\n * @return {!CancellablePromise.<TYPE>} A Promise that receives the value of\n *     the first input to be fulfilled, or is rejected with a list of every\n *     rejection reason if all inputs are rejected.\n * @template TYPE\n */\nCancellablePromise.firstFulfilled = function(promises) {\n  return new CancellablePromise(function(resolve, reject) {\n      var toReject = promises.length;\n      var reasons = [];\n\n      if (!toReject) {\n        resolve(undefined);\n        return;\n      }\n\n      var onFulfill = function(value) {\n        resolve(value);\n      };\n\n      var onReject = function(index, reason) {\n        toReject--;\n        reasons[index] = reason;\n        if (toReject === 0) {\n          reject(reasons);\n        }\n      };\n\n      for (var i = 0, promise; (promise = promises[i]); i++) {\n        promise.then(onFulfill, partial(onReject, i));\n      }\n    });\n};\n\n\n/**\n * Adds callbacks that will operate on the result of the Promise, returning a\n * new child Promise.\n *\n * If the Promise is fulfilled, the {@code onFulfilled} callback will be invoked\n * with the fulfillment value as argument, and the child Promise will be\n * fulfilled with the return value of the callback. If the callback throws an\n * exception, the child Promise will be rejected with the thrown value instead.\n *\n * If the Promise is rejected, the {@code onRejected} callback will be invoked\n * with the rejection reason as argument, and the child Promise will be rejected\n * with the return value (or thrown value) of the callback.\n *\n * @override\n */\nCancellablePromise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {\n  return this.addChildPromise_(\n    core.isFunction(opt_onFulfilled) ? opt_onFulfilled : null,\n    core.isFunction(opt_onRejected) ? opt_onRejected : null,\n    opt_context);\n};\nThenable.addImplementation(CancellablePromise);\n\n\n/**\n * Adds a callback that will be invoked whether the Promise is fulfilled or\n * rejected. The callback receives no argument, and no new child Promise is\n * created. This is useful for ensuring that cleanup takes place after certain\n * asynchronous operations. Callbacks added with {@code thenAlways} will be\n * executed in the same order with other calls to {@code then},\n * {@code thenAlways}, or {@code thenCatch}.\n *\n * Since it does not produce a new child Promise, cancellation propagation is\n * not prevented by adding callbacks with {@code thenAlways}. A Promise that has\n * a cleanup handler added with {@code thenAlways} will be canceled if all of\n * its children created by {@code then} (or {@code thenCatch}) are canceled.\n *\n * @param {function(this:THIS): void} onResolved A function that will be invoked\n *     when the Promise is resolved.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise.<TYPE>} This Promise, for chaining additional calls.\n * @template THIS\n */\nCancellablePromise.prototype.thenAlways = function(onResolved, opt_context) {\n  var callback = function() {\n    try {\n      // Ensure that no arguments are passed to onResolved.\n      onResolved.call(opt_context);\n    } catch (err) {\n      CancellablePromise.handleRejection_.call(null, err);\n    }\n  };\n\n  this.addCallbackEntry_({\n    child: null,\n    onRejected: callback,\n    onFulfilled: callback\n  });\n  return this;\n};\n\n\n/**\n * Adds a callback that will be invoked only if the Promise is rejected. This\n * is equivalent to {@code then(null, onRejected)}.\n *\n * @param {!function(this:THIS, *): *} onRejected A function that will be\n *     invoked with the rejection reason if the Promise is rejected.\n * @param {THIS=} opt_context An optional context object that will be the\n *     execution context for the callbacks. By default, functions are executed\n *     in the global scope.\n * @return {!CancellablePromise} A new Promise that will receive the result of the\n *     callback.\n * @template THIS\n */\nCancellablePromise.prototype.thenCatch = function(onRejected, opt_context) {\n  return this.addChildPromise_(null, onRejected, opt_context);\n};\n\n/**\n * Alias of {@link CancellablePromise.prototype.thenCatch}\n */\nCancellablePromise.prototype.catch = CancellablePromise.prototype.thenCatch;\n\n\n/**\n * Cancels the Promise if it is still pending by rejecting it with a cancel\n * Error. No action is performed if the Promise is already resolved.\n *\n * All child Promises of the canceled Promise will be rejected with the same\n * cancel error, as with normal Promise rejection. If the Promise to be canceled\n * is the only child of a pending Promise, the parent Promise will also be\n * canceled. Cancellation may propagate upward through multiple generations.\n *\n * @param {string=} opt_message An optional debugging message for describing the\n *     cancellation reason.\n */\nCancellablePromise.prototype.cancel = function(opt_message) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    async.run(function() {\n      var err = new CancellablePromise.CancellationError(opt_message);\n      err.IS_CANCELLATION_ERROR = true;\n      this.cancelInternal_(err);\n    }, this);\n  }\n};\n\n\n/**\n * Cancels this Promise with the given error.\n *\n * @param {!Error} err The cancellation error.\n * @private\n */\nCancellablePromise.prototype.cancelInternal_ = function(err) {\n  if (this.state_ === CancellablePromise.State_.PENDING) {\n    if (this.parent_) {\n      // Cancel the Promise and remove it from the parent's child list.\n      this.parent_.cancelChild_(this, err);\n    } else {\n      this.resolve_(CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Cancels a child Promise from the list of callback entries. If the Promise has\n * not already been resolved, reject it with a cancel error. If there are no\n * other children in the list of callback entries, propagate the cancellation\n * by canceling this Promise as well.\n *\n * @param {!CancellablePromise} childPromise The Promise to cancel.\n * @param {!Error} err The cancel error to use for rejecting the Promise.\n * @private\n */\nCancellablePromise.prototype.cancelChild_ = function(childPromise, err) {\n  if (!this.callbackEntries_) {\n    return;\n  }\n  var childCount = 0;\n  var childIndex = -1;\n\n  // Find the callback entry for the childPromise, and count whether there are\n  // additional child Promises.\n  for (var i = 0, entry; (entry = this.callbackEntries_[i]); i++) {\n    var child = entry.child;\n    if (child) {\n      childCount++;\n      if (child === childPromise) {\n        childIndex = i;\n      }\n      if (childIndex >= 0 && childCount > 1) {\n        break;\n      }\n    }\n  }\n\n  // If the child Promise was the only child, cancel this Promise as well.\n  // Otherwise, reject only the child Promise with the cancel error.\n  if (childIndex >= 0) {\n    if (this.state_ === CancellablePromise.State_.PENDING && childCount === 1) {\n      this.cancelInternal_(err);\n    } else {\n      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];\n      this.executeCallback_(\n        callbackEntry, CancellablePromise.State_.REJECTED, err);\n    }\n  }\n};\n\n\n/**\n * Adds a callback entry to the current Promise, and schedules callback\n * execution if the Promise has already been resolved.\n *\n * @param {CancellablePromise.CallbackEntry_} callbackEntry Record containing\n *     {@code onFulfilled} and {@code onRejected} callbacks to execute after\n *     the Promise is resolved.\n * @private\n */\nCancellablePromise.prototype.addCallbackEntry_ = function(callbackEntry) {\n  if ((!this.callbackEntries_ || !this.callbackEntries_.length) &&\n    (this.state_ === CancellablePromise.State_.FULFILLED ||\n    this.state_ === CancellablePromise.State_.REJECTED)) {\n    this.scheduleCallbacks_();\n  }\n  if (!this.callbackEntries_) {\n    this.callbackEntries_ = [];\n  }\n  this.callbackEntries_.push(callbackEntry);\n};\n\n\n/**\n * Creates a child Promise and adds it to the callback entry list. The result of\n * the child Promise is determined by the state of the parent Promise and the\n * result of the {@code onFulfilled} or {@code onRejected} callbacks as\n * specified in the Promise resolution procedure.\n *\n * @see http://promisesaplus.com/#the__method\n *\n * @param {?function(this:THIS, TYPE):\n *          (RESULT|CancellablePromise.<RESULT>|Thenable)} onFulfilled A callback that\n *     will be invoked if the Promise is fullfilled, or null.\n * @param {?function(this:THIS, *): *} onRejected A callback that will be\n *     invoked if the Promise is rejected, or null.\n * @param {THIS=} opt_context An optional execution context for the callbacks.\n *     in the default calling context.\n * @return {!CancellablePromise} The child Promise.\n * @template RESULT,THIS\n * @private\n */\nCancellablePromise.prototype.addChildPromise_ = function(\nonFulfilled, onRejected, opt_context) {\n\n  var callbackEntry = {\n    child: null,\n    onFulfilled: null,\n    onRejected: null\n  };\n\n  callbackEntry.child = new CancellablePromise(function(resolve, reject) {\n    // Invoke onFulfilled, or resolve with the parent's value if absent.\n    callbackEntry.onFulfilled = onFulfilled ? function(value) {\n      try {\n        var result = onFulfilled.call(opt_context, value);\n        resolve(result);\n      } catch (err) {\n        reject(err);\n      }\n    } : resolve;\n\n    // Invoke onRejected, or reject with the parent's reason if absent.\n    callbackEntry.onRejected = onRejected ? function(reason) {\n      try {\n        var result = onRejected.call(opt_context, reason);\n        if (!core.isDef(result) && reason.IS_CANCELLATION_ERROR) {\n          // Propagate cancellation to children if no other result is returned.\n          reject(reason);\n        } else {\n          resolve(result);\n        }\n      } catch (err) {\n        reject(err);\n      }\n    } : reject;\n  });\n\n  callbackEntry.child.parent_ = this;\n  this.addCallbackEntry_(\n    /** @type {CancellablePromise.CallbackEntry_} */ (callbackEntry));\n  return callbackEntry.child;\n};\n\n\n/**\n * Unblocks the Promise and fulfills it with the given value.\n *\n * @param {TYPE} value\n * @private\n */\nCancellablePromise.prototype.unblockAndFulfill_ = function(value) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.FULFILLED, value);\n};\n\n\n/**\n * Unblocks the Promise and rejects it with the given rejection reason.\n *\n * @param {*} reason\n * @private\n */\nCancellablePromise.prototype.unblockAndReject_ = function(reason) {\n  if (this.state_ !== CancellablePromise.State_.BLOCKED) {\n    throw new Error('CancellablePromise is not blocked.');\n  }\n  this.state_ = CancellablePromise.State_.PENDING;\n  this.resolve_(CancellablePromise.State_.REJECTED, reason);\n};\n\n\n/**\n * Attempts to resolve a Promise with a given resolution state and value. This\n * is a no-op if the given Promise has already been resolved.\n *\n * If the given result is a Thenable (such as another Promise), the Promise will\n * be resolved with the same state and result as the Thenable once it is itself\n * resolved.\n *\n * If the given result is not a Thenable, the Promise will be fulfilled or\n * rejected with that result based on the given state.\n *\n * @see http://promisesaplus.com/#the_promise_resolution_procedure\n *\n * @param {CancellablePromise.State_} state\n * @param {*} x The result to apply to the Promise.\n * @private\n */\nCancellablePromise.prototype.resolve_ = function(state, x) {\n  if (this.state_ !== CancellablePromise.State_.PENDING) {\n    return;\n  }\n\n  if (this === x) {\n    state = CancellablePromise.State_.REJECTED;\n    x = new TypeError('CancellablePromise cannot resolve to itself');\n\n  } else if (Thenable.isImplementedBy(x)) {\n    x = /** @type {!Thenable} */ (x);\n    this.state_ = CancellablePromise.State_.BLOCKED;\n    x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);\n    return;\n\n  } else if (core.isObject(x)) {\n    try {\n      var then = x.then;\n      if (core.isFunction(then)) {\n        this.tryThen_(x, then);\n        return;\n      }\n    } catch (e) {\n      state = CancellablePromise.State_.REJECTED;\n      x = e;\n    }\n  }\n\n  this.result_ = x;\n  this.state_ = state;\n  this.scheduleCallbacks_();\n\n  if (state === CancellablePromise.State_.REJECTED && !x.IS_CANCELLATION_ERROR) {\n    CancellablePromise.addUnhandledRejection_(this, x);\n  }\n};\n\n\n/**\n * Attempts to call the {@code then} method on an object in the hopes that it is\n * a Promise-compatible instance. This allows interoperation between different\n * Promise implementations, however a non-compliant object may cause a Promise\n * to hang indefinitely. If the {@code then} method throws an exception, the\n * dependent Promise will be rejected with the thrown value.\n *\n * @see http://promisesaplus.com/#point-70\n *\n * @param {Thenable} thenable An object with a {@code then} method that may be\n *     compatible with the Promise/A+ specification.\n * @param {!Function} then The {@code then} method of the Thenable object.\n * @private\n */\nCancellablePromise.prototype.tryThen_ = function(thenable, then) {\n  this.state_ = CancellablePromise.State_.BLOCKED;\n  var promise = this;\n  var called = false;\n\n  var resolve = function(value) {\n    if (!called) {\n      called = true;\n      promise.unblockAndFulfill_(value);\n    }\n  };\n\n  var reject = function(reason) {\n    if (!called) {\n      called = true;\n      promise.unblockAndReject_(reason);\n    }\n  };\n\n  try {\n    then.call(thenable, resolve, reject);\n  } catch (e) {\n    reject(e);\n  }\n};\n\n\n/**\n * Executes the pending callbacks of a resolved Promise after a timeout.\n *\n * Section 2.2.4 of the Promises/A+ specification requires that Promise\n * callbacks must only be invoked from a call stack that only contains Promise\n * implementation code, which we accomplish by invoking callback execution after\n * a timeout. If {@code startExecution_} is called multiple times for the same\n * Promise, the callback chain will be evaluated only once. Additional callbacks\n * may be added during the evaluation phase, and will be executed in the same\n * event loop.\n *\n * All Promises added to the waiting list during the same browser event loop\n * will be executed in one batch to avoid using a separate timeout per Promise.\n *\n * @private\n */\nCancellablePromise.prototype.scheduleCallbacks_ = function() {\n  if (!this.executing_) {\n    this.executing_ = true;\n    async.run(this.executeCallbacks_, this);\n  }\n};\n\n\n/**\n * Executes all pending callbacks for this Promise.\n *\n * @private\n */\nCancellablePromise.prototype.executeCallbacks_ = function() {\n  while (this.callbackEntries_ && this.callbackEntries_.length) {\n    var entries = this.callbackEntries_;\n    this.callbackEntries_ = [];\n\n    for (var i = 0; i < entries.length; i++) {\n      this.executeCallback_(entries[i], this.state_, this.result_);\n    }\n  }\n  this.executing_ = false;\n};\n\n\n/**\n * Executes a pending callback for this Promise. Invokes an {@code onFulfilled}\n * or {@code onRejected} callback based on the resolved state of the Promise.\n *\n * @param {!CancellablePromise.CallbackEntry_} callbackEntry An entry containing the\n *     onFulfilled and/or onRejected callbacks for this step.\n * @param {CancellablePromise.State_} state The resolution status of the Promise,\n *     either FULFILLED or REJECTED.\n * @param {*} result The resolved result of the Promise.\n * @private\n */\nCancellablePromise.prototype.executeCallback_ = function(\ncallbackEntry, state, result) {\n  if (state === CancellablePromise.State_.FULFILLED) {\n    callbackEntry.onFulfilled(result);\n  } else {\n    this.removeUnhandledRejection_();\n    callbackEntry.onRejected(result);\n  }\n};\n\n\n/**\n * Marks this rejected Promise as having being handled. Also marks any parent\n * Promises in the rejected state as handled. The rejection handler will no\n * longer be invoked for this Promise (if it has not been called already).\n *\n * @private\n */\nCancellablePromise.prototype.removeUnhandledRejection_ = function() {\n  var p;\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    for (p = this; p && p.unhandledRejectionId_; p = p.parent_) {\n      clearTimeout(p.unhandledRejectionId_);\n      p.unhandledRejectionId_ = 0;\n    }\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    for (p = this; p && p.hadUnhandledRejection_; p = p.parent_) {\n      p.hadUnhandledRejection_ = false;\n    }\n  }\n};\n\n\n/**\n * Marks this rejected Promise as unhandled. If no {@code onRejected} callback\n * is called for this Promise before the {@code UNHANDLED_REJECTION_DELAY}\n * expires, the reason will be passed to the unhandled rejection handler. The\n * handler typically rethrows the rejection reason so that it becomes visible in\n * the developer console.\n *\n * @param {!CancellablePromise} promise The rejected Promise.\n * @param {*} reason The Promise rejection reason.\n * @private\n */\nCancellablePromise.addUnhandledRejection_ = function(promise, reason) {\n  if (CancellablePromise.UNHANDLED_REJECTION_DELAY > 0) {\n    promise.unhandledRejectionId_ = setTimeout(function() {\n      CancellablePromise.handleRejection_.call(null, reason);\n    }, CancellablePromise.UNHANDLED_REJECTION_DELAY);\n\n  } else if (CancellablePromise.UNHANDLED_REJECTION_DELAY === 0) {\n    promise.hadUnhandledRejection_ = true;\n    async.run(function() {\n      if (promise.hadUnhandledRejection_) {\n        CancellablePromise.handleRejection_.call(null, reason);\n      }\n    });\n  }\n};\n\n\n/**\n * A method that is invoked with the rejection reasons for Promises that are\n * rejected but have no {@code onRejected} callbacks registered yet.\n * @type {function(*)}\n * @private\n */\nCancellablePromise.handleRejection_ = async.throwException;\n\n\n/**\n * Sets a handler that will be called with reasons from unhandled rejected\n * Promises. If the rejected Promise (or one of its descendants) has an\n * {@code onRejected} callback registered, the rejection will be considered\n * handled, and the rejection handler will not be called.\n *\n * By default, unhandled rejections are rethrown so that the error may be\n * captured by the developer console or a {@code window.onerror} handler.\n *\n * @param {function(*)} handler A function that will be called with reasons from\n *     rejected Promises. Defaults to {@code async.throwException}.\n */\nCancellablePromise.setUnhandledRejectionHandler = function(handler) {\n  CancellablePromise.handleRejection_ = handler;\n};\n\n\n\n/**\n * Error used as a rejection reason for canceled Promises.\n *\n * @param {string=} opt_message\n * @constructor\n * @extends {Error}\n * @final\n */\nCancellablePromise.CancellationError = class extends Error {\n  constructor(opt_message) {\n     super(opt_message);\n\n     if (opt_message) {\n       this.message = opt_message;\n     }\n   }\n};\n\n/** @override */\nCancellablePromise.CancellationError.prototype.name = 'cancel';\n\nexport {CancellablePromise};\nexport default CancellablePromise;\n","'use strict';\n\nimport { core } from 'metal';\nimport Uri from 'metal-uri';\nimport { CancellablePromise as Promise } from 'metal-promise';\n\nclass Ajax {\n\n\t/**\n\t * XmlHttpRequest's getAllResponseHeaders() method returns a string of\n\t * response headers according to the format described on the spec:\n\t * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}.\n\t * This method parses that string into a user-friendly name/value pair\n\t * object.\n\t * @param {string} allHeaders All headers as string.\n\t * @return {!Array.<Object<string, string>>}\n\t */\n\tstatic parseResponseHeaders(allHeaders) {\n\t\tvar headers = [];\n\t\tif (!allHeaders) {\n\t\t\treturn headers;\n\t\t}\n\t\tvar pairs = allHeaders.split('\\u000d\\u000a');\n\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\tvar index = pairs[i].indexOf('\\u003a\\u0020');\n\t\t\tif (index > 0) {\n\t\t\t\tvar name = pairs[i].substring(0, index);\n\t\t\t\tvar value = pairs[i].substring(index + 2);\n\t\t\t\theaders.push({\n\t\t\t\t\tname: name,\n\t\t\t\t\tvalue: value\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn headers;\n\t}\n\n\t/**\n\t * Requests the url using XMLHttpRequest.\n\t * @param {!string} url\n\t * @param {!string} method\n\t * @param {?string} body\n\t * @param {MultiMap=} opt_headers\n\t * @param {MultiMap=} opt_params\n\t * @param {number=} opt_timeout\n\t * @param {boolean=} opt_sync\n\t * @param {boolean=} opt_withCredentials\n\t * @return {Promise} Deferred ajax request.\n\t * @protected\n\t */\n\tstatic request(url, method, body, opt_headers, opt_params, opt_timeout, opt_sync, opt_withCredentials) {\n\t\tvar request = new XMLHttpRequest();\n\n\t\tvar promise = new Promise(function(resolve, reject) {\n\t\t\trequest.onload = function() {\n\t\t\t\tif (request.aborted) {\n\t\t\t\t\trequest.onerror();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tresolve(request);\n\t\t\t};\n\t\t\trequest.onerror = function() {\n\t\t\t\tvar error = new Error('Request error');\n\t\t\t\terror.request = request;\n\t\t\t\treject(error);\n\t\t\t};\n\t\t}).thenCatch(function(reason) {\n\t\t\trequest.abort();\n\t\t\tthrow reason;\n\t\t}).thenAlways(function() {\n\t\t\tclearTimeout(timeout);\n\t\t});\n\n\t\tif (opt_params) {\n\t\t\turl = new Uri(url).addParametersFromMultiMap(opt_params).toString();\n\t\t}\n\n\t\trequest.open(method, url, !opt_sync);\n\n\t\tif (opt_withCredentials) {\n\t\t\trequest.withCredentials = true;\n\t\t}\n\n\t\tif (opt_headers) {\n\t\t\topt_headers.names().forEach(function(name) {\n\t\t\t\trequest.setRequestHeader(name, opt_headers.getAll(name).join(', '));\n\t\t\t});\n\t\t}\n\n\t\trequest.send(core.isDef(body) ? body : null);\n\n\t\tif (core.isDefAndNotNull(opt_timeout)) {\n\t\t\tvar timeout = setTimeout(function() {\n\t\t\t\tpromise.cancel('Request timeout');\n\t\t\t}, opt_timeout);\n\t\t}\n\n\t\treturn promise;\n\t}\n\n}\n\nexport default Ajax;\n","'use strict';\n\n/**\n * Provides a convenient interface for data transport.\n * @interface\n */\nclass Transport {\n\n\t/**\n\t * Sends a message for the specified client.\n\t * @param {!ClientRequest} clientRequest\n\t * @return {!Promise} Deferred request.\n\t */\n\tsend() {}\n\n}\n\nexport default Transport;\n","'use strict';\n\nimport Ajax from 'metal-ajax';\nimport Transport from '../Transport';\nimport ClientResponse from '../ClientResponse';\n\n/**\n * The implementation of an ajax transport to be used with {@link Launchpad}.\n * @extends {Transport}\n */\nclass AjaxTransport extends Transport {\n\t/**\n\t * @inheritDoc\n\t */\n\tsend(clientRequest) {\n\t\tvar deferred = Ajax.request(\n\t\t\tclientRequest.url(), clientRequest.method(), clientRequest.body(),\n\t\t\tclientRequest.headers(), clientRequest.params(), null, false, true);\n\n\t\treturn deferred.then(function(response) {\n\t\t\tvar clientResponse = new ClientResponse(clientRequest);\n\t\t\tclientResponse.body(response.responseText);\n\t\t\tclientResponse.statusCode(response.status);\n\t\t\tclientResponse.statusText(response.statusText);\n\t\t\tAjax.parseResponseHeaders(response.getAllResponseHeaders()).forEach(function(header) {\n\t\t\t\tclientResponse.header(header.name, header.value);\n\t\t\t});\n\t\t\treturn clientResponse;\n\t\t});\n\t}\n}\n\nexport default AjaxTransport;\n","'use strict';\n\nimport AjaxTransport from './browser/AjaxTransport';\n\n/**\n * Provides a factory for data transport.\n */\nclass TransportFactory {\n\tconstructor() {\n\t\tthis.transports = {};\n\t\tthis.transports[TransportFactory.DEFAULT_TRANSPORT_NAME] = TransportFactory[TransportFactory.DEFAULT_TRANSPORT_NAME];\n\t}\n\n\t/**\n\t * Returns {@link TransportFactory} instance.\n\t */\n\tstatic instance() {\n\t\tif (!TransportFactory.instance_) {\n\t\t\tTransportFactory.instance_ = new TransportFactory();\n\t\t}\n\t\treturn TransportFactory.instance_;\n\t}\n\n\t/**\n\t * Gets an instance of the transport implementation with the given name.\n\t * @param {string} implementationName\n\t * @return {!Transport}\n\t */\n\tget(implementationName) {\n\t\tvar TransportClass = this.transports[implementationName];\n\n\t\tif (!TransportClass) {\n\t\t\tthrow new Error('Invalid transport name: ' + implementationName);\n\t\t}\n\n\t\ttry {\n\t\t\treturn new (TransportClass)();\n\t\t} catch (err) {\n\t\t\tthrow new Error('Can\\'t create transport', err);\n\t\t}\n\t}\n\n\t/**\n\t * Returns the default transport implementation.\n\t * @return {!Transport}\n\t */\n\tgetDefault() {\n\t\treturn this.get(TransportFactory.DEFAULT_TRANSPORT_NAME);\n\t}\n}\n\nTransportFactory.DEFAULT_TRANSPORT_NAME = 'default';\n\nTransportFactory[TransportFactory.DEFAULT_TRANSPORT_NAME] = AjaxTransport;\n\nexport default TransportFactory;\n","'use strict';\n\nimport { core } from 'metal';\nimport Auth from './Auth';\nimport Base64 from '../crypt/Base64';\nimport Embodied from '../api-query/Embodied';\nimport Filter from '../api-query/Filter';\nimport Query from '../api-query/Query';\nimport TransportFactory from './TransportFactory';\nimport ClientRequest from './ClientRequest';\nimport MultiMap from 'metal-multimap';\nimport Uri from 'metal-uri';\n\nvar io;\n\n// Optimistic initialization of `io` reference from global `window.io`.\nif (typeof window !== 'undefined') {\n\tio = window.io;\n}\n\n/**\n * The main class for making api requests. Sending requests returns a promise that is\n * resolved when the response arrives. Usage example:\n * ```javascript\n * Launchpad\n *   .url('/data/tasks')\n *   .post({desc: 'Buy milkl'})\n *   .then(function(response) {\n *     // Handle response here.\n *     console.log(response.body())\n *   });\n * ```\n */\nclass Launchpad {\n\t/**\n\t * Launchpad constructor function.\n\t * @param {string} url The base url.\n\t * @param {...string} paths Any amount of paths to be appended to the base url.\n\t * @constructor\n\t */\n\tconstructor(url, ...paths) {\n\t\tif (arguments.length === 0) {\n\t\t\tthrow new Error('Invalid arguments, try `new Launchpad(baseUrl, url)`');\n\t\t}\n\n\t\tthis.auth_ = null;\n\t\tthis.body_ = null;\n\t\tthis.url_ = Uri.joinPaths(url || '', ...paths);\n\t\tthis.headers_ = new MultiMap();\n\t\tthis.params_ = new MultiMap();\n\n\t\tthis.header('Content-Type', 'application/json');\n\t\tthis.header('X-PJAX', 'true');\n\t\tthis.header('X-Requested-With', 'XMLHttpRequest');\n\t}\n\n\t/**\n\t * Adds an aggregation to this {@link Query} instance.\n\t * @param {string} name The aggregation name.\n\t * @param {!Aggregation|string} aggregationOrField Either an\n\t *   {@link Aggregation} instance or the name of the aggregation field.\n\t * @param {string=} opt_operator The aggregation operator.\n\t * @chainable\n\t */\n\taggregate(name, aggregationOrField, opt_operator) {\n\t\tthis.getOrCreateQuery_().aggregate(name, aggregationOrField, opt_operator);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds authorization information to this request.\n\t * @param {!Auth|string} authOrTokenOrUsername Either an {@link Auth} instance,\n\t *   an authorization token, or the username.\n\t * @param {string=} opt_password If a username is given as the first param,\n\t *   this should be the password.\n\t * @chainable\n\t */\n\tauth(authOrTokenOrUsername, opt_password) {\n\t\tthis.auth_ = authOrTokenOrUsername;\n\t\tif (!(this.auth_ instanceof Auth)) {\n\t\t\tthis.auth_ = Auth.create(authOrTokenOrUsername, opt_password);\n\t\t}\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the body that will be sent with this request.\n\t * @param {*} body\n\t * @chainable\n\t */\n\tbody(body) {\n\t\tthis.body_ = body;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Converts the given body object to query params.\n\t * @param {!ClientRequest} clientRequest\n\t * @param {*} body\n\t * @protected\n\t */\n\tconvertBodyToParams_(clientRequest, body) {\n\t\tif (core.isString(body)) {\n\t\t\tbody = {\n\t\t\t\tbody: body\n\t\t\t};\n\t\t} else if (body instanceof Embodied) {\n\t\t\tbody = body.body();\n\t\t}\n\t\tObject.keys(body || {}).forEach(name => clientRequest.param(name, body[name]));\n\t}\n\n\t/**\n\t * Sets this request's query type to \"count\".\n\t * @chainnable\n\t */\n\tcount() {\n\t\tthis.getOrCreateQuery_().type('count');\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates client request and encode.\n\t * @param {string} method\n\t * @param {*} body\n\t * @return {!ClientRequest} clientRequest\n\t * @protected\n\t */\n\tcreateClientRequest_(method, body) {\n\t\tvar clientRequest = new ClientRequest();\n\n\t\tclientRequest.body(body || this.body_);\n\n\t\tif (!core.isDefAndNotNull(clientRequest.body())) {\n\t\t\tif (this.query_) {\n\t\t\t\tclientRequest.body(this.query_.body());\n\t\t\t} else if (this.formData_) {\n\t\t\t\tclientRequest.body(this.formData_);\n\t\t\t}\n\t\t}\n\n\t\tclientRequest.method(method);\n\t\tclientRequest.headers(this.headers());\n\t\tclientRequest.params(this.params());\n\t\tclientRequest.url(this.url());\n\n\t\tthis.encode(clientRequest);\n\n\t\treturn clientRequest;\n\t}\n\n\t/**\n\t * Decodes clientResponse body, parsing the body for example.\n\t * @param {!ClientResponse} clientResponse The response object to be decoded.\n\t * @return {!ClientResponse} The decoded response.\n\t */\n\tdecode(clientResponse) {\n\t\tif (Launchpad.isContentTypeJson(clientResponse)) {\n\t\t\ttry {\n\t\t\t\tclientResponse.body(JSON.parse(clientResponse.body()));\n\t\t\t} catch (err) {}\n\t\t}\n\t\treturn clientResponse;\n\t}\n\n\t/**\n\t * Sends message with the DELETE http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tdelete(opt_body) {\n\t\treturn this.sendAsync('DELETE', opt_body);\n\t}\n\n\t/**\n\t * Encodes the given {@link ClientRequest}, converting its body to an appropriate\n\t * format for example.\n\t * @param {!ClientRequest} clientRequest The request object to encode.\n\t * @return {!ClientRequest} The encoded request.\n\t */\n\tencode(clientRequest) {\n\t\tvar body = clientRequest.body();\n\n\t\tif (core.isElement(body)) {\n\t\t\tbody = new FormData(body);\n\t\t\tclientRequest.body(body);\n\t\t}\n\n\t\tbody = this.wrapWithQuery_(body);\n\t\tif (clientRequest.method() === 'GET') {\n\t\t\tthis.convertBodyToParams_(clientRequest, body);\n\t\t\tclientRequest.removeBody();\n\t\t\tbody = null;\n\t\t}\n\n\t\tif (typeof FormData !== 'undefined' && body instanceof FormData) {\n\t\t\tclientRequest.headers().remove('content-type');\n\t\t} else if (body instanceof Embodied) {\n\t\t\tclientRequest.body(body.toString());\n\t\t} else if (Launchpad.isContentTypeJson(clientRequest)) {\n\t\t\tclientRequest.body(JSON.stringify(clientRequest.body()));\n\t\t}\n\n\t\tthis.encodeParams_(clientRequest);\n\t\tthis.resolveAuthentication_(clientRequest);\n\n\t\treturn clientRequest;\n\t}\n\n\t/**\n\t * Encodes the params for the given request, according to their types.\n\t * @param {!ClientRequest} clientRequest\n\t * @protected\n\t */\n\tencodeParams_(clientRequest) {\n\t\tvar params = clientRequest.params();\n\t\tparams.names().forEach(function(name) {\n\t\t\tvar values = params.getAll(name);\n\t\t\tvalues.forEach(function(value, index) {\n\t\t\t\tif (value instanceof Embodied) {\n\t\t\t\t\tvalue = value.toString();\n\t\t\t\t} else if (core.isObject(value) || (value instanceof Array)) {\n\t\t\t\t\tvalue = JSON.stringify(value);\n\t\t\t\t}\n\t\t\t\tvalues[index] = value;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Adds a filter to this request's {@link Query}.\n\t * @param {!Filter|string} fieldOrFilter Either a Filter instance or the\n\t *   name of the field to filter by.\n\t * @param {*=} opt_operatorOrValue Either the field's operator or its value.\n\t * @param {*=} opt_value The filter's value.\n\t * @chainable\n\t */\n\tfilter(fieldOrFilter, opt_operatorOrValue, opt_value) {\n\t\tthis.getOrCreateQuery_().filter(fieldOrFilter, opt_operatorOrValue, opt_value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a key/value pair to be sent via the body in a `multipart/form-data` format.\n\t * If the body is set by other means (for example, through the `body` method), this\n\t * will be ignored.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tform(name, value) {\n\t\tif (typeof FormData === 'undefined') {\n\t\t\tthrow new Error('form() is only available when FormData API is available.');\n\t\t}\n\n\t\tif (!this.formData_) {\n\t\t\tthis.formData_ = new FormData();\n\t\t}\n\t\tthis.formData_.append(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sends message with the GET http verb.\n\t * @param {*=} opt_params Params to be added to the request url.\n\t * @return {!CancellablePromise}\n\t */\n\tget(opt_params) {\n\t\treturn this.sendAsync('GET', opt_params);\n\t}\n\n\t/**\n\t * Gets the currently used {@link Query} object. If none exists yet,\n\t * a new one is created.\n\t * @return {!Query}\n\t * @protected\n\t */\n\tgetOrCreateQuery_() {\n\t\tif (!this.query_) {\n\t\t\tthis.query_ = new Query();\n\t\t}\n\t\treturn this.query_;\n\t}\n\n\t/**\n\t * Adds a header. If the header with the same name already exists, it will\n\t * not be overwritten, but new value will be stored. The order is preserved.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\theader(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.headers_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the headers.\n\t * @return {!MultiMap}\n\t */\n\theaders() {\n\t\treturn this.headers_;\n\t}\n\n\t/**\n\t * Adds a highlight entry to this request's {@link Query} instance.\n\t * @param {string} field The field's name.\n\t * @chainable\n\t */\n\thighlight(field) {\n\t\tthis.getOrCreateQuery_().highlight(field);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the limit for this request's {@link Query}.\n\t * @param {number} limit The max amount of entries that this request should return.\n\t * @chainable\n\t */\n\tlimit(limit) {\n\t\tthis.getOrCreateQuery_().limit(limit);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Sets the offset for this request's {@link Query}.\n\t * @param {number} offset The index of the first entry that should be returned\n\t *   by this query.\n\t * @chainable\n\t */\n\toffset(offset) {\n\t\tthis.getOrCreateQuery_().offset(offset);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a query. If the query with the same name already exists, it will not\n\t * be overwritten, but new value will be stored. The order is preserved.\n\t * @param {string} name\n\t * @param {*} value\n\t * @chainable\n\t */\n\tparam(name, value) {\n\t\tif (arguments.length !== 2) {\n\t\t\tthrow new Error('Invalid arguments');\n\t\t}\n\t\tthis.params_.set(name, value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Gets the query strings map.\n\t * @return {!MultiMap}\n\t */\n\tparams() {\n\t\treturn this.params_;\n\t}\n\n\t/**\n\t * Sends message with the PATCH http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tpatch(opt_body) {\n\t\treturn this.sendAsync('PATCH', opt_body);\n\t}\n\n\t/**\n\t * Creates a new {@link Launchpad} instance for handling the url resulting in the\n\t * union of the current url with the given paths.\n\t * @param {...string} paths Any number of paths.\n\t * @return {!Launchpad} A new {@link Launchpad} instance for handling the given paths.\n\t */\n\tpath(...paths) {\n\t\treturn new Launchpad(this.url(), ...paths).use(this.customTransport_);\n\t}\n\n\t/**\n\t * Sends message with the POST http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tpost(opt_body) {\n\t\treturn this.sendAsync('POST', opt_body);\n\t}\n\n\t/**\n\t * Sends message with the PUT http verb.\n\t * @param {string=} opt_body Content to be sent as the request's body.\n\t * @return {!CancellablePromise}\n\t */\n\tput(opt_body) {\n\t\treturn this.sendAsync('PUT', opt_body);\n\t}\n\n\t/**\n\t * Adds the authentication information to the request.\n\t * @param {!ClientRequest} clientRequest\n\t * @protected\n\t */\n\tresolveAuthentication_(clientRequest) {\n\t\tif (!this.auth_) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.auth_.hasToken()) {\n\t\t\tclientRequest.header('Authorization', 'Bearer ' + this.auth_.token());\n\t\t} else {\n\t\t\tvar credentials = this.auth_.username() + ':' + this.auth_.password();\n\t\t\tclientRequest.header('Authorization', 'Basic ' + Base64.encodeString(credentials));\n\t\t}\n\t}\n\n\t/**\n\t * Adds a search to this request's {@link Query} instance.\n\t * @param {!Filter|string} filterOrTextOrField If no other arguments\n\t *   are passed to this function, this should be either a `Filter`\n\t *   instance or a text to be used in a match filter. In both cases\n\t *   the filter will be applied to all fields. Another option is to\n\t *   pass this as a field name instead, together with other arguments\n\t *   so the filter can be created.\n\t * @param {string=} opt_textOrOperator Either a text to be used in a\n\t *   match filter, or the operator that should be used.\n\t * @param {*=} opt_value The value to be used by the filter. Should\n\t *   only be passed if an operator was passed as the second argument.\n\t * @chainable\n\t */\n\tsearch(filterOrTextOrField, opt_textOrOperator, opt_value) {\n\t\tthis.getOrCreateQuery_().search(filterOrTextOrField, opt_textOrOperator, opt_value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Uses transport to send request with given method name and body\n\t * asynchronously.\n\t * @param {string} method The HTTP method to be used when sending data.\n\t * @param {string} body Content to be sent as the request's body.\n\t * @return {!CancellablePromise} Deferred request.\n\t */\n\tsendAsync(method, body) {\n\t\tvar transport = this.customTransport_ || TransportFactory.instance().getDefault();\n\n\t\tvar clientRequest = this.createClientRequest_(method, body);\n\n\t\treturn transport.send(clientRequest).then(this.decode);\n\t}\n\n\t/**\n\t * Sets the socket transport\n\t * @param {Object} socket implementation object.\n\t */\n\tstatic socket(socket) {\n\t\tio = socket;\n\t}\n\n\t/**\n\t * Adds a sort query to this request's body.\n\t * @param {string} field The field that the query should be sorted by.\n\t * @param {string=} opt_direction The direction the sort operation should use.\n\t *   If none is given, \"asc\" is used by default.\n\t * @chainnable\n\t */\n\tsort(field, opt_direction) {\n\t\tthis.getOrCreateQuery_().sort(field, opt_direction);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Static factory for creating launchpad client for the given url.\n\t * @param {string} url The url that the client should use for sending requests.\n\t */\n\tstatic url(url) {\n\t\treturn new Launchpad(url).use(this.customTransport_);\n\t}\n\n\t/**\n\t * Static factory for creating launchpad client for the given url.\n\t * @param {string} containerId The container id that the client should use\n\t *   for sending requests.\n\t */\n\tstatic container(containerId) {\n\t\tif (Launchpad.DOMAIN === null) {\n\t\t\treturn Launchpad.url('/');\n\t\t}\n\n\t\treturn new Launchpad.url(containerId + '.' + Launchpad.DOMAIN);\n\t}\n\n\t/**\n\t * Returns the URL used by this client.\n\t */\n\turl() {\n\t\treturn this.url_;\n\t}\n\n\t/**\n\t * Specifies {@link Transport} implementation.\n\t * @param {!Transport} transport The transport implementation that should be used.\n\t */\n\tuse(transport) {\n\t\tthis.customTransport_ = transport;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Creates new socket.io instance. The parameters passed to socket.io\n\t * constructor will be provided:\n\t *\n\t * ```javascript\n\t * Launchpad.url('http://domain:8080/path/a').watch({id: 'myId'}, {foo: true});\n\t * // Equals:\n\t * io('domain:8080/?url=path%2Fa%3Fid%3DmyId', {foo: true});\n\t * ```\n\t *\n\t * @param {Object=} opt_params Params to be sent with the Socket IO request.\n\t * @param {Object=} opt_options Object with Socket IO options.\n\t * @return {!io} Socket IO reference. Server events can be listened on it.\n\t */\n\twatch(opt_params, opt_options) {\n\t\tif (typeof io === 'undefined') {\n\t\t\tthrow new Error('Socket.io client not loaded');\n\t\t}\n\n\t\tvar clientRequest = this.createClientRequest_('GET', opt_params);\n\t\tvar uri = new Uri(clientRequest.url());\n\t\turi.addParametersFromMultiMap(clientRequest.params());\n\n\t\topt_options = opt_options || {\n\t\t\tforceNew: true\n\t\t};\n\t\topt_options.query = 'url=' + encodeURIComponent(uri.getPathname() + uri.getSearch());\n\t\topt_options.path = opt_options.path || uri.getPathname();\n\n\t\treturn io(uri.getHost(), opt_options);\n\t}\n\n\t/**\n\t * Wraps the given `Embodied` instance with a {@link Query} instance if needed.\n\t * @param {Embodied} embodied\n\t * @return {Embodied}\n\t * @protected\n\t */\n\twrapWithQuery_(embodied) {\n\t\tif (embodied instanceof Filter) {\n\t\t\tembodied = Query.filter(embodied);\n\t\t}\n\t\treturn embodied;\n\t}\n}\n\nLaunchpad.isContentTypeJson = function(clientMessage) {\n\tvar contentType = clientMessage.headers().get('content-type') || '';\n\treturn contentType.indexOf('application/json') === 0;\n};\n\n/**\n * The project domain to be used on container requests.\n * @type {string}\n * @static\n */\nLaunchpad.DOMAIN = null;\n\nexport default Launchpad;\n","'use strict';\n\nimport Filter from '../api-query/Filter';\nimport Geo from '../api-query/Geo';\nimport Launchpad from '../api/Launchpad';\nimport Query from '../api-query/Query';\nimport Range from '../api-query/Range';\n\nwindow.Filter = Filter;\nwindow.Geo = Geo;\nwindow.Query = Query;\nwindow.Range = Range;\nwindow.Launchpad = Launchpad;\n"],"sourceRoot":"/source/"}